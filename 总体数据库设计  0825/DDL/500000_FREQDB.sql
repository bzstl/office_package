/*
Navicat Oracle Data Transfer
Oracle Client Version : 11.2.0.2.0

Source Server         : 500000_FREQDB
Source Server Version : 110200
Source Host           : 192.168.201.192:1521
Source Schema         : 500000_FREQDB

Target Server Type    : ORACLE
Target Server Version : 110200
File Encoding         : 65001

Date: 2017-05-19 13:47:05
*/


-- ----------------------------
-- Table structure for RSBT_ANTFEED_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_ANTFEED_R";
CREATE TABLE "500000_FREQDB"."RSBT_ANTFEED_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ANT_WORK_TYPE" VARCHAR2(8 BYTE) NULL ,
"ANT_POLE" VARCHAR2(8 BYTE) NULL ,
"ANT_RPOLE" VARCHAR2(8 BYTE) NULL ,
"ANT_EPOLE" VARCHAR2(8 BYTE) NULL ,
"ANT_TYPE" VARCHAR2(8 BYTE) NULL ,
"ANT_MODEL" VARCHAR2(40 BYTE) NULL ,
"ANT_MENU" VARCHAR2(80 BYTE) NULL ,
"ANT_HIGHT" NUMBER(7,3) NULL ,
"ANT_GAIN" NUMBER(6,3) NULL ,
"ANT_EGAIN" NUMBER(6,3) NULL ,
"ANT_RGAIN" NUMBER(6,3) NULL ,
"ANT_ANGLE" NUMBER(7,4) NULL ,
"ANT_SIZE" VARCHAR2(20 BYTE) NULL ,
"FEED_MENU" VARCHAR2(80 BYTE) NULL ,
"FEED_MODEL" VARCHAR2(40 BYTE) NULL ,
"FEED_LENGTH" NUMBER(6,3) NULL ,
"FEED_LOSE" NUMBER(6,3) NULL ,
"ANT_CODE" NUMBER(36) NULL ,
"FEED_CODE" NUMBER(36) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_ANTFEED_T_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_ANTFEED_T_R";
CREATE TABLE "500000_FREQDB"."RSBT_ANTFEED_T_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"AT_ANT_NO" VARCHAR2(4 BYTE) NULL ,
"AT_SE_B" NUMBER(10,7) NULL ,
"AT_SE_E" NUMBER(10,7) NULL ,
"AT_ANG_B" NUMBER(10,7) NULL ,
"AT_ANG_E" NUMBER(10,7) NULL ,
"AT_RNT" NUMBER(9,3) NULL ,
"AT_BWID" NUMBER(10,7) NULL ,
"AT_LEL" NUMBER(9,3) NULL ,
"AT_SSPEED" NUMBER(9,3) NULL ,
"AT_CCODE" VARCHAR2(20 BYTE) NULL ,
"AT_3DBE" NUMBER(10,7) NULL ,
"AT_3DBR" NUMBER(10,7) NULL ,
"AT_RANG" NUMBER(10,7) NULL ,
"AT_EANG" NUMBER(10,7) NULL ,
"AT_CSGN" VARCHAR2(20 BYTE) NULL ,
"AT_UPDN" VARCHAR2(1 BYTE) NULL ,
"AT_SUM" NUMBER(3) NULL ,
"AT_QUA" VARCHAR2(20 BYTE) NULL ,
"AT_UNIT_TYPE" VARCHAR2(8 BYTE) NULL ,
"AT_H_HPIC" VARCHAR2(80 BYTE) NULL ,
"AT_H_VPIC" VARCHAR2(80 BYTE) NULL ,
"AT_ANT_UPANG" NUMBER(10,7) NULL ,
"AT_ANT_TFCODE" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_APPCLUBS_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_APPCLUBS_R";
CREATE TABLE "500000_FREQDB"."RSBT_APPCLUBS_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CLUBS_NAME" VARCHAR2(80 BYTE) NULL ,
"APP_CLUBS_SUP_ORG" VARCHAR2(80 BYTE) NULL ,
"APP_CLUBS_MEMBER_CODE" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_APPFILELIST_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_APPFILELIST_R";
CREATE TABLE "500000_FREQDB"."RSBT_APPFILELIST_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"APP_FILE_NO" VARCHAR2(40 BYTE) NULL ,
"APP_ATTACHMENT" VARCHAR2(120 BYTE) NULL ,
"APP_FILE_URL" VARCHAR2(120 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_APPFREQ_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_APPFREQ_R";
CREATE TABLE "500000_FREQDB"."RSBT_APPFREQ_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"APP_FREQ_LC" NUMBER(14,7) NULL ,
"APP_FREQ_UC" NUMBER(14,7) NULL ,
"APP_FREQ_LFB" NUMBER(14,7) NULL ,
"APP_FREQ_LFE" NUMBER(14,7) NULL ,
"APP_FREQ_LB" NUMBER(14,7) NULL ,
"APP_FREQ_UFB" NUMBER(14,7) NULL ,
"APP_FREQ_UFE" NUMBER(14,7) NULL ,
"APP_FREQ_UB" NUMBER(14,7) NULL ,
"APP_FREQ_CODE" VARCHAR2(36 BYTE) NULL ,
"APP_FREQ_TYPE" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_APPLY_PA_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_APPLY_PA_R";
CREATE TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_PA_NAME" VARCHAR2(40 BYTE) NOT NULL ,
"APP_PA_GENDER" VARCHAR2(1 BYTE) NOT NULL ,
"APP_PA_BIRTHDAY" DATE NOT NULL ,
"APP_PA_NATION" VARCHAR2(40 BYTE) NOT NULL ,
"APP_PA_DEGREE" VARCHAR2(20 BYTE) NOT NULL ,
"APP_PA_ID_CARD" VARCHAR2(20 BYTE) NOT NULL ,
"APP_PA_SERV_ORG" VARCHAR2(80 BYTE) NULL ,
"APP_PA_SERV_POST" VARCHAR2(6 BYTE) NULL ,
"APP_PA_LIVE_ADDR" VARCHAR2(80 BYTE) NULL ,
"APP_PA_LIVE_POST" VARCHAR2(6 BYTE) NULL ,
"APP_PA_CONTACT_ADDR" VARCHAR2(80 BYTE) NULL ,
"APP_PA_CONTACT_POST" VARCHAR2(6 BYTE) NULL ,
"APP_PA_EMAIL" VARCHAR2(80 BYTE) NULL ,
"APP_PA_ORG_PHONE" VARCHAR2(40 BYTE) NULL ,
"APP_PA_HOME_PHONE" VARCHAR2(40 BYTE) NULL ,
"APP_PA_MOBILE" VARCHAR2(40 BYTE) NULL ,
"APP_PA_OTHER_INFO" VARCHAR2(512 BYTE) NULL ,
"APP_PA_STAT_TYPE" VARCHAR2(8 BYTE) NULL ,
"APP_PA_ENTITY_TYPE" VARCHAR2(1 BYTE) NULL ,
"APP_PA_STAT_ADDR" VARCHAR2(80 BYTE) NULL ,
"APP_PA_OPE_DEGREE" VARCHAR2(20 BYTE) NULL ,
"APP_PA_OPE_CODE" VARCHAR2(20 BYTE) NULL ,
"APP_PA_CALL_SIGN" VARCHAR2(20 BYTE) NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_APPLY_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_APPLY_R";
CREATE TABLE "500000_FREQDB"."RSBT_APPLY_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_GUID" VARCHAR2(36 BYTE) NULL ,
"NET_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_MANAGER_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"APP_TYPE" VARCHAR2(8 BYTE) NOT NULL ,
"APP_SUB_TYPE" VARCHAR2(8 BYTE) NOT NULL ,
"APP_OBJECT_TYPE" VARCHAR2(8 BYTE) NOT NULL ,
"APP_DATE" DATE NULL ,
"APP_FTLB" DATE NOT NULL ,
"APP_FTLE" DATE NOT NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_CODE_DIC
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_CODE_DIC";
CREATE TABLE "500000_FREQDB"."RSBT_CODE_DIC" (
"CO" NUMBER NOT NULL ,
"CN" VARCHAR2(10 BYTE) NOT NULL ,
"CODE_CHI_NAME" VARCHAR2(120 BYTE) NULL ,
"CODE_DATA_TYPE" VARCHAR2(8 BYTE) NULL ,
"CODE_TYPE_CHI_NAME" VARCHAR2(80 BYTE) NULL ,
"CODE_DISCN" NUMBER NOT NULL ,
"CODE_USE_RANGE" VARCHAR2(100 BYTE) NULL ,
"CODE1" VARCHAR2(80 BYTE) NULL ,
"IMPORT_CODE" VARCHAR2(80 BYTE) NULL ,
"IMPORT_NAME" VARCHAR2(120 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_E_SE_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_E_SE_R";
CREATE TABLE "500000_FREQDB"."RSBT_E_SE_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"SE_COMM" NUMBER(7,4) NULL ,
"SE_ANGLE" NUMBER(7,4) NULL ,
"SE_DIS" NUMBER(7,4) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_EAF_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_EAF_R";
CREATE TABLE "500000_FREQDB"."RSBT_EAF_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"EQU_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ANT_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FREQ_GUID" VARCHAR2(36 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_EQU_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_EQU_R";
CREATE TABLE "500000_FREQDB"."RSBT_EQU_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"EQU_TYPE" VARCHAR2(8 BYTE) NULL ,
"EQU_MODEL" VARCHAR2(40 BYTE) NULL ,
"EQU_AUTH" VARCHAR2(40 BYTE) NULL ,
"EQU_MENU" VARCHAR2(80 BYTE) NULL ,
"EQU_CODE" VARCHAR2(40 BYTE) NULL ,
"EQU_PF" VARCHAR2(8 BYTE) NULL ,
"EQU_POW" NUMBER(14,7) NULL ,
"EQU_MB" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_EQU_T_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_EQU_T_R";
CREATE TABLE "500000_FREQDB"."RSBT_EQU_T_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ET_EQU_NO" VARCHAR2(4 BYTE) NULL ,
"ET_AF_TYPE" VARCHAR2(1 BYTE) NULL ,
"ET_POW_U" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_CL" VARCHAR2(20 BYTE) NULL ,
"ET_EQU_TL" NUMBER(9,3) NULL ,
"ET_EQU_RNQ" NUMBER(9,3) NULL ,
"ET_EQU_TYPE_ID" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_NAME" VARCHAR2(80 BYTE) NULL ,
"ET_EQU_CODE" VARCHAR2(10 BYTE) NULL ,
"ET_EQU_ESGN" VARCHAR2(20 BYTE) NULL ,
"ET_EQU_EPOS" VARCHAR2(40 BYTE) NULL ,
"ET_EQU_ATYPE" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_APOS" VARCHAR2(40 BYTE) NULL ,
"ET_EQU_SUM" NUMBER(7) NULL ,
"ET_EQU_EUSE" VARCHAR2(20 BYTE) NULL ,
"ET_EQU_FNTVAL" NUMBER(10,3) NULL ,
"ET_EQU_PUP" NUMBER(10,3) NULL ,
"ET_EQU_PDN" NUMBER(10,3) NULL ,
"ET_EQU_CHRIP" NUMBER(10,3) NULL ,
"ET_EQU_PWID1" NUMBER(10,3) NULL ,
"ET_EQU_PWID2" NUMBER(10,3) NULL ,
"ET_EQU_PR" NUMBER(10,3) NULL ,
"ET_EQU_PF" NUMBER(10,3) NULL ,
"ET_EQU_RF" NUMBER(10,3) NULL ,
"ET_EQU_RF_BAND" NUMBER(10,3) NULL ,
"ET_EIRP" NUMBER(14,7) NULL ,
"ET_EQU_SEN" NUMBER(10,3) NULL ,
"ET_EQU_SENU" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_SENERR" VARCHAR2(10 BYTE) NULL ,
"ET_EQU_RWID" NUMBER(14,7) NULL ,
"ET_EQU_MT" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_CCODE" VARCHAR2(20 BYTE) NULL ,
"ET_EQU_UPU" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_DNU" VARCHAR2(8 BYTE) NULL ,
"ET_EQU_TYPE" VARCHAR2(20 BYTE) NULL ,
"ET_EQU_USE" VARCHAR2(40 BYTE) NULL ,
"ET_EQU_POW_MAX" NUMBER(10,3) NULL ,
"ET_EQU_POW_AVG" NUMBER(10,3) NULL ,
"ET_EQU_UPOW" NUMBER(14,7) NULL ,
"ET_EQU_DPOW" NUMBER(14,7) NULL ,
"ET_EQU_TFCODE" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_FREQ_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_FREQ_R";
CREATE TABLE "500000_FREQDB"."RSBT_FREQ_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FREQ_TYPE" VARCHAR2(1 BYTE) NULL ,
"FREQ_LC" NUMBER(14,7) NULL ,
"FREQ_UC" NUMBER(14,7) NULL ,
"FREQ_EFB" NUMBER(14,7) NULL ,
"FREQ_EFE" NUMBER(14,7) NULL ,
"FREQ_E_BAND" NUMBER(14,7) NULL ,
"FREQ_RFB" NUMBER(14,7) NULL ,
"FREQ_RFE" NUMBER(14,7) NULL ,
"FREQ_R_BAND" NUMBER(14,7) NULL ,
"FREQ_MOD" VARCHAR2(8 BYTE) NULL ,
"FREQ_MB" VARCHAR2(1 BYTE) NULL ,
"FREQ_CODE" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_FREQ_T_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_FREQ_T_R";
CREATE TABLE "500000_FREQDB"."RSBT_FREQ_T_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FT_FREQ_NO" VARCHAR2(2 BYTE) NULL ,
"FT_FREQ_TIMEB" DATE NULL ,
"FT_FREQ_TIMEE" DATE NULL ,
"FT_FREQ_INFO_TYPE" VARCHAR2(8 BYTE) NULL ,
"FT_FREQ_HCL" VARCHAR2(20 BYTE) NULL ,
"FT_FREQ_TYPE" VARCHAR2(1 BYTE) NULL ,
"FT_FREQ_MC" VARCHAR2(8 BYTE) NULL ,
"FT_FREQ_MC1" VARCHAR2(20 BYTE) NULL ,
"FT_FREQ_MC2" VARCHAR2(20 BYTE) NULL ,
"FT_FREQ_MC3" VARCHAR2(20 BYTE) NULL ,
"FT_FREQ_CCODE" VARCHAR2(20 BYTE) NULL ,
"FT_FREQ_CSGN" VARCHAR2(20 BYTE) NULL ,
"FT_FREQ_DUPDN" VARCHAR2(1 BYTE) NULL ,
"FT_FREQ_UNIT_TYPE" VARCHAR2(8 BYTE) NULL ,
"FT_FREQ_FEP" VARCHAR2(8 BYTE) NULL ,
"FT_FREQ_FRP" VARCHAR2(8 BYTE) NULL ,
"FT_FREQ_EPOW" NUMBER(14,7) NULL ,
"FT_FREQ_POWFLAG" VARCHAR2(8 BYTE) NULL ,
"FT_FREQ_EIRP" NUMBER(14,7) NULL ,
"FT_FREQ_POW_MAX" NUMBER(10,3) NULL ,
"FT_FREQ_POW_AVG" NUMBER(10,3) NULL ,
"FT_FREQ_TFCODE" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_LINK_BAK
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_LINK_BAK";
CREATE TABLE "500000_FREQDB"."RSBT_LINK_BAK" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"NET_GUID_A" VARCHAR2(36 BYTE) NULL ,
"STATION_GUID_A" VARCHAR2(36 BYTE) NOT NULL ,
"GUID_EAF_A" VARCHAR2(36 BYTE) NULL ,
"NET_GUID_B" VARCHAR2(36 BYTE) NULL ,
"STATION_GUID_B" VARCHAR2(36 BYTE) NOT NULL ,
"GUID_EAF_B" VARCHAR2(36 BYTE) NULL ,
"BAKDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_LINK_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_LINK_R";
CREATE TABLE "500000_FREQDB"."RSBT_LINK_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"NET_GUID_A" VARCHAR2(36 BYTE) NULL ,
"STATION_GUID_A" VARCHAR2(36 BYTE) NOT NULL ,
"GUID_EAF_A" VARCHAR2(36 BYTE) NULL ,
"NET_GUID_B" VARCHAR2(36 BYTE) NULL ,
"STATION_GUID_B" VARCHAR2(36 BYTE) NOT NULL ,
"GUID_EAF_B" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_NET_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_NET_R";
CREATE TABLE "500000_FREQDB"."RSBT_NET_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FEE_GUID" VARCHAR2(36 BYTE) NULL ,
"ORG_CODE" VARCHAR2(9 BYTE) NOT NULL ,
"NET_NAME" VARCHAR2(80 BYTE) NULL ,
"NET_SVN" VARCHAR2(10 BYTE) NULL ,
"NET_SP" VARCHAR2(8 BYTE) NULL ,
"NET_TS" VARCHAR2(8 BYTE) NULL ,
"NET_BAND" NUMBER(14,7) NULL ,
"NET_AREA" VARCHAR2(8 BYTE) NULL ,
"NET_USE" VARCHAR2(80 BYTE) NULL ,
"NET_SAT_NAME" VARCHAR2(80 BYTE) NULL ,
"NET_LG" VARCHAR2(10 BYTE) NULL ,
"NET_START_DATE" DATE NULL ,
"NET_CONFIRM_DATE" DATE NULL ,
"NET_EXPIRED_DATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_ST_COBJ_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_ST_COBJ_R";
CREATE TABLE "500000_FREQDB"."RSBT_ST_COBJ_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"OBJ_TYPE" VARCHAR2(1 BYTE) NOT NULL ,
"OBJ_NAME" VARCHAR2(80 BYTE) NOT NULL ,
"OBJ_TDI" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_STATION_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_STATION_R";
CREATE TABLE "500000_FREQDB"."RSBT_STATION_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"NET_GUID" VARCHAR2(36 BYTE) NULL ,
"ORG_CODE" VARCHAR2(9 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"STAT_APP_TYPE" VARCHAR2(8 BYTE) NOT NULL ,
"STAT_TDI" VARCHAR2(4 BYTE) NOT NULL ,
"STAT_NAME" VARCHAR2(80 BYTE) NULL ,
"STAT_ADDR" VARCHAR2(80 BYTE) NULL ,
"STAT_AREA_CODE" VARCHAR2(8 BYTE) NULL ,
"STAT_TYPE" VARCHAR2(8 BYTE) NULL ,
"STAT_WORK" VARCHAR2(8 BYTE) NULL ,
"STAT_STATUS" VARCHAR2(8 BYTE) NULL ,
"STAT_EQU_SUM" NUMBER(7) NULL ,
"STAT_LG" NUMBER(10,7) NULL ,
"STAT_LA" NUMBER(10,7) NULL ,
"STAT_AT" NUMBER(6,2) NULL ,
"STAT_DATE_START" DATE NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for RSBT_STATION_T_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."RSBT_STATION_T_R";
CREATE TABLE "500000_FREQDB"."RSBT_STATION_T_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ST_TIME_B" DATE NULL ,
"ST_TIME_E" DATE NULL ,
"ST_LMMTR" VARCHAR2(1 BYTE) NULL ,
"ST_USER_AREA" VARCHAR2(80 BYTE) NULL ,
"ST_TF_CODE" VARCHAR2(40 BYTE) NULL ,
"ST_TF_TRANS_CA_PU" VARCHAR2(8 BYTE) NULL ,
"ST_TF_TRANS_CA_P" NUMBER(14,7) NULL ,
"ST_E_NET_CODE" VARCHAR2(20 BYTE) NULL ,
"ST_E_MULTI_ADDR" VARCHAR2(8 BYTE) NULL ,
"ST_E_COM_AREA" VARCHAR2(8 BYTE) NULL ,
"ST_POS_TYPE" VARCHAR2(8 BYTE) NULL ,
"ST_E_POS" VARCHAR2(40 BYTE) NULL ,
"ST_E_SAT" VARCHAR2(40 BYTE) NULL ,
"ST_E_LG" VARCHAR2(20 BYTE) NULL ,
"ST_B_SGN" VARCHAR2(40 BYTE) NULL ,
"ST_B_LEVEL" VARCHAR2(8 BYTE) NULL ,
"ST_B_BM" VARCHAR2(8 BYTE) NULL ,
"ST_B_EDU" VARCHAR2(1 BYTE) NULL ,
"ST_B_IC" VARCHAR2(1 BYTE) NULL ,
"ST_B_COVER_AREA" VARCHAR2(40 BYTE) NULL ,
"ST_SHIP_TYPE" VARCHAR2(8 BYTE) NULL ,
"ST_CALL_SIGN" VARCHAR2(20 BYTE) NULL ,
"ST_S_MMSI" VARCHAR2(20 BYTE) NULL ,
"ST_S_CS" VARCHAR2(20 BYTE) NULL ,
"ST_SHIP_NAME" VARCHAR2(80 BYTE) NULL ,
"ST_S_PN" VARCHAR2(80 BYTE) NULL ,
"ST_S_AAIC" VARCHAR2(20 BYTE) NULL ,
"ST_S_T" NUMBER(10,2) NULL ,
"ST_S_P" NUMBER(10,2) NULL ,
"ST_A_MODEL" VARCHAR2(40 BYTE) NULL ,
"ST_A_TYPE" VARCHAR2(8 BYTE) NULL ,
"ST_A_CALL" VARCHAR2(1 BYTE) NULL ,
"ST_A_CALL_OI" VARCHAR2(20 BYTE) NULL ,
"ST_A_SGN" VARCHAR2(20 BYTE) NULL ,
"ST_A_ST" NUMBER(10,2) NULL ,
"ST_A_PILOTING" VARCHAR2(1 BYTE) NULL ,
"ST_A_NRM" VARCHAR2(40 BYTE) NULL ,
"ST_R_WAMIN" VARCHAR2(20 BYTE) NULL ,
"ST_R_WAMAX" VARCHAR2(20 BYTE) NULL ,
"ST_R_EMIN" VARCHAR2(20 BYTE) NULL ,
"ST_R_EMAX" VARCHAR2(20 BYTE) NULL ,
"ST_C_CODE" VARCHAR2(40 BYTE) NULL ,
"ST_C_SUM" NUMBER(3) NULL ,
"ST_SERV_R" NUMBER(10,3) NULL ,
"ST_D_TEC_TYPE" VARCHAR2(20 BYTE) NULL ,
"ST_D_TYPE" VARCHAR2(1 BYTE) NULL ,
"ST_ME_SAT_NAME" VARCHAR2(80 BYTE) NULL ,
"ST_ME_STA1" VARCHAR2(80 BYTE) NULL ,
"ST_ME_STA2" VARCHAR2(80 BYTE) NULL ,
"ST_ME_STA3" VARCHAR2(80 BYTE) NULL ,
"ST_ME_STYPE" VARCHAR2(1 BYTE) NULL ,
"ST_ME_NAME1" VARCHAR2(80 BYTE) NULL ,
"ST_ME_NAME2" VARCHAR2(80 BYTE) NULL ,
"ST_ME_LG1" NUMBER(10,7) NULL ,
"ST_ME_LG2" NUMBER(10,7) NULL ,
"ST_ME_FBAND" NUMBER(14,7) NULL ,
"ST_B_TYPE1" VARCHAR2(8 BYTE) NULL ,
"ST_B_TYPE2" VARCHAR2(8 BYTE) NULL ,
"ST_ME_FILE_NO" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_FORM_VALIDATE_STATUS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_FORM_VALIDATE_STATUS";
CREATE TABLE "500000_FREQDB"."T_FORM_VALIDATE_STATUS" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FORM_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(36 BYTE) NOT NULL ,
"STAT_TDI" VARCHAR2(6 BYTE) NULL ,
"STATUS" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_COMM_APPSETTINGS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" (
"KEYID" VARCHAR2(20 BYTE) NOT NULL ,
"KEYNAME" VARCHAR2(50 BYTE) NOT NULL ,
"KEYVALUE" VARCHAR2(100 BYTE) NULL ,
"VALUEDESC" VARCHAR2(100 BYTE) NULL ,
"MODULETYPE" VARCHAR2(10 BYTE) NOT NULL ,
"DESCRIPTION" VARCHAR2(200 BYTE) NULL ,
"DATATYPE" VARCHAR2(10 BYTE) DEFAULT 'TEXT'  NULL ,
"DATAINIT" VARCHAR2(200 BYTE) NULL ,
"ISSHOW" VARCHAR2(1 BYTE) DEFAULT '1'  NOT NULL ,
"CONTROLTYPE" VARCHAR2(20 BYTE) DEFAULT 'TEXTbox'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" IS '系统参数表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."KEYID" IS '键ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."KEYNAME" IS '键名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."KEYVALUE" IS '键值';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."VALUEDESC" IS '键值描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."MODULETYPE" IS '模块类别';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."DESCRIPTION" IS '参数信息描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."DATATYPE" IS '数据类型(sql-查询语句；list-自定义下拉列；text--文本)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."DATAINIT" IS '数据可选值(select id,name form table)(1--男;2--女)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."ISSHOW" IS '是否允许客户配置';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_APPSETTINGS"."CONTROLTYPE" IS '控件类型textbox  combox checkboxlist datebox';

-- ----------------------------
-- Table structure for T_RIM_COMM_DATA_ACL
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL" (
"RESID" VARCHAR2(36 BYTE) NOT NULL ,
"PRINCIPALID" VARCHAR2(36 BYTE) NOT NULL ,
"PRINCIPALTYPE" NUMBER(2) NOT NULL ,
"PERMISSIONVALUE" NUMBER(4) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL" IS '数据访问权限表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_ACL"."RESID" IS '用于唯一确定数据项或数据类别的全局标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_ACL"."PRINCIPALID" IS '主体的标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_ACL"."PRINCIPALTYPE" IS '主体类别，系统中的主体有0--用户、1--角色、2--组织机构、99--所有人等等';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_ACL"."PERMISSIONVALUE" IS '权限值，用户对数据项或数据类别所具备的权限由该值决定';

-- ----------------------------
-- Table structure for T_RIM_COMM_DATA_RES_KEY
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY" (
"RESID" VARCHAR2(36 BYTE) NOT NULL ,
"DATAKEY" VARCHAR2(36 BYTE) NOT NULL ,
"REFTABLE" VARCHAR2(30 BYTE) NOT NULL ,
"AREACODE" VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY" IS '此表用于存储数据项或数据类别的全局标识，相当于额外为某些表（其键值不是全局唯一的）建立一个全局唯一的键';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY"."RESID" IS '全局资源标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY"."DATAKEY" IS '业务数据的键值';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY"."REFTABLE" IS '所参照的表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY"."AREACODE" IS '区域码';

-- ----------------------------
-- Table structure for T_RIM_COMM_DEPARTMENT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" (
"DEPTNAME" VARCHAR2(200 BYTE) NOT NULL ,
"PARENTID" VARCHAR2(36 BYTE) NULL ,
"TEL" VARCHAR2(20 BYTE) NULL ,
"FAX" VARCHAR2(20 BYTE) NULL ,
"EMAIL" VARCHAR2(100 BYTE) NULL ,
"MANAGER" VARCHAR2(40 BYTE) NULL ,
"NOTE" VARCHAR2(600 BYTE) NULL ,
"DEPTLEVEL" NUMBER(2) NOT NULL ,
"DEPTID" VARCHAR2(36 BYTE) NOT NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NOT NULL ,
"DEPTORDER" NUMBER DEFAULT 0  NULL ,
"AREACODE" VARCHAR2(10 BYTE) NULL ,
"DEPTTYPE" VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" IS '部门信息表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."DEPTNAME" IS '部门名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."PARENTID" IS '上级部门ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."TEL" IS '电话';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."FAX" IS '传真';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."EMAIL" IS 'EMail';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."MANAGER" IS '主管领导';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."DEPTLEVEL" IS '级数';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."DEPTORDER" IS '排序字段';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPARTMENT"."AREACODE" IS '所属地市编码';

-- ----------------------------
-- Table structure for T_RIM_COMM_DEPT_EMP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"DIRECT" VARCHAR2(1 BYTE) NOT NULL ,
"EMPNO" VARCHAR2(40 BYTE) NOT NULL ,
"DEPTID" VARCHAR2(36 BYTE) NOT NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" IS '部门、员工关系表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPT_EMP"."ID" IS 'ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPT_EMP"."DIRECT" IS '是否为直属关系''Y''/''N''';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPT_EMP"."EMPNO" IS '员工编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_DEPT_EMP"."DEPTID" IS '部门ID';

-- ----------------------------
-- Table structure for T_RIM_COMM_EMPLOYEE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE" (
"EMPNO" VARCHAR2(6 BYTE) NOT NULL ,
"NAME" VARCHAR2(40 BYTE) NOT NULL ,
"SEX" VARCHAR2(2 BYTE) NULL ,
"NATIONALITY" VARCHAR2(20 BYTE) NULL ,
"BIRTH" DATE NULL ,
"EDUCATION" VARCHAR2(20 BYTE) NULL ,
"PRINCIPALSHIP" VARCHAR2(100 BYTE) NULL ,
"TECHNICALPOST" VARCHAR2(100 BYTE) NULL ,
"MOBILE" VARCHAR2(20 BYTE) NULL ,
"HOMEADDRESS" VARCHAR2(200 BYTE) NULL ,
"POSTALCODE" VARCHAR2(20 BYTE) NULL ,
"HOMETEL" VARCHAR2(20 BYTE) NULL ,
"EMAIL" VARCHAR2(100 BYTE) NULL ,
"NOTE" VARCHAR2(600 BYTE) NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NOT NULL ,
"AREACODE" NUMBER(10) NULL ,
"STATE" VARCHAR2(40 BYTE) NULL ,
"NATIVEPLACE" VARCHAR2(40 BYTE) NULL ,
"GRADUATESCHOOL" VARCHAR2(40 BYTE) NULL ,
"MAJOR" VARCHAR2(40 BYTE) NULL ,
"FIRSTJOBTIME" DATE NULL ,
"POLITYFACE" VARCHAR2(40 BYTE) NULL ,
"WORKTIME" VARCHAR2(40 BYTE) NULL ,
"POLITYRANK" VARCHAR2(40 BYTE) NULL ,
"SAMERANKTIME" VARCHAR2(40 BYTE) NULL ,
"ADDUNITTIME" DATE NULL ,
"REMOVEINFORMATION" VARCHAR2(400 BYTE) NULL ,
"SECONDROLE" VARCHAR2(10 BYTE) NULL ,
"ROLE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE" IS '用工信息表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."EMPNO" IS '用户编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."NAME" IS '姓名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."SEX" IS '性别';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."NATIONALITY" IS '民族';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."BIRTH" IS '生日';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."EDUCATION" IS '学历';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."PRINCIPALSHIP" IS '职务';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."TECHNICALPOST" IS '职称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."MOBILE" IS '手机号码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."HOMEADDRESS" IS '家庭地址';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."POSTALCODE" IS '邮编';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."HOMETEL" IS '家庭电话';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."EMAIL" IS 'EMail';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_EMPLOYEE"."SECONDROLE" IS '第二角色';

-- ----------------------------
-- Table structure for T_RIM_COMM_FUNCTION_ACL
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL" (
"ROLENAME" VARCHAR2(40 BYTE) NOT NULL ,
"FUNCTIONID" VARCHAR2(16 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL" IS '系统功能访问权限列表，记录角色与系统功能使用权限的对应关系';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL"."ROLENAME" IS '角色';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL"."FUNCTIONID" IS '功能标识';

-- ----------------------------
-- Table structure for T_RIM_COMM_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_LOG" (
"LOGID" VARCHAR2(36 BYTE) DEFAULT sys_guid()  NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NULL ,
"USERHOSTIP" VARCHAR2(15 BYTE) NULL ,
"DESCRIPTION" VARCHAR2(255 BYTE) NULL ,
"LOGDATE" DATE NULL ,
"SOURCE" VARCHAR2(255 BYTE) NULL ,
"LOGTYPE" VARCHAR2(20 BYTE) NULL ,
"USERNAME" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_LOG" IS '用于记录系统中的审核日志，主要目的是跟踪用户对系统的使用情况';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."USERID" IS '用户ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."USERHOSTIP" IS '用户所在计算机的IP地址';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."DESCRIPTION" IS '用户所做操作的描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."LOGDATE" IS '时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."SOURCE" IS '来源。所审核的操作所属的模块名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."LOGTYPE" IS '1 错误 2 警告 3 信息';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_LOG"."USERNAME" IS '用户名称';

-- ----------------------------
-- Table structure for T_RIM_COMM_LOGIN_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_LOG" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"BEGINTIME" DATE NULL ,
"ENDTIME" DATE NULL ,
"COUN" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_COMM_LOGIN_MESSGE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_MESSGE";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_MESSGE" (
"USERID" VARCHAR2(250 BYTE) NOT NULL ,
"IPADDR" VARCHAR2(250 BYTE) NOT NULL ,
"STATEFLAGE" VARCHAR2(250 BYTE) NULL ,
"UPLINETIME" DATE NULL ,
"MONTHCOUNT" NUMBER DEFAULT 0  NULL ,
"DAYCOUNT" NUMBER DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_COMM_ROLE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_ROLE";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_ROLE" (
"ROLENAME" VARCHAR2(40 BYTE) NOT NULL ,
"ROLEDESC" VARCHAR2(60 BYTE) NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NOT NULL ,
"AREACODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_ROLE" IS '记录系统中的角色，系统权限根据角色来分配';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE"."ROLENAME" IS '角色名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE"."ROLEDESC" IS '角色描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE"."DELFLAG" IS '删除标志';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE"."AREACODE" IS '区域编码';

-- ----------------------------
-- Table structure for T_RIM_COMM_ROLE_MEMBER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER" (
"ROLENAME" VARCHAR2(40 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER" IS '角色所属成员，建立角色与用户的多对多的映射关系';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER"."ROLENAME" IS '角色名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER"."USERID" IS '用户标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER"."DELFLAG" IS '删除标志';

-- ----------------------------
-- Table structure for T_RIM_COMM_SEQUENCE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_SEQUENCE";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_SEQUENCE" (
"CODE" VARCHAR2(20 BYTE) NOT NULL ,
"VALUE" NUMBER(20) DEFAULT 1  NOT NULL ,
"DESCRIPTION" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_SEQUENCE" IS '序列号表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_SEQUENCE"."CODE" IS '代码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_SEQUENCE"."VALUE" IS '值';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_SEQUENCE"."DESCRIPTION" IS '描述';

-- ----------------------------
-- Table structure for T_RIM_COMM_USER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_COMM_USER";
CREATE TABLE "500000_FREQDB"."T_RIM_COMM_USER" (
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"USERNAME" VARCHAR2(40 BYTE) NOT NULL ,
"EMPNO" VARCHAR2(6 BYTE) NULL ,
"USERDESC" VARCHAR2(60 BYTE) NULL ,
"PASSWORD" VARCHAR2(40 BYTE) NULL ,
"AREACODE" VARCHAR2(6 BYTE) NULL ,
"APPLEPCID" VARCHAR2(128 BYTE) NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NOT NULL ,
"LASTLOGINDATE" DATE NULL ,
"USERCODE" NUMBER(10) NULL ,
"UNIT" VARCHAR2(100 BYTE) NULL ,
"CERT_OID" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_COMM_USER" IS '用户帐号表,存储系统中的登录帐号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."USERID" IS '用户标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."USERNAME" IS '用户名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."EMPNO" IS '所对应的员工编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."USERDESC" IS '用户描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."PASSWORD" IS '密码，已加密的形式存放';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."AREACODE" IS '区域码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."USERCODE" IS '编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."UNIT" IS '所属单位';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_COMM_USER"."CERT_OID" IS '网证通证书ID';

-- ----------------------------
-- Table structure for T_RIM_FRM_ALLOCATION
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_ALLOCATION";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_ALLOCATION" (
"ALLOCATION_ID" VARCHAR2(10 BYTE) NOT NULL ,
"FREQ_START" NUMBER(25,10) NULL ,
"FREQ_END" NUMBER(25,10) NULL ,
"SERVICE_CODE" VARCHAR2(10 BYTE) NULL ,
"SERVICE_TYPE" VARCHAR2(3 BYTE) NULL ,
"ALLOC_ALIAS" VARCHAR2(50 BYTE) NULL ,
"SPECIAL_FOOTNOTE_ALLOCATION" VARCHAR2(200 BYTE) NULL ,
"GENERAL_FOOTNOTE_ALLOCATION" VARCHAR2(200 BYTE) NULL ,
"AREA_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_ALLOTMENT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" (
"ALLOTMENT_ID" NUMBER(12) NOT NULL ,
"FREQ_START" NUMBER(25,10) NULL ,
"FREQ_END" NUMBER(25,10) NULL ,
"FREQ_START1" NUMBER(25,10) NULL ,
"FREQ_END1" NUMBER(25,10) NULL ,
"FREQ_CHANNEL_TYPE" VARCHAR2(1 BYTE) NOT NULL ,
"FREQ_TYPE" VARCHAR2(1 BYTE) NOT NULL ,
"FREQ_WORKING" NUMBER(25,10) NULL ,
"FREQ_WORKING1" NUMBER(25,10) NULL ,
"ALLOTMENT_AREA" VARCHAR2(400 BYTE) NOT NULL ,
"DOCUMENT_CODE" VARCHAR2(500 BYTE) NULL ,
"ADMINISTRATION_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DEPTRRC_CODE" VARCHAR2(40 BYTE) NOT NULL ,
"DATE_START" DATE NULL ,
"DATE_END" DATE NULL ,
"ALLOTMENT_TYPE" VARCHAR2(10 BYTE) NOT NULL ,
"ALLOTMENT_NOTE" VARCHAR2(600 BYTE) NULL ,
"SYSTEM_CODE" VARCHAR2(10 BYTE) NULL ,
"COMPANY_CODE" VARCHAR2(10 BYTE) NULL ,
"COMPANY_NAME" VARCHAR2(100 BYTE) NULL ,
"SYSTEM_NAME" VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_ALLOTMENT_COMPANY
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT_COMPANY";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT_COMPANY" (
"COMPANY_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"ADDRESS" VARCHAR2(200 BYTE) NULL ,
"POST_CODE" VARCHAR2(6 BYTE) NULL ,
"PRINCIPLE" VARCHAR2(20 BYTE) NULL ,
"LINKMAN" VARCHAR2(20 BYTE) NULL ,
"PRINCIPLE_TEL" VARCHAR2(40 BYTE) NULL ,
"LINKMAN_TEL" VARCHAR2(40 BYTE) NULL ,
"EMAIL" VARCHAR2(100 BYTE) NULL ,
"FAX" VARCHAR2(40 BYTE) NULL ,
"COMPANY_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_CALLLETTER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"CALL_TYPE" VARCHAR2(100 BYTE) NOT NULL ,
"COMPANY_NAME" VARCHAR2(100 BYTE) NULL ,
"CALL_RANGE" VARCHAR2(300 BYTE) NOT NULL ,
"NUM" NUMBER NOT NULL ,
"DEPT_CODE" VARCHAR2(100 BYTE) NULL ,
"NOTE" VARCHAR2(400 BYTE) NULL ,
"CALL_RANGE1" VARCHAR2(300 BYTE) NULL ,
"NUM1" NUMBER NULL ,
"DOUBLERANGE" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_CALLTYPE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_CALLTYPE";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_CALLTYPE" (
"CALL_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"RULE" VARCHAR2(500 BYTE) NULL ,
"ISAMATEUR" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_DOCUMENT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" (
"DOCUMENT_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"DOCUMENT_NAME" VARCHAR2(200 BYTE) NOT NULL ,
"DOCUMENT_TYPE_ID" VARCHAR2(10 BYTE) NOT NULL ,
"ADMINISTRATION" VARCHAR2(100 BYTE) NOT NULL ,
"DOCUMENT_DATE" DATE NOT NULL ,
"DOCUMENT_CONTENT" VARCHAR2(1000 BYTE) NULL ,
"FILE_NAME" VARCHAR2(100 BYTE) NULL ,
"FILE_DIR" VARCHAR2(30 BYTE) NULL ,
"DOCUMENT_INDEX" VARCHAR2(300 BYTE) NULL ,
"DISTRIBUTE" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_DOCUMENT_TYPE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT_TYPE";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT_TYPE" (
"DOCUMENT_TYPE_ID" VARCHAR2(10 BYTE) NOT NULL ,
"DOCUMENT_TYPE_NAME" VARCHAR2(50 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_EMERGENCY_FREQ
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_EMERGENCY_FREQ";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_EMERGENCY_FREQ" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"DEPT_NO" VARCHAR2(9 BYTE) NULL ,
"FREQ_TYPE" VARCHAR2(1 BYTE) NULL ,
"FREQ" NUMBER(25,10) NULL ,
"BANDWIDTH" NUMBER(25,10) NULL ,
"FRE_LOW" NUMBER(25,10) NULL ,
"FRE_UP" NUMBER(25,10) NULL ,
"OPER_KIND" VARCHAR2(10 BYTE) NULL ,
"AREA_CODE" VARCHAR2(400 BYTE) NULL ,
"USED_ORG" VARCHAR2(36 BYTE) NULL ,
"DOCUMENT_CODE" VARCHAR2(300 BYTE) NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_FOOTNOTE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_FOOTNOTE";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_FOOTNOTE" (
"FOOTNOTE_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"FOOTNOTE_PROPERTY" VARCHAR2(10 BYTE) NOT NULL ,
"FOOTNOTE_CLASS" VARCHAR2(10 BYTE) NOT NULL ,
"FOOTNOTE_CONTENT" VARCHAR2(4000 BYTE) NULL ,
"FOOTNOTE_NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_FOREIGN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_FOREIGN";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_FOREIGN" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ITEMNAME" VARCHAR2(200 BYTE) NULL ,
"CREATEDATE" DATE NULL ,
"CONTENT" VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_FREQ_ASSIGN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_ASSIGN";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_ASSIGN" (
"ASSIGN_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"DEPT_ASSIGN" VARCHAR2(9 BYTE) NOT NULL ,
"FREQWORKING" NUMBER(25,10) NULL ,
"FREQ_START" NUMBER(25,10) NULL ,
"FREQ_END" NUMBER(25,10) NULL ,
"TYPES" VARCHAR2(2 BYTE) NULL ,
"BAND" NUMBER(25,10) NULL ,
"NOTE" VARCHAR2(400 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_FREQ_PAY
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" (
"PAY_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FREQ_APPROVE_DATE" DATE NOT NULL ,
"STAT_APPROVE_DATE" DATE NULL ,
"FEE_DERATE_PROPORTION" NUMBER(4,3) NOT NULL ,
"FEE_DERATE_ACCORDING" VARCHAR2(36 BYTE) NULL ,
"FEE_BILL" NUMBER(11,2) NOT NULL ,
"FEE_PAYMENT" NUMBER(11,2) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_LAYOUT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" (
"LAYOUT_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"FREQ_START" NUMBER(25,10) NOT NULL ,
"FREQ_END" NUMBER(25,10) NOT NULL ,
"FREQ_START0" NUMBER(25,10) NULL ,
"FREQ_END0" NUMBER(25,10) NULL ,
"DOCUMENT_CODE" VARCHAR2(500 BYTE) NULL ,
"LAYOUT_BAND" VARCHAR2(2 BYTE) NOT NULL ,
"CHANNEL_TYPE" VARCHAR2(2 BYTE) NOT NULL ,
"LAYOUT_NOTE" VARCHAR2(400 BYTE) NULL ,
"LAYOUT_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"SYSTEM_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_LAYOUT_CONFIG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_CONFIG";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_CONFIG" (
"CHANNEL_CODE" VARCHAR2(40 BYTE) NOT NULL ,
"FREQ_WORKING" NUMBER(25,10) NULL ,
"FREQ_START" NUMBER(25,10) NULL ,
"FREQ_END" NUMBER(25,10) NULL ,
"CHANNEL_CODE1" VARCHAR2(50 BYTE) NULL ,
"FREQ_WORKING1" NUMBER(25,10) NULL ,
"FREQ_START1" NUMBER(25,10) NULL ,
"FREQ_END1" NUMBER(25,10) NULL ,
"CONFIG_NOTE" VARCHAR2(400 BYTE) NULL ,
"CONFIG_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"GROUP_CODE" VARCHAR2(10 BYTE) NULL ,
"LAYOUT_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_LAYOUT_GROUP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_GROUP";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_GROUP" (
"GROUP_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"FREQ_DISTINCE" NUMBER(25,10) NULL ,
"FREQ_EMITWIDTH" NUMBER(25,10) NULL ,
"EMIT_RECE_DISTINCE" NUMBER(25,10) NULL ,
"CHANNEL_COUNT" NUMBER(4) NULL ,
"GROUP_NOTE" VARCHAR2(400 BYTE) NULL ,
"TRANSFERS_NOTE" VARCHAR2(400 BYTE) NULL ,
"CHANNEL_CLASS" VARCHAR2(2 BYTE) NOT NULL ,
"GROUP_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"LAYOUT_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_PROTECTED_FREQ
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_PROTECTED_FREQ";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_PROTECTED_FREQ" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"DEPT_NO" VARCHAR2(9 BYTE) NULL ,
"FREQ_TYPE" VARCHAR2(1 BYTE) NULL ,
"FREQ" NUMBER(25,10) NULL ,
"BANDWIDTH" NUMBER(25,10) NULL ,
"FRE_LOW" NUMBER(25,10) NULL ,
"FRE_UP" NUMBER(25,10) NULL ,
"OPER_KIND" VARCHAR2(10 BYTE) NULL ,
"AREA_CODE" VARCHAR2(400 BYTE) NULL ,
"USED_ORG" VARCHAR2(36 BYTE) NULL ,
"DOCUMENT_CODE" VARCHAR2(300 BYTE) NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_REGION_LAYOUT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" (
"LAYOUT_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"FREQ_START" NUMBER(25,10) NOT NULL ,
"FREQ_END" NUMBER(25,10) NOT NULL ,
"FREQ_START0" NUMBER(25,10) NULL ,
"FREQ_END0" NUMBER(25,10) NULL ,
"DOCUMENT_CODE" VARCHAR2(500 BYTE) NULL ,
"LAYOUT_BAND" VARCHAR2(2 BYTE) NOT NULL ,
"CHANNEL_TYPE" VARCHAR2(2 BYTE) NOT NULL ,
"LAYOUT_NOTE" VARCHAR2(400 BYTE) NULL ,
"LAYOUT_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"SYSTEM_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_REGION_LAYOUT_CONFIG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_CONFIG";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_CONFIG" (
"CHANNEL_CODE" VARCHAR2(40 BYTE) NOT NULL ,
"FREQ_WORKING" NUMBER(25,10) NULL ,
"FREQ_START" NUMBER(25,10) NULL ,
"FREQ_END" NUMBER(25,10) NULL ,
"CHANNEL_CODE1" VARCHAR2(50 BYTE) NULL ,
"FREQ_WORKING1" NUMBER(25,10) NULL ,
"FREQ_START1" NUMBER(25,10) NULL ,
"FREQ_END1" NUMBER(25,10) NULL ,
"CONFIG_NOTE" VARCHAR2(400 BYTE) NULL ,
"CONFIG_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"GROUP_CODE" VARCHAR2(10 BYTE) NULL ,
"LAYOUT_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_REGION_LAYOUT_GROUP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_GROUP";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_GROUP" (
"GROUP_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"FREQ_DISTINCE" NUMBER(25,10) NULL ,
"FREQ_EMITWIDTH" NUMBER(25,10) NULL ,
"EMIT_RECE_DISTINCE" NUMBER(25,10) NULL ,
"CHANNEL_COUNT" NUMBER(4) NULL ,
"GROUP_NOTE" VARCHAR2(400 BYTE) NULL ,
"TRANSFERS_NOTE" VARCHAR2(400 BYTE) NULL ,
"CHANNEL_CLASS" VARCHAR2(2 BYTE) NOT NULL ,
"GROUP_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"LAYOUT_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_SERVICE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_SERVICE";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_SERVICE" (
"SERVICE_NAME" VARCHAR2(80 BYTE) NOT NULL ,
"SERVICE_COLOR" NUMBER(12) NULL ,
"ISCUTLINE" VARCHAR2(1 BYTE) NULL ,
"PARENTSERVICE" VARCHAR2(80 BYTE) NULL ,
"SERVICE_CODE" VARCHAR2(10 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_FRM_SYSTEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_FRM_SYSTEM";
CREATE TABLE "500000_FREQDB"."T_RIM_FRM_SYSTEM" (
"SYSTEM_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"SYSTEM_NOTE" VARCHAR2(400 BYTE) NULL ,
"SYSTEM_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"SERVICE_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_IMS_SHORTCUT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT";
CREATE TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"MENUORDER" NUMBER NOT NULL ,
"STATUS" VARCHAR2(2 BYTE) DEFAULT '1'  NOT NULL ,
"MENUNAME" VARCHAR2(100 BYTE) NULL ,
"MENUURL" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT" IS ' 快捷方式表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_IMS_SHORTCUT"."GUID" IS '唯一标示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_IMS_SHORTCUT"."USERID" IS '用户编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_IMS_SHORTCUT"."MENUORDER" IS '菜单序号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_IMS_SHORTCUT"."STATUS" IS '是否有效';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_IMS_SHORTCUT"."MENUNAME" IS '菜单名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_IMS_SHORTCUT"."MENUURL" IS '菜单路径';

-- ----------------------------
-- Table structure for T_RIM_OA_ADDRESSLIST
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_ADDRESSLIST";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_ADDRESSLIST" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"UNAME" VARCHAR2(40 BYTE) NULL ,
"DEPTNAME" VARCHAR2(40 BYTE) NULL ,
"ROLENAME" VARCHAR2(40 BYTE) NULL ,
"SEX" VARCHAR2(1 BYTE) NULL ,
"MOBITETELE" VARCHAR2(20 BYTE) NULL ,
"TELEPHONE" VARCHAR2(20 BYTE) NULL ,
"EXIGRER" VARCHAR2(20 BYTE) NULL ,
"EXIGETELE" VARCHAR2(20 BYTE) NULL ,
"CTYPE" VARCHAR2(2 BYTE) NULL ,
"CREATER" VARCHAR2(40 BYTE) NULL ,
"MAIL" VARCHAR2(100 BYTE) NULL ,
"ISINFO" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ADDRESSLIST"."CREATER" IS '创建人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ADDRESSLIST"."MAIL" IS '邮箱';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ADDRESSLIST"."ISINFO" IS '是否是个人信息';

-- ----------------------------
-- Table structure for T_RIM_OA_ARCHIVE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE" (
"ARCHIVEID" VARCHAR2(36 BYTE) NOT NULL ,
"ARCHIVENO" VARCHAR2(50 BYTE) NULL ,
"RECEIVERNO" VARCHAR2(50 BYTE) NULL ,
"ARCHIVETYPE" CHAR(1 BYTE) NULL ,
"SUBJECT" VARCHAR2(512 BYTE) NULL ,
"KEYWORDS" VARCHAR2(128 BYTE) NULL ,
"ARCHIVECLASS" VARCHAR2(2 BYTE) NULL ,
"URGENCY" VARCHAR2(2 BYTE) NULL ,
"RECEIVER_MAIN" VARCHAR2(256 BYTE) NULL ,
"RECEIVER_CC" VARCHAR2(256 BYTE) NULL ,
"SECRECY" VARCHAR2(2 BYTE) NULL ,
"SECRECYDATE" DATE NULL ,
"NUM" NUMBER(8) NULL ,
"CREATORDEPARTMENT" VARCHAR2(256 BYTE) NULL ,
"CREATOR" VARCHAR2(128 BYTE) NULL ,
"CREATORTEL" VARCHAR2(50 BYTE) NULL ,
"COMPANY" VARCHAR2(256 BYTE) NULL ,
"ARCHIVEDATE" DATE NULL ,
"SIGNER" VARCHAR2(128 BYTE) NULL ,
"STATUS" CHAR(1 BYTE) DEFAULT 0  NULL ,
"AREACODE" VARCHAR2(20 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE" IS '公文表（收、发文公文审批表）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."ARCHIVEID" IS '公文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."ARCHIVENO" IS '办文文号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."RECEIVERNO" IS '来文文号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."ARCHIVETYPE" IS '公文类别R:收文/S:发文';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."SUBJECT" IS '标题';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."KEYWORDS" IS '主题词';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."ARCHIVECLASS" IS '公文类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."URGENCY" IS '紧急度';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."RECEIVER_MAIN" IS '主送';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."RECEIVER_CC" IS '抄送';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."SECRECY" IS '保密级';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."SECRECYDATE" IS '保密期限';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."NUM" IS '份数';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."CREATORDEPARTMENT" IS '拟稿部门';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."CREATOR" IS '拟稿人/登记人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."CREATORTEL" IS '拟稿人电话';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."COMPANY" IS '公文发布单位';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."ARCHIVEDATE" IS '成文日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."SIGNER" IS '签发人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."STATUS" IS '状态';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE"."AREACODE" IS '本地区编码';

-- ----------------------------
-- Table structure for T_RIM_OA_ARCHIVE_DELEGATE_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"USERID" VARCHAR2(50 BYTE) NULL ,
"DELEGATEUSERID" VARCHAR2(50 BYTE) NULL ,
"NOTE" VARCHAR2(4000 BYTE) NULL ,
"USERNAME" VARCHAR2(50 BYTE) NULL ,
"DELEGATEUSERNAME" VARCHAR2(50 BYTE) NULL ,
"DELEGATEFLAG" VARCHAR2(10 BYTE) DEFAULT 0  NULL ,
"DELEGATETIME" DATE NULL ,
"INTERDELEGATEUSERID" VARCHAR2(50 BYTE) NULL ,
"INTERDELEGATEUSERNAME" VARCHAR2(50 BYTE) NULL ,
"DELEGATEFINISHTIME" DATE NULL ,
"DELEGATEFINISHUSERID" VARCHAR2(50 BYTE) NULL ,
"DELEGATEFINISHUSERNAME" VARCHAR2(50 BYTE) NULL ,
"ISALERT" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."USERID" IS '用户ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."DELEGATEUSERID" IS '委托人ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."USERNAME" IS '用户名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."DELEGATEUSERNAME" IS '委托人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."DELEGATEFLAG" IS '委托标记，0不可继续委托，1可继续委托';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."INTERDELEGATEUSERID" IS '中间委托人ID （用户二级委托）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."INTERDELEGATEUSERNAME" IS '中间委托人（用户二级委托）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."DELEGATEFINISHTIME" IS '取消委托时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."DELEGATEFINISHUSERID" IS '取消委托人ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."DELEGATEFINISHUSERNAME" IS '取消委托人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG"."ISALERT" IS '是否提醒，0：未提醒  1已提醒';

-- ----------------------------
-- Table structure for T_RIM_OA_ARCHIVE_DELEGATEUSER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"USERID" VARCHAR2(50 BYTE) NULL ,
"DELEGATEUSERID" VARCHAR2(50 BYTE) NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL ,
"USERNAME" VARCHAR2(50 BYTE) NULL ,
"DELEGATEUSERNAME" VARCHAR2(50 BYTE) NULL ,
"DELEGATEFLAG" VARCHAR2(10 BYTE) DEFAULT 0  NULL ,
"DELEGATETIME" DATE NULL ,
"INTERDELEGATEUSERID" VARCHAR2(50 BYTE) NULL ,
"INTERDELEGATEUSERNAME" VARCHAR2(50 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."USERID" IS '用户ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."DELEGATEUSERID" IS '委托人ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."USERNAME" IS '用户名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."DELEGATEUSERNAME" IS '委托人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."DELEGATEFLAG" IS '委托标记，0不可继续委托，1可继续委托';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."INTERDELEGATEUSERID" IS '中间委托人ID （用户二级委托）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER"."INTERDELEGATEUSERNAME" IS '中间委托人（用户二级委托）';

-- ----------------------------
-- Table structure for T_RIM_OA_ARCHIVE_INFORM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_INFORM";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_INFORM" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"SUBJECT" VARCHAR2(200 BYTE) NULL ,
"USERID" VARCHAR2(1000 BYTE) NULL ,
"NOTE" VARCHAR2(1000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_DOC
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_DOC";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_DOC" (
"DOCID" VARCHAR2(36 BYTE) NOT NULL ,
"DOCNAME" VARCHAR2(200 BYTE) NULL ,
"DOCDESC" VARCHAR2(1000 BYTE) NULL ,
"SECURITYTYPE" VARCHAR2(36 BYTE) NULL ,
"KEEPYEAR" NUMBER(3) NULL ,
"PAGENUM" NUMBER(6) NULL ,
"CREATOR" VARCHAR2(60 BYTE) NULL ,
"CREATETIME" DATE NULL ,
"DOCLIB" VARCHAR2(36 BYTE) NOT NULL ,
"DOCFOLDER" VARCHAR2(36 BYTE) NOT NULL ,
"REFDATA" VARCHAR2(36 BYTE) NULL ,
"REFDATAVIEWER" VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_DOC" IS '档案';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."DOCID" IS '主键ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."DOCNAME" IS '名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."DOCDESC" IS '档案详细说明';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."SECURITYTYPE" IS '档案安全类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."KEEPYEAR" IS '保存期限（年）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."PAGENUM" IS '文件页数';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."CREATOR" IS '档案创建人名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."CREATETIME" IS '档案创建日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."DOCLIB" IS '所属档案库';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."DOCFOLDER" IS '所属文件夹';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."REFDATA" IS '所关联数据的资源DOCID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC"."REFDATAVIEWER" IS '所关联数据的查看器的DOCID';

-- ----------------------------
-- Table structure for T_RIM_OA_DOC_FOLDER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER" (
"FOLDERID" VARCHAR2(36 BYTE) NOT NULL ,
"PARENT" VARCHAR2(36 BYTE) NOT NULL ,
"FOLDERNAME" VARCHAR2(60 BYTE) NULL ,
"CREATOR" VARCHAR2(60 BYTE) NULL ,
"CREATETIME" DATE NULL ,
"LIBID" VARCHAR2(36 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER" IS '档案目录';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_FOLDER"."FOLDERID" IS '主键ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_FOLDER"."PARENT" IS '父对象的标识（可能是文档库，也可能是文件夹）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_FOLDER"."FOLDERNAME" IS '名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_FOLDER"."CREATOR" IS '创建人名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_FOLDER"."CREATETIME" IS '创建日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_FOLDER"."LIBID" IS '所属档案库';

-- ----------------------------
-- Table structure for T_RIM_OA_DOC_LIB
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_DOC_LIB";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_DOC_LIB" (
"LIBID" VARCHAR2(36 BYTE) NOT NULL ,
"LIBNAME" VARCHAR2(60 BYTE) NULL ,
"LIBDESC" VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_DOC_LIB" IS '档案库';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_LIB"."LIBID" IS '档案库主键ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_LIB"."LIBNAME" IS '档案库名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_LIB"."LIBDESC" IS '详细说明';

-- ----------------------------
-- Table structure for T_RIM_OA_DOC_SECURITYTYPE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE" (
"SECURITYTYPEID" VARCHAR2(36 BYTE) NOT NULL ,
"SECURITYTYPENAME" VARCHAR2(60 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE" IS '档案安全类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE"."SECURITYTYPEID" IS '档案安全类型ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE"."SECURITYTYPENAME" IS '档案安全类型名称';

-- ----------------------------
-- Table structure for T_RIM_OA_DOC_WFNOTE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"ACTIVITY" VARCHAR2(40 BYTE) NULL ,
"ACTOR" VARCHAR2(50 BYTE) NULL ,
"PROCESSDATE" DATE NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL ,
"REFDATA" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE" IS '此表用于存放从旧版OA中迁移过来的流程中间结果';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE"."ID" IS '此字段仅作主键用';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE"."ACTIVITY" IS '步骤名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE"."ACTOR" IS '处理人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE"."PROCESSDATE" IS '处理时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE"."NOTE" IS '处理意见';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE"."REFDATA" IS '所关联数据的资源ID';

-- ----------------------------
-- Table structure for T_RIM_OA_MEMORABILIA
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_MEMORABILIA";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_MEMORABILIA" (
"UNIQUEID" VARCHAR2(36 BYTE) NOT NULL ,
"MENTYPE" VARCHAR2(36 BYTE) NULL ,
"CONTENT" VARCHAR2(1000 BYTE) NULL ,
"RECORDER" VARCHAR2(36 BYTE) NULL ,
"RECORDDATE" DATE NULL ,
"TITLE" VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_NEWS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_NEWS";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_NEWS" (
"UNIQUEID" VARCHAR2(36 BYTE) NOT NULL ,
"TITLE" VARCHAR2(100 BYTE) NULL ,
"CONTENT" CLOB NULL ,
"PUBLISHERID" VARCHAR2(36 BYTE) NULL ,
"CLASSID" VARCHAR2(36 BYTE) NULL ,
"PUBLISHDATE" DATE NULL ,
"EFFECTIVEDATE" DATE NULL ,
"DOWNATTACHMENT" VARCHAR2(1 BYTE) NULL ,
"STATUS" VARCHAR2(36 BYTE) NULL ,
"READFLAQ" NUMBER(25,10) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_NEWSREVIEW
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_NEWSREVIEW";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_NEWSREVIEW" (
"UNIQUEID" VARCHAR2(36 BYTE) NOT NULL ,
"NEWSID" VARCHAR2(36 BYTE) NULL ,
"CONTENT" VARCHAR2(1000 BYTE) NULL ,
"REVIEWERID" VARCHAR2(36 BYTE) NULL ,
"APPLYDATA" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_NOTICE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_NOTICE";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_NOTICE" (
"UNIQUEID" VARCHAR2(250 BYTE) NOT NULL ,
"TITLE" VARCHAR2(250 BYTE) NULL ,
"CONTENT" CLOB NULL ,
"PUBLISHERID" VARCHAR2(250 BYTE) NULL ,
"CLASSID" VARCHAR2(250 BYTE) NULL ,
"PUBLISHDATE" DATE NULL ,
"EFFECTIVEDATE" DATE NULL ,
"DOWNATTACHMENT" VARCHAR2(250 BYTE) NULL ,
"STATUS" VARCHAR2(36 BYTE) NULL ,
"READFLAQ" VARCHAR2(250 BYTE) NULL ,
"APPROVER" VARCHAR2(250 BYTE) NULL ,
"APPROVERMESSAGE" VARCHAR2(250 BYTE) NULL ,
"MESSAGE" VARCHAR2(1000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_NOTICEATTACHMENT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_NOTICEATTACHMENT";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_NOTICEATTACHMENT" (
"UNIQUEID" VARCHAR2(250 BYTE) NOT NULL ,
"NOTICEID" VARCHAR2(250 BYTE) NULL ,
"ATTACHMENTPATH" VARCHAR2(250 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_NOTICECLASS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_NOTICECLASS";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_NOTICECLASS" (
"CLASSID" VARCHAR2(250 BYTE) NOT NULL ,
"CLASSCONTEXT" VARCHAR2(250 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_NOTICEREADER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_NOTICEREADER";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_NOTICEREADER" (
"UNIQUEID" VARCHAR2(250 BYTE) NOT NULL ,
"NOTICEID" VARCHAR2(250 BYTE) NULL ,
"DEPTIDS" VARCHAR2(250 BYTE) NULL ,
"ROLEIDS" VARCHAR2(250 BYTE) NULL ,
"USERIDS" VARCHAR2(250 BYTE) NULL ,
"READFLAG" VARCHAR2(30 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_PROPERTYMANAGEMENT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_PROPERTYMANAGEMENT";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_PROPERTYMANAGEMENT" (
"UNIQUEID" VARCHAR2(36 BYTE) NOT NULL ,
"PROPERTYNAME" VARCHAR2(50 BYTE) NULL ,
"MANAGEMENTCO" VARCHAR2(50 BYTE) NULL ,
"MANAGEMENTFEE" VARCHAR2(8 BYTE) NULL ,
"STARTDATE" DATE NULL ,
"ENDDATE" DATE NULL ,
"PRINCIPAL" VARCHAR2(30 BYTE) NULL ,
"PRINCIPALPHONE" VARCHAR2(15 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL ,
"REMARK" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_OA_TYPE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_TYPE";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_TYPE" (
"TUID" VARCHAR2(10 BYTE) NOT NULL ,
"ITEMID" VARCHAR2(100 BYTE) NOT NULL ,
"ITEMNAME" VARCHAR2(100 BYTE) NOT NULL ,
"TYPEID" VARCHAR2(10 BYTE) NOT NULL ,
"TYPENAME" VARCHAR2(30 BYTE) NOT NULL ,
"TYPEORDER" NUMBER NULL ,
"TYPEDESC" VARCHAR2(100 BYTE) NULL ,
"OPTTYPE" CHAR(1 BYTE) DEFAULT '0'  NOT NULL ,
"OPTDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_OA_TYPE" IS '类型代码表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."TUID" IS '唯一编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."ITEMID" IS '类型项目ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."ITEMNAME" IS '类型项目名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."TYPEID" IS '类型ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."TYPENAME" IS '类型名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."TYPEORDER" IS '显示顺序';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_OA_TYPE"."TYPEDESC" IS '类型描述';

-- ----------------------------
-- Table structure for T_RIM_OA_UPLOADFILE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_OA_UPLOADFILE";
CREATE TABLE "500000_FREQDB"."T_RIM_OA_UPLOADFILE" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"MISSIVEGUID" VARCHAR2(36 BYTE) NULL ,
"FILENAME" VARCHAR2(500 BYTE) NULL ,
"RESID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_ALERT_INFO
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" (
"OBJECT_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"OBJECT_TYPE" NUMBER NOT NULL ,
"PRINT_COUNT" NUMBER DEFAULT 0  NOT NULL ,
"ISALERT" VARCHAR2(1 BYTE) DEFAULT 1  NOT NULL ,
"END_DATE" DATE DEFAULT SYSDATE  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" IS '提醒信息记录表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_ALERT_INFO"."OBJECT_GUID" IS '对象标识列';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_ALERT_INFO"."OBJECT_TYPE" IS '对象类型(0频率; 1执照; 2费用)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_ALERT_INFO"."PRINT_COUNT" IS '通知打印次数';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_ALERT_INFO"."ISALERT" IS '是否再次提醒(0假; 1真)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_ALERT_INFO"."END_DATE" IS '定期不再提醒的结束时间';

-- ----------------------------
-- Table structure for T_RIM_RSM_ANTE_DATA
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_ANTE_DATA";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_ANTE_DATA" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"MODEL_NO" VARCHAR2(400 BYTE) NULL ,
"TYPE" VARCHAR2(2 BYTE) NULL ,
"APPR_CODE" VARCHAR2(20 BYTE) NULL ,
"MANUFACTURER" VARCHAR2(60 BYTE) NULL ,
"FB_CONT" NUMBER(10,2) NULL ,
"DIRE_COEF" NUMBER(10,2) NULL ,
"DIST_DEGREE" NUMBER(10,2) NULL ,
"ISOL_DEGREE" NUMBER(10,2) NULL ,
"POLA" VARCHAR2(8 BYTE) NULL ,
"ANTE_COEF" NUMBER(10,2) NULL ,
"WORKFREQ" VARCHAR2(60 BYTE) NULL ,
"ANGLE" NUMBER(6,3) NULL ,
"GAIN" NUMBER(6,3) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_APPLY_PA_WF
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_PA_NAME" VARCHAR2(40 BYTE) NOT NULL ,
"APP_PA_GENDER" VARCHAR2(1 BYTE) NOT NULL ,
"APP_PA_BIRTHDAY" DATE NOT NULL ,
"APP_PA_NATION" VARCHAR2(40 BYTE) NOT NULL ,
"APP_PA_DEGREE" VARCHAR2(20 BYTE) NOT NULL ,
"APP_PA_ID_CARD" VARCHAR2(20 BYTE) NOT NULL ,
"APP_PA_SERV_ORG" VARCHAR2(80 BYTE) NULL ,
"APP_PA_SERV_POST" VARCHAR2(6 BYTE) NULL ,
"APP_PA_LIVE_ADDR" VARCHAR2(80 BYTE) NULL ,
"APP_PA_LIVE_POST" VARCHAR2(6 BYTE) NULL ,
"APP_PA_CONTACT_ADDR" VARCHAR2(80 BYTE) NULL ,
"APP_PA_CONTACT_POST" VARCHAR2(6 BYTE) NULL ,
"APP_PA_EMAIL" VARCHAR2(80 BYTE) NULL ,
"APP_PA_ORG_PHONE" VARCHAR2(40 BYTE) NULL ,
"APP_PA_HOME_PHONE" VARCHAR2(40 BYTE) NULL ,
"APP_PA_MOBILE" VARCHAR2(40 BYTE) NULL ,
"APP_PA_OTHER_INFO" VARCHAR2(512 BYTE) NULL ,
"APP_PA_STAT_TYPE" VARCHAR2(8 BYTE) NULL ,
"APP_PA_ENTITY_TYPE" VARCHAR2(1 BYTE) NULL ,
"APP_PA_STAT_ADDR" VARCHAR2(80 BYTE) NULL ,
"APP_PA_OPE_DEGREE" VARCHAR2(20 BYTE) NULL ,
"APP_PA_OPE_CODE" VARCHAR2(20 BYTE) NULL ,
"APP_PA_CALL_SIGN" VARCHAR2(20 BYTE) NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_APPLY_STATUS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_STATUS";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_STATUS" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APPLY_STATUS" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_APPLY_WF
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_WF";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_WF" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_GUID" VARCHAR2(36 BYTE) NULL ,
"NET_GUID" VARCHAR2(36 BYTE) NULL ,
"ORG_MANAGER_GUID" VARCHAR2(36 BYTE) NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NULL ,
"APP_TYPE" VARCHAR2(8 BYTE) NULL ,
"APP_SUB_TYPE" VARCHAR2(8 BYTE) NULL ,
"APP_OBJECT_TYPE" VARCHAR2(8 BYTE) NULL ,
"APP_DATE" DATE NULL ,
"APP_FTLB" DATE NULL ,
"APP_FTLE" DATE NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL ,
"NET_NAME" VARCHAR2(200 BYTE) NULL ,
"ORG_NAME" VARCHAR2(200 BYTE) NULL ,
"APP_STATE" VARCHAR2(8 BYTE) NULL ,
"CREATOR" VARCHAR2(20 BYTE) NULL ,
"CREATETIME" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_WF" IS '频率、台站申请审批主表(工作流)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."ACCEPT_ID" IS '人辨认受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."GUID" IS '工作流受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."APP_CODE" IS '申请表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."APP_TYPE" IS '申请表类型(F、T、PA)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."APP_DATE" IS '申请日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."APP_FTLB" IS '申请频率使用期限(起)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."APP_FTLE" IS '申请频率使用期限(至)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."MEMO" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."NET_NAME" IS '无线电通信网';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."ORG_NAME" IS '申请单位';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."APP_STATE" IS '审批状态';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."CREATOR" IS '创建人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLY_WF"."CREATETIME" IS '创建时间';

-- ----------------------------
-- Table structure for T_RIM_RSM_APPLYFILELIST_WF
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF" (
"ACCEPT_ID" VARCHAR2(36 BYTE) NOT NULL ,
"FILENAME" VARCHAR2(50 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NULL ,
"STAT_TDI" VARCHAR2(6 BYTE) NULL ,
"OLD_APP_CODE" VARCHAR2(14 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF" IS '频率、台站申请审批明细表(工作流)-----频率申请、台站申请、技术资料表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF"."ACCEPT_ID" IS '受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF"."FILENAME" IS '文件名称(*.txt)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF"."APP_CODE" IS '申请表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF"."STAT_TDI" IS '技术资料表编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_EQU_CHECK
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_EQU_CHECK";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_EQU_CHECK" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ECK_CODE" VARCHAR2(60 BYTE) NOT NULL ,
"ECK_CORP" VARCHAR2(80 BYTE) NULL ,
"ECK_DATE" DATE NULL ,
"ECK_PASS" VARCHAR2(1 BYTE) NULL ,
"REMARK" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQU_CHECK"."ECK_CODE" IS '报告编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQU_CHECK"."ECK_CORP" IS '受检单位';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQU_CHECK"."ECK_DATE" IS '检测时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQU_CHECK"."ECK_PASS" IS '0：不通过，1：通过';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQU_CHECK"."REMARK" IS '备注';

-- ----------------------------
-- Table structure for T_RIM_RSM_EQU_EXPAND
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_EQU_EXPAND";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_EQU_EXPAND" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"EQU_STATUS" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_EQUIP_APPROVE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APPR_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"APPR_CARD_NO" VARCHAR2(40 BYTE) NOT NULL ,
"EQUIP_MODEL" VARCHAR2(80 BYTE) NULL ,
"EQUIP_NAME" VARCHAR2(100 BYTE) NULL ,
"FREQ_RANGE" VARCHAR2(250 BYTE) NULL ,
"EMIT_POWER" VARCHAR2(200 BYTE) NULL ,
"BANDWIDTH" VARCHAR2(200 BYTE) NULL ,
"EMISSION" VARCHAR2(200 BYTE) NULL ,
"MANUFACTURER" VARCHAR2(200 BYTE) NULL ,
"APPR_DATE" DATE NULL ,
"VALID_PERIOD" VARCHAR2(60 BYTE) NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."GUID" IS '设备管理ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."APPR_CODE" IS '核准证号 ';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."APPR_CARD_NO" IS '核准代码 ';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."EQUIP_MODEL" IS '设备型号 ';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."EQUIP_NAME" IS '设备名称 ';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."FREQ_RANGE" IS '频率范围';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."EMIT_POWER" IS '发射功率';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."BANDWIDTH" IS '占用带宽';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."EMISSION" IS '杂散发射限值';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."MANUFACTURER" IS '生产厂商';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."APPR_DATE" IS '核准日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."VALID_PERIOD" IS '有效期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE"."NOTE" IS '备注';

-- ----------------------------
-- Table structure for T_RIM_RSM_INCREDIBLECORP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"ORG_GUID" VARCHAR2(40 BYTE) NULL ,
"CORPORATION" VARCHAR2(60 BYTE) NOT NULL ,
"INC_TYPE" VARCHAR2(1 BYTE) NOT NULL ,
"DESCRIPTION" VARCHAR2(200 BYTE) NOT NULL ,
"INC_DATE" DATE DEFAULT SYSDATE  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP"."GUID" IS '主键ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP"."ORG_GUID" IS '组织机构GUID,FK, 关联RSBT_ORG表的GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP"."CORPORATION" IS '不良信用单位名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP"."INC_TYPE" IS '不良信用类型:1、干扰，2、违规，3、违法，4、提供虚假信息，0、其他';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP"."DESCRIPTION" IS '不良信用描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP"."INC_DATE" IS '不良信用纳入时间';

-- ----------------------------
-- Table structure for T_RIM_RSM_LIC_STATUES
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATION_GUID" VARCHAR2(36 BYTE) NULL ,
"EQUIP_NO" VARCHAR2(6 BYTE) NOT NULL ,
"LICE_OK" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL ,
"NOTE" VARCHAR2(1000 BYTE) NULL ,
"LICENSE_CODE" VARCHAR2(30 BYTE) NOT NULL ,
"RQCODE" VARCHAR2(20 BYTE) NULL ,
"PRINTSTATUS" VARCHAR2(1 BYTE) DEFAULT '0'  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LIC_STATUES"."STATION_GUID" IS '台站GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LIC_STATUES"."EQUIP_NO" IS '设备序号(B类执照) A类执照默认为1';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LIC_STATUES"."LICE_OK" IS '执照状态:0：未发 1:已发 2:停用 3:换发 4:过期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LIC_STATUES"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LIC_STATUES"."LICENSE_CODE" IS '执照编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LIC_STATUES"."PRINTSTATUS" IS '0:未打印，1：已打印';

-- ----------------------------
-- Table structure for T_RIM_RSM_LICE_AUDIT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"LICENSE_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"AUDIT_YEAR" NUMBER(4) NOT NULL ,
"INPUT_DATE" DATE NULL ,
"AUDIT_RESULT" VARCHAR2(200 BYTE) NULL ,
"AUDIT_PASS" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL ,
"ASSESSOR" VARCHAR2(100 BYTE) NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_LICE_CACHE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"LICE_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"USER_ID" VARCHAR2(40 BYTE) NOT NULL ,
"CACHE_TYPE" VARCHAR2(1 BYTE) NOT NULL ,
"CACHE_DATE" DATE NOT NULL ,
"LICE_BEGIN_DATE" DATE NULL ,
"LICE_END_DATE" DATE NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_LICE_PN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"LICENSE_GUID" VARCHAR2(36 BYTE) NULL ,
"LICENSE_CODE" VARCHAR2(30 BYTE) NULL ,
"PAPERNUM" VARCHAR2(20 BYTE) NULL ,
"AREA_CODE" VARCHAR2(8 BYTE) NOT NULL ,
"ENTERDATE" DATE NULL ,
"USEREDTYPE" VARCHAR2(10 BYTE) NULL ,
"NOTE" VARCHAR2(100 BYTE) NULL ,
"RQCODE" VARCHAR2(20 BYTE) NULL ,
"PRINTSTATUS" VARCHAR2(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_LICE_PN_ALLOT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN_ALLOT";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN_ALLOT" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"PAPERNUM_B" VARCHAR2(20 BYTE) NULL ,
"PAPERNUM_E" VARCHAR2(20 BYTE) NULL ,
"ALLOTDATE" DATE NULL ,
"ALLOT_ORG" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_LICE_PRINT_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"LICENSE_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"LICENSE_CODE" VARCHAR2(30 BYTE) NOT NULL ,
"PRINT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"INPUT_STATUS" VARCHAR2(1 BYTE) DEFAULT '1'  NOT NULL ,
"STATUS_DESC" VARCHAR2(200 BYTE) NULL ,
"ASSESSOR" VARCHAR2(100 BYTE) DEFAULT 'cqwuhy'  NOT NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL ,
"RQCODE" VARCHAR2(20 BYTE) NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) DEFAULT '500000'  NOT NULL ,
"LOG_STATUS" VARCHAR2(1 BYTE) DEFAULT '1'  NOT NULL ,
"USE_STATUS" VARCHAR2(1 BYTE) DEFAULT '1'  NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."PRINT_DATE" IS '打印时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."INPUT_STATUS" IS '录入状态  0:已打印，未登记;1:已打印，已登记;2:无效';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."STATUS_DESC" IS '状态描述';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."ASSESSOR" IS '操作人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."RQCODE" IS '二维码序列号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."AREA_CODE" IS '地区编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."LOG_STATUS" IS '打印记录状态：1：正常，2：报废取消，3：故障取消';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG"."USE_STATUS" IS '使用状态：1：在用；0：无效';

-- ----------------------------
-- Table structure for T_RIM_RSM_LICENSEPAPERGD
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"LICEN_COUNT" NUMBER NOT NULL ,
"LICEN_DATE" DATE NOT NULL ,
"LICEN_STATUS" VARCHAR2(1 BYTE) NOT NULL ,
"MEMO" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_MVIEW_REFRESH_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_MVIEW_REFRESH_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_MVIEW_REFRESH_LOG" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STATUS" VARCHAR2(1 BYTE) NULL ,
"START_DATE" DATE NULL ,
"END_DATE" DATE NULL ,
"ASSESSOR" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_OPERATOR
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_OPERATOR";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_OPERATOR" (
"OP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"ORG_NAME" VARCHAR2(80 BYTE) NULL ,
"NAME" VARCHAR2(60 BYTE) NULL ,
"GENDER" VARCHAR2(2 BYTE) NULL ,
"CARDID" VARCHAR2(20 BYTE) NULL ,
"EMAIL" VARCHAR2(50 BYTE) NULL ,
"PHONE" VARCHAR2(50 BYTE) NULL ,
"MOBILEPHONE" VARCHAR2(20 BYTE) NULL ,
"FAX" VARCHAR2(40 BYTE) NULL ,
"ADDRESS" VARCHAR2(100 BYTE) NULL ,
"POST" VARCHAR2(20 BYTE) NULL ,
"WEBSITE" VARCHAR2(100 BYTE) NULL ,
"BIRTHDAY" VARCHAR2(20 BYTE) NULL ,
"OP_TYPE" VARCHAR2(50 BYTE) NULL ,
"QUALIFICATIONID" VARCHAR2(60 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."OP_GUID" IS '主键ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."ORG_NAME" IS '组织机构GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."NAME" IS '操作员姓名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."GENDER" IS '性别';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."CARDID" IS '身份证号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."EMAIL" IS '邮箱';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."PHONE" IS '电话';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."MOBILEPHONE" IS '移动电话';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."FAX" IS '传真';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."ADDRESS" IS '住址';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."POST" IS '邮编';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."WEBSITE" IS '个人网站';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."BIRTHDAY" IS '出生年月';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."OP_TYPE" IS '操作类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_OPERATOR"."QUALIFICATIONID" IS '资格证书编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_ORG_RELEV
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_ORG_RELEV";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_ORG_RELEV" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"PARENT_ORG_GUID" VARCHAR2(40 BYTE) NOT NULL ,
"CHILD_ORG_GUID" VARCHAR2(40 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAREACODE_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NULL ,
"USER_AREA_CODE" VARCHAR2(6 BYTE) NULL ,
"USERID" VARCHAR2(40 BYTE) NULL ,
"IMPDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG"."APP_GUID" IS '申请表GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG"."APP_CODE" IS '申请表编号，冗余字段';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG"."USER_AREA_CODE" IS '用户区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG"."USERID" IS '用户ID';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAREACODE_LOG_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NULL ,
"USER_AREA_CODE" VARCHAR2(6 BYTE) NULL ,
"USERID" VARCHAR2(40 BYTE) NULL ,
"IMPDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R"."APP_GUID" IS '申请表GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R"."APP_CODE" IS '申请表编号，冗余字段';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R"."USER_AREA_CODE" IS '用户区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R"."USERID" IS '用户ID';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_APPLYCOUNT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" (
"ITEM_NO" VARCHAR2(10 BYTE) NOT NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"SUM_COUNT" NUMBER(13,4) NOT NULL ,
"HANDLER" VARCHAR2(100 BYTE) NULL ,
"HANDLE_DATE" DATE DEFAULT sysdate  NOT NULL ,
"CONFIRM" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"CHECKER" VARCHAR2(100 BYTE) NULL ,
"CHECK_DATE" DATE NULL ,
"PAID" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL ,
"SUM_PAID" NUMBER(13,4) DEFAULT 0  NOT NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL ,
"INVOICE_NO" VARCHAR2(40 BYTE) NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT"."INVOICE_NO" IS '发票编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT"."APPLYTYPE" IS '申请表类型T或PA';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_APPLYITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" (
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DECL_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"DERATE" NUMBER(12,4) NOT NULL ,
"AMOUNT" NUMBER(9,4) NOT NULL ,
"SUM_COUNT" NUMBER(12,4) NOT NULL ,
"PAY_RATE" NUMBER(12,4) NOT NULL ,
"SUM_PAY" NUMBER(12,4) NOT NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."APPLY_CODE" IS '申请表编号500020150005';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."DECL_CODE" IS '技术资料表编号V0001或TF0001';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."DEPT_PAY" IS '缴费单位Guid编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."AREA_CODE" IS '地区编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."COUNT_YEAR" IS '缴费年度';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."ITEM_CODE" IS '缴费编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."DERATE" IS '减免比例';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."AMOUNT" IS '数量';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."SUM_COUNT" IS '应缴合计';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."PAY_RATE" IS '收取比例';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."SUM_PAY" IS '实缴合计';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM"."APPLYTYPE" IS '申请类型T或PA';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_APPLYNETITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" (
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"FREQ_NOTE" VARCHAR2(100 BYTE) NOT NULL ,
"DERATE" NUMBER(12,4) NOT NULL ,
"SUM_COUNT" NUMBER(10,2) NOT NULL ,
"PAY_RATE" NUMBER(3) NOT NULL ,
"SUM_PAY" NUMBER(10,2) NOT NULL ,
"DECL_CODE" VARCHAR2(10 BYTE) NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM"."APPLY_CODE" IS '申请表编号500020150002';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM"."DEPT_PAY" IS '缴费单位Guid编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM"."AREA_CODE" IS '地区编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM"."COUNT_YEAR" IS '缴费年度';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM"."DECL_CODE" IS '技术资料表编号V0001或TF0001';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM"."APPLYTYPE" IS ' 申请表类型T或PA';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_APPLYOTHER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" (
"ITEM_ID" VARCHAR2(36 BYTE) NOT NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_TYPE" VARCHAR2(100 BYTE) NULL ,
"TYPE_NAME" VARCHAR2(100 BYTE) NULL ,
"ITEM_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"FEE_PAY" NUMBER(10,2) NOT NULL ,
"ORG_TYPE" VARCHAR2(5 BYTE) NULL ,
"DECL_CODE" VARCHAR2(10 BYTE) NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_DEPTCOUNT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" (
"ITEM_NO" VARCHAR2(10 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"SUM_COUNT" NUMBER(13,4) NOT NULL ,
"HANDLER" VARCHAR2(100 BYTE) NULL ,
"HANDLE_DATE" DATE DEFAULT sysdate  NOT NULL ,
"CONFIRM" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"CHECKER" VARCHAR2(100 BYTE) NULL ,
"CHECK_DATE" DATE NULL ,
"PAID" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL ,
"SUM_PAID" NUMBER(13,4) DEFAULT 0  NOT NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL ,
"INVOICE_NO" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT"."INVOICE_NO" IS '发票编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_DEPTITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" (
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DECL_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"DERATE" NUMBER(12,4) NOT NULL ,
"AMOUNT" NUMBER(9,4) NOT NULL ,
"SUM_COUNT" NUMBER(12,4) NOT NULL ,
"SUM_PAY" NUMBER(12,4) NOT NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."DEPT_PAY" IS '缴费单位GUID编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."AREA_CODE" IS '地区编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."COUNT_YEAR" IS '缴费年份';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."ITEM_CODE" IS '缴费编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."APPLY_CODE" IS '申请表编号500020150005';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."DECL_CODE" IS '技术资料表编号V0001';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."DERATE" IS '减免比例';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."AMOUNT" IS '数量';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."SUM_COUNT" IS '应缴合计';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."SUM_PAY" IS '实缴合计';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM"."APPLYTYPE" IS '申请表类型T或PA';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_DEPTNETITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" (
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"FREQ_NOTE" VARCHAR2(100 BYTE) NOT NULL ,
"AMOUNT" NUMBER(5) NOT NULL ,
"DERATE" NUMBER(12,4) NOT NULL ,
"SUM_COUNT" NUMBER(10,2) NOT NULL ,
"SUM_PAY" NUMBER(10,2) NOT NULL ,
"APPLY_CODE" VARCHAR2(40 BYTE) NULL ,
"DECL_CODE" VARCHAR2(10 BYTE) NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."DEPT_PAY" IS '缴费单位GUID编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."AREA_CODE" IS '地区编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."COUNT_YEAR" IS '计费年份';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."ITEM_CODE" IS '缴费编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."AMOUNT" IS '数量';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."DERATE" IS '减免比例';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."SUM_COUNT" IS '应缴合计';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."SUM_PAY" IS '实缴合计';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."APPLY_CODE" IS '申请表编号500020150005';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."DECL_CODE" IS '技术资料表编号V0001';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM"."APPLYTYPE" IS '申请表类型T或PA';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_DEPTOTHER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" (
"ITEM_ID" VARCHAR2(36 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_TYPE" VARCHAR2(100 BYTE) NULL ,
"TYPE_NAME" VARCHAR2(100 BYTE) NULL ,
"ITEM_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"FEE_PAY" NUMBER(10,2) NOT NULL ,
"ORG_TYPE" VARCHAR2(5 BYTE) NULL ,
"DECL_CODE" VARCHAR2(10 BYTE) NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NULL ,
"APPLYTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUCHECK_APPITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" (
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DECL_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"AMOUNT" NUMBER(9,4) NOT NULL ,
"SUM_PAY" NUMBER(12,4) NOT NULL ,
"APPLYTYPE" VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUCHECKITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" (
"DEPT_PAY" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(5) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DECL_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"AMOUNT" NUMBER(9,4) NOT NULL ,
"SUM_PAY" NUMBER(12,4) NOT NULL ,
"APPLYTYPE" VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUCHECKSTANDARD
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" (
"ITEM_CODE" VARCHAR2(10 BYTE) NOT NULL ,
"ITEM_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"ITEM_TYPE" VARCHAR2(10 BYTE) NOT NULL ,
"TYPE_NAME" VARCHAR2(30 BYTE) NOT NULL ,
"FEE_PAY" NUMBER(11,2) NOT NULL ,
"COUNT_MODE" VARCHAR2(30 BYTE) NOT NULL ,
"SET_DATE" DATE NULL ,
"MEMO" VARCHAR2(512 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUPA_APPLYCOUNT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" (
"ITEM_NO" VARCHAR2(10 BYTE) NOT NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"IDENTIFICATION_CARD" VARCHAR2(20 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"SUM_COUNT" NUMBER(13,4) NOT NULL ,
"HANDLER" VARCHAR2(100 BYTE) NULL ,
"HANDLE_DATE" DATE DEFAULT sysdate  NOT NULL ,
"CONFIRM" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"CHECKER" VARCHAR2(100 BYTE) NULL ,
"CHECK_DATE" DATE NULL ,
"PAID" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL ,
"SUM_PAID" NUMBER(13,4) DEFAULT 0  NOT NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL ,
"INVOICE_NO" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT"."INVOICE_NO" IS '发票编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUPA_APPLYITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" (
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DECL_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"IDENTIFICATION_CARD" VARCHAR2(20 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"AMOUNT" NUMBER(9,4) NOT NULL ,
"SUM_PAY" NUMBER(12,4) NOT NULL ,
"APPLYTYPE" VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUPADEPTCOUNT
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" (
"ITEM_NO" VARCHAR2(10 BYTE) NOT NULL ,
"IDENTIFICATION_CARD" VARCHAR2(20 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(4) NOT NULL ,
"SUM_COUNT" NUMBER(13,4) NOT NULL ,
"HANDLER" VARCHAR2(100 BYTE) NULL ,
"HANDLE_DATE" DATE DEFAULT sysdate  NOT NULL ,
"CONFIRM" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"CHECKER" VARCHAR2(100 BYTE) NULL ,
"CHECK_DATE" DATE NULL ,
"PAID" VARCHAR2(1 BYTE) DEFAULT '0'  NOT NULL ,
"SUM_PAID" NUMBER(13,4) DEFAULT 0  NOT NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL ,
"INVOICE_NO" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT"."INVOICE_NO" IS '发票编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_PAY_EQUPADEPTITEM
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" (
"IDENTIFICATION_CARD" VARCHAR2(20 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"COUNT_YEAR" NUMBER(5) NOT NULL ,
"ITEM_CODE" VARCHAR2(100 BYTE) NOT NULL ,
"APPLY_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"DECL_CODE" VARCHAR2(6 BYTE) NOT NULL ,
"AMOUNT" NUMBER(9,4) NOT NULL ,
"SUM_PAY" NUMBER(12,4) NOT NULL ,
"APPLYTYPE" VARCHAR2(6 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_RSBT_IMBACKTYPE_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG" (
"FORM_GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FORM_TYPE" VARCHAR2(8 BYTE) NOT NULL ,
"IMP_BACK_TYPE" NUMBER(2) NULL ,
"IMP_DATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG"."FORM_GUID" IS '存储申请表GUID或者台站GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG"."FORM_TYPE" IS '表单类型，可以是申请表类型或者是台站表类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG"."IMP_BACK_TYPE" IS '用于区分是二类三类，值分别为2和3';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG"."IMP_DATE" IS '保存日期';

-- ----------------------------
-- Table structure for T_RIM_RSM_RSBT_IMP_DATE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_TYPE" VARCHAR2(8 BYTE) NOT NULL ,
"IMP_DATE" DATE NOT NULL ,
"IMP_TIME" VARCHAR2(20 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE"."GUID" IS '申请表或技术资料表的guid';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE"."APP_TYPE" IS '表类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE"."IMP_DATE" IS '导入日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE"."IMP_TIME" IS '导入时间，精确到分';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE"."AREA_CODE" IS '地区代码';

-- ----------------------------
-- Table structure for T_RIM_RSM_RSBT_IMP_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"STAT_TDI" VARCHAR2(10 BYTE) NULL ,
"FORM_TYPE" VARCHAR2(8 BYTE) NULL ,
"IMP_DATE" DATE NULL ,
"AREACODE" VARCHAR2(8 BYTE) NOT NULL ,
"SYSID" VARCHAR2(36 BYTE) NULL ,
"IMP_APP_CODE" VARCHAR2(14 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."GUID" IS 'GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."APP_CODE" IS '申请表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."STAT_TDI" IS '技术资料表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."FORM_TYPE" IS '技术资料表类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."IMP_DATE" IS '导入日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."AREACODE" IS '区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG"."IMP_APP_CODE" IS '导入时申请表编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_RSBT_IMP_LOG_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"STAT_TDI" VARCHAR2(10 BYTE) NULL ,
"FORM_TYPE" VARCHAR2(8 BYTE) NULL ,
"IMP_DATE" DATE NULL ,
"AREACODE" VARCHAR2(8 BYTE) NOT NULL ,
"SYSID" VARCHAR2(36 BYTE) NULL ,
"IMP_APP_CODE" VARCHAR2(14 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."GUID" IS 'GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."APP_CODE" IS '申请表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."STAT_TDI" IS '技术资料表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."FORM_TYPE" IS '技术资料表类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."IMP_DATE" IS '导入日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."AREACODE" IS '区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R"."IMP_APP_CODE" IS '导入时申请表编号';

-- ----------------------------
-- Table structure for T_RIM_RSM_STAT_DISCARD_EXPAND
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STAT_DISCARD_EXPAND";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STAT_DISCARD_EXPAND" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_GUID" VARCHAR2(36 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_STAT_IMPBTOA_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NULL ,
"STAT_TYPE_GUID" VARCHAR2(36 BYTE) NULL ,
"LOGTYPE" VARCHAR2(20 BYTE) NOT NULL ,
"LOGDATE" DATE NOT NULL ,
"FORMTYPE" VARCHAR2(10 BYTE) NULL ,
"APPCODE" VARCHAR2(20 BYTE) NULL ,
"STATTDI" VARCHAR2(10 BYTE) NULL ,
"OLDAPPCODE" VARCHAR2(20 BYTE) NULL ,
"OLDSTATTDI" VARCHAR2(10 BYTE) NULL ,
"AREACODE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."USERID" IS '用户id';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."STAT_TYPE_GUID" IS '台站类型guid';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."LOGTYPE" IS '操作方式  1：转A库；2：转A库临时区；3：删除';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."LOGDATE" IS '操作时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."FORMTYPE" IS '表单类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."APPCODE" IS '重新生成的申请表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."STATTDI" IS '重新生成的技术资料表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."OLDAPPCODE" IS '申请表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."OLDSTATTDI" IS '技术资料表编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG"."AREACODE" IS '地区编码';

-- ----------------------------
-- Table structure for T_RIM_RSM_STAT_INFO
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO" (
"STAT_YEAR" VARCHAR2(7 BYTE) NOT NULL ,
"STAT_MONTH" VARCHAR2(4 BYTE) NOT NULL ,
"STAT_DEPT" VARCHAR2(6 BYTE) NOT NULL ,
"STAT_SUM" NUMBER(10) NULL ,
"BC_SUM" NUMBER(9) NULL ,
"BT_SUM" NUMBER(9) NULL ,
"BW_SUM" NUMBER(9) NULL ,
"SF_SUM" NUMBER(9) NULL ,
"SM_SUM" NUMBER(9) NULL ,
"HF_SUM" NUMBER(9) NULL ,
"HM_SUM" NUMBER(9) NULL ,
"SS_SUM" NUMBER(9) NULL ,
"AS_SUM" NUMBER(9) NULL ,
"PB_SUM" NUMBER(9) NULL ,
"JQ_SUM" NUMBER(9) NULL ,
"LJ_SUM" NUMBER(9) NULL ,
"FWGSM_SUM" NUMBER(9) NULL ,
"LFGSM_SUM" NUMBER(9) NULL ,
"FWCDMA_SUM" NUMBER(9) NULL ,
"LFCDMA_SUM" NUMBER(9) NULL ,
"FWWCDMA_SUM" NUMBER(9) NULL ,
"LFWCDMA_SUM" NUMBER(9) NULL ,
"FWTDSCDMA_SUM" NUMBER(9) NULL ,
"LFTDSCDMA_SUM" NUMBER(9) NULL ,
"WX_SUM" NUMBER(9) NULL ,
"GX_SUM" NUMBER(9) NULL ,
"GD_SUM" NUMBER(9) NULL ,
"WS_SUM" NUMBER(9) NULL ,
"WY_SUM" NUMBER(9) NULL ,
"LA_SUM" NUMBER(9) NULL ,
"HA_SUM" NUMBER(9) NULL ,
"SPM_SUM" NUMBER(9) NULL ,
"MS_SUM" NUMBER(9) NULL ,
"YY_SUM" NUMBER(9) NULL ,
"OT_SUM" NUMBER(9) NULL ,
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"STAT_INCLUDE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_RSM_STAT_TYPE_RELEV
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"STAT_GUID" VARCHAR2(40 BYTE) NULL ,
"STAT_TYPE_GUID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV" IS '台站分类数据明细表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV"."GUID" IS 'GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV"."STAT_GUID" IS '台站GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV"."STAT_TYPE_GUID" IS '台站类别GUID';

-- ----------------------------
-- Table structure for T_RIM_RSM_STAT_TYPE_RELEV_R
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"STAT_GUID" VARCHAR2(40 BYTE) NULL ,
"STAT_TYPE_GUID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R" IS '备用台站分类数据明细表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R"."GUID" IS 'GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R"."STAT_GUID" IS '台站GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R"."STAT_TYPE_GUID" IS '台站类别GUID';

-- ----------------------------
-- Table structure for T_RIM_RSM_STAT_TYPE_RELEV2
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"STAT_GUID" VARCHAR2(40 BYTE) NULL ,
"STAT_TYPE_GUID" VARCHAR2(40 BYTE) NULL ,
"SET_RESULT" VARCHAR2(200 BYTE) NULL ,
"SET_STATUS" CHAR(1 BYTE) DEFAULT '0'  NULL ,
"REMARK" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2" IS '台站分类数据明细表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2"."GUID" IS 'GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2"."STAT_GUID" IS '台站GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2"."STAT_TYPE_GUID" IS '台站类别GUID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2"."SET_RESULT" IS '处理方法';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2"."SET_STATUS" IS '处理状态 1：已处理，0 ：未处理';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2"."REMARK" IS '备注';

-- ----------------------------
-- Table structure for T_RIM_RSM_STATION_TYPE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"ORDERID" NUMBER NULL ,
"TYPENAME" VARCHAR2(80 BYTE) NULL ,
"REMARK" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE" IS '台站类别表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE"."GUID" IS 'GUID,主键,标识列';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE"."ORDERID" IS '排序号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE"."TYPENAME" IS '类别名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE"."REMARK" IS '备注';

-- ----------------------------
-- Table structure for T_RIM_RSM_STATION_TYPE2
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2";
CREATE TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"ORDERID" NUMBER NULL ,
"TYPENAME" VARCHAR2(80 BYTE) NULL ,
"ALLOWPRINTLICENSE" CHAR(1 BYTE) DEFAULT '0'  NULL ,
"REMARK" VARCHAR2(1255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2" IS '台站类别表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2"."GUID" IS 'GUID,主键,标识列';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2"."ORDERID" IS '排序号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2"."TYPENAME" IS '类别名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2"."ALLOWPRINTLICENSE" IS '允许打印执照  1：允许  ，0不允许';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2"."REMARK" IS '备注';

-- ----------------------------
-- Table structure for T_RIM_WF_APPPERMISSION
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_APPPERMISSION";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_APPPERMISSION" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"SXBM" VARCHAR2(50 BYTE) NOT NULL ,
"SXMC" VARCHAR2(1000 BYTE) NOT NULL ,
"STATE" VARCHAR2(2 BYTE) DEFAULT 0  NULL ,
"APPROVALROLE" VARCHAR2(2 BYTE) DEFAULT 0  NOT NULL ,
"PARENTGUID" VARCHAR2(40 BYTE) NULL ,
"ACCEPTROLE" VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPPERMISSION"."SXBM" IS '事项编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPPERMISSION"."SXMC" IS '事项名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPPERMISSION"."STATE" IS '事项状态（0：未发布，1：已发布）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPPERMISSION"."APPROVALROLE" IS '审批角色（0：省，1：地市）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPPERMISSION"."PARENTGUID" IS '父节点';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPPERMISSION"."ACCEPTROLE" IS '受理角色（0：省，1：地市）';

-- ----------------------------
-- Table structure for T_RIM_WF_APPROVE_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"DEPT_NAME" VARCHAR2(60 BYTE) NULL ,
"PRESIDENT" VARCHAR2(20 BYTE) NULL ,
"LINKMAN" VARCHAR2(20 BYTE) NULL ,
"PHONE" VARCHAR2(25 BYTE) NULL ,
"ADDRESS" VARCHAR2(100 BYTE) NULL ,
"ZIP_CODE" VARCHAR2(6 BYTE) NULL ,
"EQUIP_MODEL" VARCHAR2(40 BYTE) NULL ,
"EQUIP_NAME" VARCHAR2(60 BYTE) NULL ,
"FUNCTION" VARCHAR2(60 BYTE) NULL ,
"MODU_MODEL" VARCHAR2(6 BYTE) NULL ,
"FREQ_RANGE" VARCHAR2(60 BYTE) NULL ,
"POWER_EMIT" VARCHAR2(60 BYTE) NULL ,
"BAND_WIDTH" VARCHAR2(60 BYTE) NULL ,
"QUAL_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"QUAL_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"QUAL_SIGN" VARCHAR2(50 BYTE) NULL ,
"QUAL_DATE" DATE NULL ,
"LEAD_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"LEAD_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_SIGN" VARCHAR2(50 BYTE) NULL ,
"LEAD_DATE" DATE NULL ,
"ORG_AREA_CODE" VARCHAR2(20 BYTE) NULL ,
"RESID_GUID" VARCHAR2(36 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" IS '设备型号核准';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN"."ORG_AREA_CODE" IS '本地区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN"."RESID_GUID" IS '工作流流水单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN"."USERID" IS '用户ID';

-- ----------------------------
-- Table structure for T_RIM_WF_BIDDOCRELA
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_BIDDOCRELA";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_BIDDOCRELA" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSID" VARCHAR2(40 BYTE) NOT NULL ,
"SBLSH" VARCHAR2(50 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_BUSINESSDEAL
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NOT NULL ,
"STEPID" VARCHAR2(40 BYTE) NOT NULL ,
"WORKID" VARCHAR2(40 BYTE) NOT NULL ,
"OPERTOR" VARCHAR2(40 BYTE) NOT NULL ,
"ARRIVEDATE" DATE NULL ,
"ACCEPTDATE" DATE NULL ,
"FINISHDATE" DATE NULL ,
"PCONTEXT" VARCHAR2(100 BYTE) NULL ,
"PSTATE" VARCHAR2(2 BYTE) NOT NULL ,
"STATEFLAG" VARCHAR2(2 BYTE) NOT NULL ,
"REMAK" VARCHAR2(1000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_BUSINESSSTEP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP" (
"STEPID" VARCHAR2(40 BYTE) NOT NULL ,
"STEPNAME" VARCHAR2(200 BYTE) NOT NULL ,
"TYPECODE" VARCHAR2(2 BYTE) NOT NULL ,
"NUMB" VARCHAR2(2 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP"."TYPECODE" IS '操作类型0收文1发文2通知';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP"."NUMB" IS '步骤编号';

-- ----------------------------
-- Table structure for T_RIM_WF_CODE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_CODE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_CODE" (
"CODE" VARCHAR2(10 BYTE) NULL ,
"NAME" VARCHAR2(100 BYTE) NOT NULL ,
"TYPE" VARCHAR2(5 BYTE) NOT NULL ,
"CREATETIME" DATE DEFAULT sysdate  NULL ,
"ID" VARCHAR2(40 BYTE) NOT NULL ,
"CONTENT" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_CODE" IS '工作流常用数据字典表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_CODE"."CODE" IS '代码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_CODE"."NAME" IS '名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_CODE"."TYPE" IS '类型';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_CODE"."CREATETIME" IS '创建时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_CODE"."ID" IS '主键';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_CODE"."CONTENT" IS '结果说明';

-- ----------------------------
-- Table structure for T_RIM_WF_COLLECTORS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"CREATETIME" DATE DEFAULT sysdate  NOT NULL ,
"CLASSNAME" VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS"."GUID" IS '唯一标示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS"."MISSIVEID" IS '公文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS"."USERID" IS '收藏人ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS"."CREATETIME" IS '创建时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS"."CLASSNAME" IS '所属收藏类别名称';

-- ----------------------------
-- Table structure for T_RIM_WF_COLLECTORS_CLASS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"CLASSCODE" VARCHAR2(40 BYTE) NOT NULL ,
"CLASSNAME" VARCHAR2(100 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"CREATEDATE" DATE NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS"."CLASSCODE" IS '收藏类别ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS"."CLASSNAME" IS '收藏类别名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS"."USERID" IS '创建人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS"."CREATEDATE" IS '创建时间';

-- ----------------------------
-- Table structure for T_RIM_WF_DEFINEMESSAGE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_DEFINEMESSAGE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_DEFINEMESSAGE" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"OPERATID" VARCHAR2(40 BYTE) NULL ,
"CONTEXT" VARCHAR2(255 BYTE) NULL ,
"REMAK" VARCHAR2(1000 BYTE) NULL ,
"INSERTTIME" DATE NULL ,
"INSERTPEOP" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_DELEGATEMISSIVELIST
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"WORKID" VARCHAR2(36 BYTE) NOT NULL ,
"DELEGATEUSERID" VARCHAR2(36 BYTE) NOT NULL ,
"USERID" VARCHAR2(36 BYTE) NOT NULL ,
"DELEGATEDATE" DATE NULL ,
"TRANSACTORID" VARCHAR2(36 BYTE) NULL ,
"REMARK" VARCHAR2(500 BYTE) NULL ,
"DELFLAG" CHAR(1 BYTE) DEFAULT '0'  NULL ,
"MISSIVESTATEID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST"."TRANSACTORID" IS '办理人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST"."REMARK" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST"."DELFLAG" IS '删除标记';

-- ----------------------------
-- Table structure for T_RIM_WF_DEVELOP_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"DEPT_NAME" VARCHAR2(60 BYTE) NULL ,
"PRESIDENT" VARCHAR2(20 BYTE) NULL ,
"LINKMAN" VARCHAR2(20 BYTE) NULL ,
"PHONE" VARCHAR2(25 BYTE) NULL ,
"ADDRESS" VARCHAR2(100 BYTE) NULL ,
"ZIP_CODE" VARCHAR2(6 BYTE) NULL ,
"PRINCIPAL" VARCHAR2(20 BYTE) NULL ,
"TITLE" VARCHAR2(20 BYTE) NULL ,
"RANK" VARCHAR2(20 BYTE) NULL ,
"DEPT_LEAD" VARCHAR2(60 BYTE) NULL ,
"DEPT_RELA" VARCHAR2(1 BYTE) NULL ,
"EQUIP_NAME" VARCHAR2(60 BYTE) NULL ,
"FUNCTION" VARCHAR2(60 BYTE) NULL ,
"MODU_MODEL" VARCHAR2(6 BYTE) NULL ,
"FREQ_RANGE" VARCHAR2(60 BYTE) NULL ,
"BAND_WIDTH" VARCHAR2(60 BYTE) NULL ,
"POWER_EMIT" VARCHAR2(60 BYTE) NULL ,
"QUAL_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"QUAL_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"QUAL_SIGN" VARCHAR2(50 BYTE) NULL ,
"QUAL_DATE" DATE NULL ,
"LEAD_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"LEAD_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_SIGN" VARCHAR2(50 BYTE) NULL ,
"LEAD_DATE" DATE NULL ,
"ORG_AREA_CODE" VARCHAR2(20 BYTE) NULL ,
"RESID_GUID" VARCHAR2(36 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" IS '研制无线电发射设备申请表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN"."ACCEPT_ID" IS '受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN"."ACCEPT_DATE" IS '申请日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN"."ORG_AREA_CODE" IS '本地区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN"."RESID_GUID" IS '工作流流水单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN"."USERID" IS '用户ID';

-- ----------------------------
-- Table structure for T_RIM_WF_DIST_DATA
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"DATA_NAME" VARCHAR2(100 BYTE) NOT NULL ,
"SAVE_PLACE" VARCHAR2(200 BYTE) NOT NULL ,
"DATA_DEL" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"DEAL_DATE" DATE DEFAULT sysdate  NOT NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_DIST_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) DEFAULT '442000'  NOT NULL ,
"MANA_NO1" VARCHAR2(20 BYTE) NULL ,
"MANA_NO2" VARCHAR2(20 BYTE) NULL ,
"APPEAL_NO" VARCHAR2(20 BYTE) NULL ,
"APPEAL_DATE" DATE NULL ,
"DEPT_CODE" VARCHAR2(36 BYTE) NULL ,
"STAT_ADDR" VARCHAR2(60 BYTE) NULL ,
"EQUIP_NAME" VARCHAR2(100 BYTE) NULL ,
"COMM_SORT" VARCHAR2(20 BYTE) NULL ,
"MODU_MODEL" VARCHAR2(10 BYTE) NULL ,
"FREQ_DIST" VARCHAR2(200 BYTE) NULL ,
"DIST_MODE" VARCHAR2(100 BYTE) NULL ,
"DIST_DATE" DATE NULL ,
"APPEAL_CONT" VARCHAR2(2000 BYTE) NULL ,
"ACCEPT_OPIN" VARCHAR2(1000 BYTE) NULL ,
"STAT_LEGAL" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"CHECK_OPIN" VARCHAR2(1000 BYTE) NULL ,
"CHECK_PASS" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"CHECK_SIGN" VARCHAR2(50 BYTE) NULL ,
"CHECK_DATE" DATE NULL ,
"MASTER_OPIN" VARCHAR2(1000 BYTE) NULL ,
"HANDLER" VARCHAR2(100 BYTE) NULL ,
"MASTER_SIGN" VARCHAR2(50 BYTE) NULL ,
"MASTER_DATE" DATE NULL ,
"INSP_RESULT" VARCHAR2(1000 BYTE) NULL ,
"INSP_SIGN" VARCHAR2(50 BYTE) NULL ,
"INSP_DATE" DATE NULL ,
"OFFICE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"OFFICE_SIGN" VARCHAR2(50 BYTE) NULL ,
"OFFICE_DATE" DATE NULL ,
"DIRE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"DIRE_SIGN" VARCHAR2(50 BYTE) NULL ,
"DIRE_DATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_DIST_RESEARCH
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_DIST_RESEARCH";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_DIST_RESEARCH" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"DEPT_CODE" VARCHAR2(36 BYTE) NULL ,
"TEST_TIME" VARCHAR2(40 BYTE) NULL ,
"TEST_DATE" DATE NULL ,
"TEST_SITE" VARCHAR2(300 BYTE) NULL ,
"TEST_EQUIP" VARCHAR2(300 BYTE) NULL ,
"TEST_PERSON" VARCHAR2(300 BYTE) NULL ,
"TEST_NOTE" VARCHAR2(4000 BYTE) NULL ,
"OPINION" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_EQUIP_APPROVE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_EQUIP_APPROVE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_EQUIP_APPROVE" (
"APPR_CODE" VARCHAR2(20 BYTE) NOT NULL ,
"APPR_CARD_NO" VARCHAR2(40 BYTE) NOT NULL ,
"EQUIP_MODEL" VARCHAR2(40 BYTE) NULL ,
"EQUIP_NAME" VARCHAR2(60 BYTE) NULL ,
"FREQ_RANGE" VARCHAR2(60 BYTE) NULL ,
"EMIT_POWER" VARCHAR2(60 BYTE) NULL ,
"BANDWIDTH" VARCHAR2(60 BYTE) NULL ,
"MANUFACTURER" VARCHAR2(60 BYTE) NULL ,
"APPR_DATE" DATE NULL ,
"VALID_PERIOD" VARCHAR2(60 BYTE) NULL ,
"NOTE" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_FORMS
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_FORMS";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_FORMS" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"FORMNAME" VARCHAR2(500 BYTE) NULL ,
"FORMURL" VARCHAR2(500 BYTE) NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL ,
"FORMSHOWURL" VARCHAR2(500 BYTE) NULL ,
"FORMTYPE" VARCHAR2(10 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMS"."GUID" IS '主键';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMS"."FORMNAME" IS '表单名';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMS"."FORMURL" IS '表单URL地址';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMS"."NOTE" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMS"."FORMSHOWURL" IS '表单显示地址';

-- ----------------------------
-- Table structure for T_RIM_WF_FORMS_VALIDLOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_FORMS_VALIDLOG";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_FORMS_VALIDLOG" (
"GUID" VARCHAR2(40 BYTE) NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"STATUS" VARCHAR2(1 BYTE) NULL ,
"REMARK" VARCHAR2(4000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMS_VALIDLOG"."STATUS" IS '''0'' ：未验证    ''1''： 验证通过   ''2''：验证失败';

-- ----------------------------
-- Table structure for T_RIM_WF_FORMSINFO
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_FORMSINFO";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_FORMSINFO" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"WFGUID" VARCHAR2(36 BYTE) NULL ,
"FORMSGUID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMSINFO"."WFGUID" IS '公文表单ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_FORMSINFO"."FORMSGUID" IS '表单ID';

-- ----------------------------
-- Table structure for T_RIM_WF_FREQ_APPLY
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"APP_CODE" VARCHAR2(14 BYTE) NOT NULL ,
"ORG_NAME" VARCHAR2(80 BYTE) NOT NULL ,
"NET_NAME" VARCHAR2(80 BYTE) NOT NULL ,
"APP_DATE" DATE NOT NULL ,
"APP_FTLB" DATE NOT NULL ,
"APP_FTLE" DATE NOT NULL ,
"DATAURL" VARCHAR2(200 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_IMPORT_EQUIP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_EQUIP";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_EQUIP" (
"EQUIP_ID" VARCHAR2(40 BYTE) NOT NULL ,
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"MANUFACTURER" VARCHAR2(40 BYTE) NULL ,
"TRADE_NAME" VARCHAR2(40 BYTE) NULL ,
"MODEL" VARCHAR2(40 BYTE) NULL ,
"FREQ_RANGE" VARCHAR2(40 BYTE) NULL ,
"POWER_EMIT" VARCHAR2(40 BYTE) NULL ,
"UNIT" VARCHAR2(10 BYTE) NULL ,
"AMOUNT" NUMBER(10) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_IMPORT_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"DEPT_IMP" VARCHAR2(80 BYTE) NULL ,
"DEPT_LEAD" VARCHAR2(80 BYTE) NULL ,
"ADDRESS" VARCHAR2(100 BYTE) NULL ,
"ZIP_CODE" VARCHAR2(6 BYTE) NULL ,
"LINKMAN" VARCHAR2(20 BYTE) NULL ,
"PHONE" VARCHAR2(25 BYTE) NULL ,
"ARRIVE_DATE" DATE NULL ,
"CONT_NO" VARCHAR2(40 BYTE) NULL ,
"ARRIVE_BATCH" VARCHAR2(1 BYTE) NULL ,
"SIGN_CHINA" VARCHAR2(60 BYTE) NULL ,
"CUSTOM_ARRIVE" VARCHAR2(60 BYTE) NULL ,
"SIGN_FOREIGN" VARCHAR2(60 BYTE) NULL ,
"CONS_COUNTRY" VARCHAR2(60 BYTE) NULL ,
"TECH_STATUS" VARCHAR2(1 BYTE) NULL ,
"PURPOSE" VARCHAR2(1 BYTE) NULL ,
"QUAL_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"QUAL_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"QUAL_SIGN" VARCHAR2(50 BYTE) NULL ,
"QUAL_DATE" DATE NULL ,
"SUPER_AUDIT" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"SUPER_KEY" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"SUPER_NOTE" VARCHAR2(1000 BYTE) NULL ,
"SUPER_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"LEAD_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_SIGN" VARCHAR2(50 BYTE) NULL ,
"LEAD_DATE" DATE NULL ,
"VALID_DATE" DATE NULL ,
"PASS_CODE" VARCHAR2(40 BYTE) NULL ,
"COPY_DEPT" VARCHAR2(60 BYTE) NULL ,
"AFFIX_NOTE" VARCHAR2(200 BYTE) NULL ,
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(20 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_INTERFIXOPERATION
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXOPERATION";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXOPERATION" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"ID" VARCHAR2(40 BYTE) NULL ,
"FORMNAME" VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_INTERFIXPROCESSOR
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXPROCESSOR";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXPROCESSOR" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"PID" VARCHAR2(40 BYTE) NULL ,
"PCONTEXT" VARCHAR2(1000 BYTE) NULL ,
"PNOTION" VARCHAR2(40 BYTE) NULL ,
"PSTATE" VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MCONSIGNOR
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MCONSIGNOR";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MCONSIGNOR" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"OPERATID" VARCHAR2(40 BYTE) NULL ,
"CONSIGNOR" VARCHAR2(40 BYTE) NULL ,
"REMAK" VARCHAR2(1000 BYTE) NULL ,
"INSERTTIME" DATE NULL ,
"INSERTPEOP" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE" (
"MISSIVEID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVETITLE" VARCHAR2(200 BYTE) NULL ,
"MISSIVETYPE" VARCHAR2(2 BYTE) NULL ,
"EXIGENCE" VARCHAR2(2 BYTE) NULL ,
"KEEPSECRET" VARCHAR2(2 BYTE) NULL ,
"OPERID" VARCHAR2(40 BYTE) NULL ,
"PROPOSALTELE" VARCHAR2(255 BYTE) NULL ,
"ADDRESSERDEPT" VARCHAR2(255 BYTE) NULL ,
"MAINDEPT" VARCHAR2(2000 BYTE) NULL ,
"CCDEPT" VARCHAR2(2000 BYTE) NULL ,
"THEMATIC" VARCHAR2(255 BYTE) NULL ,
"FALG" VARCHAR2(2 BYTE) NULL ,
"COMEONDEPT" VARCHAR2(255 BYTE) NULL ,
"COMEONNUMER" VARCHAR2(255 BYTE) NULL ,
"COMEONCODE" VARCHAR2(255 BYTE) NULL ,
"COMEONDATE" DATE NULL ,
"DODATE" DATE NULL ,
"CONTEXTTYPE" VARCHAR2(255 BYTE) NULL ,
"CREATEDATE" DATE NULL ,
"CRETAER" VARCHAR2(40 BYTE) NULL ,
"PARTCODE" VARCHAR2(2 BYTE) NULL ,
"COMEONCOMMENT" VARCHAR2(255 BYTE) NULL ,
"SENDTYPE" VARCHAR2(2 BYTE) NULL ,
"BUSINESSTYPE" VARCHAR2(2 BYTE) NULL ,
"VALUEONLENDERSHIP" VARCHAR2(255 BYTE) NULL ,
"SPONSORDEPTID" VARCHAR2(40 BYTE) NULL ,
"CREATEDEPTID" VARCHAR2(40 BYTE) NULL ,
"ISHQ" VARCHAR2(2 BYTE) DEFAULT 0  NULL ,
"BUSINESSAPPROVALTYPE" VARCHAR2(40 BYTE) NULL ,
"ISBUSINESSAPPROVALTYPE" CHAR(2 BYTE) DEFAULT 0  NULL ,
"ISEGOVERNMENT" VARCHAR2(2 BYTE) DEFAULT 0  NULL ,
"MISSIVECLASS" VARCHAR2(40 BYTE) NULL ,
"ISNOTICE" VARCHAR2(1 BYTE) DEFAULT '0'  NULL ,
"ENDAPPROVEDEPT" VARCHAR2(40 BYTE) NULL ,
"MAINUNIT" VARCHAR2(2000 BYTE) NULL ,
"ISNEEDGD" VARCHAR2(1 BYTE) NULL ,
"EDITMAINUNIT" VARCHAR2(2000 BYTE) NULL ,
"ISREPLY" VARCHAR2(1 BYTE) NULL ,
"REPLYDATE" DATE NULL ,
"ISSTARTNEWMEETUP" VARCHAR2(1 BYTE) DEFAULT 0  NULL ,
"ISGZYDJZBA" VARCHAR2(1 BYTE) DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."MISSIVEID" IS '公文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."MISSIVETITLE" IS '标题';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."MISSIVETYPE" IS '公文类型（0办件1阅件3通知4其它5发文）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."EXIGENCE" IS '紧急程度';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."FALG" IS '信息保密';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."COMEONCOMMENT" IS '来文批示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."SENDTYPE" IS '发文类型（1频率分配，2频率指配，3台站设置）---发文';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."BUSINESSTYPE" IS '业务类型（1业余电台、2公众移动通信、3对讲机、4卫星）---发文';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."VALUEONLENDERSHIP" IS '签发领导----发文';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."SPONSORDEPTID" IS '主办单位ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."CREATEDEPTID" IS '创建单位ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISHQ" IS '判断会签提示图标是否显示0不显示1显示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."BUSINESSAPPROVALTYPE" IS '业务审批类型（1频率分配，2频率指配，3台站设置）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISBUSINESSAPPROVALTYPE" IS '是否是业务审批类型（默认不是业务审批类型0  是业务审批类型1）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISEGOVERNMENT" IS '是否电子政务（1是，0否）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."MISSIVECLASS" IS '公文所属分类';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISNOTICE" IS '是否发布为内部通知 （1是，0否）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISNEEDGD" IS '是否进行归档（1是，0否）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."EDITMAINUNIT" IS '手写主送单位';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISREPLY" IS '是否需要回复 (发文)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."REPLYDATE" IS '回复期限 （发文）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE"."ISSTARTNEWMEETUP" IS '是否新的会办流程，兼容旧会办回复意见';

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVE_CODE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_CODE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_CODE" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"YEAR" VARCHAR2(4 BYTE) NULL ,
"CODE" NUMBER NULL ,
"FORMULA_GUID" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_CODE"."FORMULA_GUID" IS '编码规则   如 ：粤无办函【{YEAR}】{Code}号';

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVE_CODEFORMULA
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA" (
"GUID" VARCHAR2(36 BYTE) NULL ,
"DEPTID" VARCHAR2(36 BYTE) NULL ,
"CODEFORMULA" VARCHAR2(255 BYTE) NULL ,
"TYPE" VARCHAR2(1 BYTE) NULL ,
"CODESTARTINDEX" NUMBER NULL ,
"CODELENGTH" NUMBER NULL ,
"YEARSTARTINDEX" NUMBER NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA"."CODEFORMULA" IS '编码规则   如 ：粤无办函【{YEAR}】{Code}号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA"."TYPE" IS '编号类型   1：发文（带“函”字公文）  2：发文（不带“函”字公文）   3：内部通知 ';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA"."CODESTARTINDEX" IS '编号的开始索引';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA"."CODELENGTH" IS '编号的长度';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_CODEFORMULA"."YEARSTARTINDEX" IS '年份的开始索引';

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVE_HISTORY
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY" (
"MISSIVEID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVETITLE" VARCHAR2(200 BYTE) NULL ,
"COMEONDEPT" VARCHAR2(255 BYTE) NULL ,
"COMEONCODE" VARCHAR2(255 BYTE) NULL ,
"COMEONDATE" VARCHAR2(100 BYTE) NULL ,
"PARTCODE" VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVE_HISTORY_FILE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY_FILE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY_FILE" (
"FILEID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NOT NULL ,
"FILENAME" VARCHAR2(200 BYTE) NULL ,
"EXT" VARCHAR2(10 BYTE) NULL ,
"FILEPATH" VARCHAR2(2000 BYTE) NULL ,
"FILETYPE" VARCHAR2(2 BYTE) NULL ,
"FILESIZE" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVE_RETURNNOTE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE" (
"GUID" VARCHAR2(40 BYTE) NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"ACTIVITY" VARCHAR2(40 BYTE) NULL ,
"PERFORMER" VARCHAR2(40 BYTE) NULL ,
"ARRIVEDATE" DATE NULL ,
"ACCEPTDATE" DATE NULL ,
"FINISHDATE" DATE NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL ,
"REMARK" VARCHAR2(500 BYTE) NULL ,
"FLAG" CHAR(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."MISSIVEID" IS '公文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."ACTIVITY" IS '步骤';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."PERFORMER" IS '执行人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."ARRIVEDATE" IS '到达时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."ACCEPTDATE" IS '查看时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."FINISHDATE" IS '完成时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."NOTE" IS '意见输入';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."REMARK" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVE_RETURNNOTE"."FLAG" IS '0--退回人，1--被退回的人';

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVENOTE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVENOTE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVENOTE" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_MISSIVENOTE" IS '用于公文传阅时，存储意见';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVENOTE"."MISSIVEID" IS '公文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVENOTE"."NOTE" IS '公文传阅意见';

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVEREADER
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADER";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADER" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"OPERATID" VARCHAR2(40 BYTE) NULL ,
"FLAG" VARCHAR2(2 BYTE) NULL ,
"STATE" VARCHAR2(2 BYTE) NULL ,
"INSERTTIME" DATE NULL ,
"INSERTPEOP" VARCHAR2(40 BYTE) NULL ,
"UPDATTIME" DATE NULL ,
"UPDATPEOP" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVEREADPIECES
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADPIECES";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADPIECES" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"OPERATID" VARCHAR2(40 BYTE) NULL ,
"WORKID" VARCHAR2(40 BYTE) NULL ,
"FLAG" VARCHAR2(2 BYTE) NULL ,
"TOTAKETIME" DATE NULL ,
"LOOKTIME" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVESTATE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"OPERATID" VARCHAR2(40 BYTE) NULL ,
"STATEFLAG" VARCHAR2(2 BYTE) NULL ,
"INSERTTIME" DATE NULL ,
"INSERTPEOP" VARCHAR2(40 BYTE) NULL ,
"UPDATTIME" DATE NULL ,
"UPDATPEOP" VARCHAR2(40 BYTE) NULL ,
"OPERTYPE" VARCHAR2(2 BYTE) NULL ,
"PERSTATEGUID" VARCHAR2(40 BYTE) NULL ,
"CURWORKID" VARCHAR2(40 BYTE) NULL ,
"CURLEVEL" VARCHAR2(2 BYTE) NULL ,
"CURAGREETOSIGNID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVESTATE"."STATEFLAG" IS '1我的待办，2我经手的文件';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVESTATE"."OPERTYPE" IS '1,主办，2会办，3，阅读，4，文秘受理，5，领导审核，6，领导阅示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVESTATE"."PERSTATEGUID" IS ' 上一个状态';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_MISSIVESTATE"."CURWORKID" IS '当前待办人WorkID,主流程操作才有';

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVESTATE_BACKUP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE_BACKUP";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE_BACKUP" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"OPERATID" VARCHAR2(40 BYTE) NULL ,
"STATEFLAG" VARCHAR2(2 BYTE) NULL ,
"INSERTTIME" DATE NULL ,
"INSERTPEOP" VARCHAR2(40 BYTE) NULL ,
"UPDATTIME" DATE NULL ,
"UPDATPEOP" VARCHAR2(40 BYTE) NULL ,
"OPERTYPE" VARCHAR2(2 BYTE) NULL ,
"PERSTATEGUID" VARCHAR2(40 BYTE) NULL ,
"CURWORKID" VARCHAR2(40 BYTE) NULL ,
"CURLEVEL" VARCHAR2(2 BYTE) NULL ,
"CURAGREETOSIGNID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MISSIVETEMPNOTE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MISSIVETEMPNOTE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MISSIVETEMPNOTE" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL ,
"CREATEBY" VARCHAR2(50 BYTE) NULL ,
"CREATETIME" DATE NULL ,
"TYPECODE" CHAR(1 BYTE) NULL ,
"WORKID" VARCHAR2(40 BYTE) NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"ATTACHMENTKEY" VARCHAR2(40 BYTE) NULL ,
"MISSIVESTATEID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_MISSIVETEMPNOTE" IS '保存临时处理意见';

-- ----------------------------
-- Table structure for T_RIM_WF_MOUTGO
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MOUTGO";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MOUTGO" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"OUTGOMESSAGEID" VARCHAR2(40 BYTE) NULL ,
"REMAK" VARCHAR2(1000 BYTE) NULL ,
"INSERTTIME" DATE NULL ,
"INSERTPEOP" VARCHAR2(40 BYTE) NULL ,
"INSERTFLAG" VARCHAR2(2 BYTE) DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_MTYPE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_MTYPE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_MTYPE" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"MISSIVETYPE" VARCHAR2(255 BYTE) NULL ,
"TYPENAME" VARCHAR2(255 BYTE) NULL ,
"REMAK" VARCHAR2(1000 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_OPERATIONINFOR
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_OPERATIONINFOR";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_OPERATIONINFOR" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"NAME" VARCHAR2(100 BYTE) NULL ,
"URL" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_PECCANCY_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"AREA_CODE" VARCHAR2(6 BYTE) DEFAULT '442000'  NOT NULL ,
"APPLY_NO" VARCHAR2(20 BYTE) NULL ,
"REGI_NO" VARCHAR2(20 BYTE) NULL ,
"DEPT_CODE" VARCHAR2(36 BYTE) NULL ,
"STAT_NAME" VARCHAR2(30 BYTE) NULL ,
"STAT_ADDR" VARCHAR2(60 BYTE) NULL ,
"STAT_SIGN" VARCHAR2(30 BYTE) NULL ,
"PECC_FREQ" VARCHAR2(60 BYTE) NULL ,
"STAT_EQUIP" VARCHAR2(100 BYTE) NULL ,
"COMM_SORT" VARCHAR2(100 BYTE) NULL ,
"PECC_TYPE" VARCHAR2(30 BYTE) NULL ,
"MODU_MODEL" VARCHAR2(2 BYTE) NULL ,
"RATI_ODDS" VARCHAR2(30 BYTE) NULL ,
"PRAC_ODDS" VARCHAR2(30 BYTE) NULL ,
"RATI_BAND" VARCHAR2(30 BYTE) NULL ,
"PRAC_BAND" VARCHAR2(30 BYTE) NULL ,
"RATI_FIELD" VARCHAR2(30 BYTE) NULL ,
"PRAC_FIELD" VARCHAR2(30 BYTE) NULL ,
"PECC_DATE" DATE NULL ,
"PECC_CONT" VARCHAR2(100 BYTE) NULL ,
"INSP_PROCESS" VARCHAR2(1000 BYTE) NULL ,
"INSP_DATE" DATE NULL ,
"INSP_SIGN" VARCHAR2(30 BYTE) NULL ,
"IS_CHECK" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"IS_PECC" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"IS_DIST" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"OFFICE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"OFFICE_DATE" DATE NULL ,
"OFFICE_SIGN" VARCHAR2(20 BYTE) NULL ,
"DIRE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"DIRE_DATE" DATE NULL ,
"DIRE_SIGN" VARCHAR2(20 BYTE) NULL ,
"EXEC_RESULT" VARCHAR2(1000 BYTE) NULL ,
"EXEC_DATE" DATE NULL ,
"EXEC_SIGN" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_PRODUCE_EQUIP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP" (
"EQUIP_ID" VARCHAR2(40 BYTE) NOT NULL ,
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"PROD_NAME" VARCHAR2(60 BYTE) NULL ,
"APPR_CODE" VARCHAR2(20 BYTE) NULL ,
"PROD_MODE" VARCHAR2(60 BYTE) NULL ,
"TECH_STAN" VARCHAR2(60 BYTE) NULL ,
"SELL_INFO" VARCHAR2(60 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP" IS '设备信息申请明细';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."EQUIP_ID" IS '主键';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."ACCEPT_ID" IS '受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."PROD_NAME" IS '产品名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."APPR_CODE" IS '型号核准代码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."PROD_MODE" IS '生产方式';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."TECH_STAN" IS '技术标准';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP"."SELL_INFO" IS '内外销情况';

-- ----------------------------
-- Table structure for T_RIM_WF_PRODUCE_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"LICE_NO" VARCHAR2(60 BYTE) NULL ,
"RECORD_NO" VARCHAR2(20 BYTE) NULL ,
"DEPT_ID" VARCHAR2(36 BYTE) NOT NULL ,
"PROD_ADREE" VARCHAR2(80 BYTE) NULL ,
"PROD_ITEM" VARCHAR2(60 BYTE) NULL ,
"VALID_BEGIN" DATE NULL ,
"VALID_END" DATE NULL ,
"OEM_DEPT" VARCHAR2(60 BYTE) NULL ,
"OEM_CERT" VARCHAR2(60 BYTE) NULL ,
"WORK_AREA" VARCHAR2(20 BYTE) NULL ,
"EMPL_SUM" NUMBER(6) NULL ,
"DEVE_SUM" NUMBER(6) NULL ,
"PROD_SUM" NUMBER(6) NULL ,
"LINE_SUM" NUMBER(6) NULL ,
"PROD_FLOW" VARCHAR2(200 BYTE) NULL ,
"QA_MODE" VARCHAR2(200 BYTE) NULL ,
"SCREEN_WAY" VARCHAR2(200 BYTE) NULL ,
"MANA_SIGN" VARCHAR2(60 BYTE) NULL ,
"FILL_DATE" DATE NULL ,
"QUAL_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"QUAL_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"QUAL_SIGN" VARCHAR2(50 BYTE) NULL ,
"QUAL_DATE" DATE NULL ,
"REVIEW_PROD" VARCHAR2(60 BYTE) NULL ,
"REVIEW_INST" VARCHAR2(60 BYTE) NULL ,
"REVIEW_TECH" VARCHAR2(60 BYTE) NULL ,
"REVIEW_QA" VARCHAR2(60 BYTE) NULL ,
"REVIEW_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"REVIEW_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"REVIEW_SIGN" VARCHAR2(50 BYTE) NULL ,
"REVIEW_DATE" DATE NULL ,
"SUPER_AUDIT" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"SUPER_KEY" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"SUPER_NOTE" VARCHAR2(1000 BYTE) NULL ,
"SUPER_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"LEAD_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_SIGN" VARCHAR2(50 BYTE) NULL ,
"LEAD_DATE" DATE NULL ,
"ORG_AREA_CODE" VARCHAR2(20 BYTE) NULL ,
"RESID_GUID" VARCHAR2(36 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" IS '无线电通讯设备生产许可证审批';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."ACCEPT_ID" IS '受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."ACCEPT_DATE" IS '申请日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."LICE_NO" IS '生产许可证号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."RECORD_NO" IS '备案号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."DEPT_ID" IS '单位编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."PROD_ADREE" IS '单位地址';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."PROD_ITEM" IS '备案号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."VALID_BEGIN" IS '有效期限(起始日期)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."VALID_END" IS '有效期限(结止日期)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."OEM_DEPT" IS '对其委托生产单位名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."OEM_CERT" IS '其资质证书名称及证号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."WORK_AREA" IS '生产场地面积';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."EMPL_SUM" IS '员工总数';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."DEVE_SUM" IS '产品开发人员数量';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."PROD_SUM" IS '生产技术人员数量';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."LINE_SUM" IS '生产线数量';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."PROD_FLOW" IS '生产工艺流程';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."QA_MODE" IS '质量保证手段';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."SCREEN_WAY" IS '电磁辐射屏蔽措施';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_PROD" IS '考察情况(生产能力)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_INST" IS '考察情况(仪器设备)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_TECH" IS '考察情况(生产工艺流程)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_QA" IS '考察情况(质量保证手段)';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_AUDIT" IS '审核结果';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_PASS" IS '审核通过（Y：通过，N：未通过）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_SIGN" IS '签字----审核';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."REVIEW_DATE" IS '签字日期----审核';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."SUPER_AUDIT" IS '上级审批（Y：需要，N：不需要）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."SUPER_KEY" IS '上级审批状态（Y：完成，N：未完成）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."SUPER_NOTE" IS '上级审批结果
';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."SUPER_PASS" IS '上级审批结论（Y：通过，N：未通过）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."LEAD_SIGN" IS '总经理签字';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."LEAD_DATE" IS '总经理签字日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."ORG_AREA_CODE" IS '本地区域编码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."RESID_GUID" IS '工作流流水单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN"."USERID" IS '用户ID';

-- ----------------------------
-- Table structure for T_RIM_WF_PRODUCE_PRODINST
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST" (
"INST_ID" VARCHAR2(40 BYTE) NOT NULL ,
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"INST_NAME" VARCHAR2(60 BYTE) NULL ,
"AMOUNT" NUMBER(6) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST" IS '仪器设备申请明细';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST"."INST_ID" IS '主键';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST"."ACCEPT_ID" IS '受理单编号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST"."INST_NAME" IS '仪器设备名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST"."AMOUNT" IS '仪器设备数量';

-- ----------------------------
-- Table structure for T_RIM_WF_READAPP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_READAPP";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_READAPP" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NOT NULL ,
"USERID" VARCHAR2(40 BYTE) NOT NULL ,
"APPSTATUS" VARCHAR2(2 BYTE) NOT NULL ,
"PHONENUM" VARCHAR2(15 BYTE) NULL ,
"APPDATE" DATE NULL ,
"PASSDATE" DATE NULL ,
"ORGID" VARCHAR2(36 BYTE) NULL ,
"APPCAUSE" VARCHAR2(200 BYTE) NULL ,
"AUTHEROPINION" VARCHAR2(200 BYTE) NULL ,
"LEADEROPINION" VARCHAR2(200 BYTE) NULL ,
"OPERID" VARCHAR2(40 BYTE) NULL ,
"LEADERID" VARCHAR2(40 BYTE) NULL ,
"WORKID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."GUID" IS '唯一标示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."MISSIVEID" IS '公文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."USERID" IS '申请人ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."APPSTATUS" IS '申请状态（0申请1通过2不通过3领导审批4初步同意5不同意）';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."PHONENUM" IS '申请人电话';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."APPDATE" IS '申请时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."PASSDATE" IS '通过日期';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."ORGID" IS '申请单位';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."APPCAUSE" IS '申请原因';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."AUTHEROPINION" IS '拟稿人意见';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."LEADEROPINION" IS '领导意见';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."OPERID" IS '拟稿人id';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_READAPP"."LEADERID" IS '领导id';

-- ----------------------------
-- Table structure for T_RIM_WF_RESULT_CODE
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_RESULT_CODE";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_RESULT_CODE" (
"CODE" VARCHAR2(10 BYTE) NOT NULL ,
"CODE_NAME" VARCHAR2(100 BYTE) NULL ,
"PARENTID" VARCHAR2(10 BYTE) NULL ,
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"REASON" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_RESULT_CODE" IS '工作流结果数据字典表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_RESULT_CODE"."CODE" IS '结果代码';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_RESULT_CODE"."CODE_NAME" IS '结果名称';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_RESULT_CODE"."PARENTID" IS '父类ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_RESULT_CODE"."GUID" IS '唯一标示';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_RESULT_CODE"."REASON" IS '结果描述';

-- ----------------------------
-- Table structure for T_RIM_WF_SELL_EQUIP
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_SELL_EQUIP";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_SELL_EQUIP" (
"EQUIP_ID" VARCHAR2(40 BYTE) NOT NULL ,
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"PROD_NAME" VARCHAR2(60 BYTE) NULL ,
"APPR_CODE" VARCHAR2(20 BYTE) NULL ,
"SELL_TYPE" VARCHAR2(60 BYTE) NULL ,
"SELL_AREA" VARCHAR2(60 BYTE) NULL ,
"SOURCE" VARCHAR2(60 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_SELL_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"LICE_NO" VARCHAR2(60 BYTE) NULL ,
"DEPT_ID" VARCHAR2(36 BYTE) NOT NULL ,
"SELL_ADREE" VARCHAR2(60 BYTE) NULL ,
"SELL_ITEM" VARCHAR2(60 BYTE) NULL ,
"VALID_BEGIN" DATE NULL ,
"VALID_END" DATE NULL ,
"MANA_SIGN" VARCHAR2(60 BYTE) NULL ,
"FILL_DATE" DATE NULL ,
"QUAL_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"QUAL_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"QUAL_SIGN" VARCHAR2(50 BYTE) NULL ,
"QUAL_DATE" DATE NULL ,
"REVIEW_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"REVIEW_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"REVIEW_SIGN" VARCHAR2(50 BYTE) NULL ,
"REVIEW_DATE" DATE NULL ,
"SUPER_AUDIT" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"SUPER_KEY" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"SUPER_NOTE" VARCHAR2(1000 BYTE) NULL ,
"SUPER_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_AUDIT" VARCHAR2(1000 BYTE) NULL ,
"LEAD_PASS" VARCHAR2(1 BYTE) DEFAULT 'N'  NOT NULL ,
"LEAD_SIGN" VARCHAR2(50 BYTE) NULL ,
"LEAD_DATE" DATE NULL ,
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"AREA_CODE" VARCHAR2(20 BYTE) NULL ,
"USERID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_TEMPINFOMATION
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_TEMPINFOMATION";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_TEMPINFOMATION" (
"GUID" VARCHAR2(40 BYTE) NULL ,
"MISSIVEID" VARCHAR2(40 BYTE) NULL ,
"PERFORMERS" CLOB NULL ,
"TEMPTYPE" VARCHAR2(2 BYTE) NULL ,
"MISSIVESTATEID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_TIMEREMIND
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_TIMEREMIND";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_TIMEREMIND" (
"GUID" VARCHAR2(36 BYTE) NOT NULL ,
"DAYS" NUMBER NULL ,
"ACTIVITYID" NUMBER NULL ,
"PACKAGEID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_TRANSLATEDISPATCH
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"FORMERID" VARCHAR2(40 BYTE) NOT NULL ,
"DISPATCHID" VARCHAR2(40 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH"."FORMERID" IS '收文ID';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH"."DISPATCHID" IS '发文ID';

-- ----------------------------
-- Table structure for T_RIM_WF_UNKNOWN_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" (
"ACCEPT_ID" VARCHAR2(9 BYTE) NOT NULL ,
"ACCEPT_DATE" DATE DEFAULT sysdate  NOT NULL ,
"APPLY_NO" VARCHAR2(20 BYTE) NULL ,
"REGI_NO" VARCHAR2(20 BYTE) NULL ,
"NAME" VARCHAR2(40 BYTE) NULL ,
"FREQ" VARCHAR2(30 BYTE) NULL ,
"REGULAR" VARCHAR2(100 BYTE) NULL ,
"FINDER" VARCHAR2(30 BYTE) NULL ,
"FIND_DATE" DATE NULL ,
"STAT_DEPT" VARCHAR2(100 BYTE) NULL ,
"STAT_ADDR" VARCHAR2(100 BYTE) NULL ,
"PRINCIPAL" VARCHAR2(20 BYTE) NULL ,
"LINKMAN" VARCHAR2(20 BYTE) NULL ,
"LINK_PHONE" VARCHAR2(25 BYTE) NULL ,
"STAT_NAME" VARCHAR2(40 BYTE) NULL ,
"STAT_EQUIP" VARCHAR2(100 BYTE) NULL ,
"COMM_SORT" VARCHAR2(100 BYTE) NULL ,
"MODU_MODEL" VARCHAR2(2 BYTE) NULL ,
"ANTE_POLA" VARCHAR2(2 BYTE) NULL ,
"SET_DATE" DATE NULL ,
"SET_REASON" VARCHAR2(100 BYTE) NULL ,
"IS_CHECK" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"IS_UNLAW" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"IS_DIST" VARCHAR2(1 BYTE) DEFAULT 'Y'  NOT NULL ,
"INSP_RESULT" VARCHAR2(1000 BYTE) NULL ,
"INSP_SIGN" VARCHAR2(50 BYTE) NULL ,
"INSP_DATE" DATE NULL ,
"OFFICE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"OFFICE_DATE" DATE NULL ,
"OFFICE_SIGN" VARCHAR2(20 BYTE) NULL ,
"DIRE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"DIRE_DATE" DATE NULL ,
"DIRE_SIGN" VARCHAR2(20 BYTE) NULL ,
"EXEC_DEPT" VARCHAR2(40 BYTE) NULL ,
"EXEC_RESULT" VARCHAR2(100 BYTE) NULL ,
"MAKE_OPIN" VARCHAR2(1000 BYTE) NULL ,
"MAKE_DATE" DATE NULL ,
"MAKE_SIGN" VARCHAR2(20 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for T_RIM_WF_WORK_LOG
-- ----------------------------
DROP TABLE "500000_FREQDB"."T_RIM_WF_WORK_LOG";
CREATE TABLE "500000_FREQDB"."T_RIM_WF_WORK_LOG" (
"GUID" VARCHAR2(40 BYTE) NOT NULL ,
"CASEID" NUMBER(12) NULL ,
"WORKID" VARCHAR2(36 BYTE) NOT NULL ,
"ACTIVITYINSTID" VARCHAR2(36 BYTE) NULL ,
"PERFORMER" VARCHAR2(40 BYTE) NULL ,
"ARRIVEDATE" DATE NULL ,
"ACCEPTDATE" DATE NULL ,
"FINISHDATE" DATE NULL ,
"CANRETURN" CHAR(1 BYTE) DEFAULT 'N'  NULL ,
"CANRETAKE" CHAR(1 BYTE) DEFAULT 'N'  NULL ,
"SEQNO" NUMBER(6) NULL ,
"ISCOMMITED" CHAR(1 BYTE) DEFAULT 'N'  NULL ,
"LIMITDATE" DATE NULL ,
"NOTE" VARCHAR2(1000 BYTE) NULL ,
"FLAG" CHAR(1 BYTE) DEFAULT 0  NULL ,
"ISMAIN" CHAR(1 BYTE) DEFAULT 0  NULL ,
"CRETATETIME" DATE NULL ,
"PSTATE" CHAR(1 BYTE) DEFAULT '1'  NULL ,
"REMAK" VARCHAR2(4000 BYTE) NULL ,
"ISFORMHIDDEN" CHAR(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."T_RIM_WF_WORK_LOG" IS '工作流过程的工作项日志表';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."GUID" IS '主键';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."CASEID" IS '过程实例标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."WORKID" IS '工作项标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."ACTIVITYINSTID" IS '活动实例标识';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."PERFORMER" IS '执行人';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."ARRIVEDATE" IS '到达时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."ACCEPTDATE" IS '接受时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."FINISHDATE" IS '完成时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."CANRETURN" IS '是否可回退, Y/N';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."CANRETAKE" IS '是否可取回, Y/N';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."SEQNO" IS '工作项在过程中被派发的序号';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."ISCOMMITED" IS '是否已提交, Y/N';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."LIMITDATE" IS '工作项要求完成的最后期限';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."NOTE" IS '处理意见';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."FLAG" IS '0正常1被回退';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."ISMAIN" IS '0省里1地市';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."CRETATETIME" IS '创建时间';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."PSTATE" IS '1未阅2正在处理3已处理4系统收回';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."REMAK" IS '备注';
COMMENT ON COLUMN "500000_FREQDB"."T_RIM_WF_WORK_LOG"."ISFORMHIDDEN" IS '是否在表单中隐藏 0：显示，1：隐藏';

-- ----------------------------
-- Table structure for TMPTABLE_R_CQJIANGP
-- ----------------------------
DROP TABLE "500000_FREQDB"."TMPTABLE_R_CQJIANGP";
CREATE TABLE "500000_FREQDB"."TMPTABLE_R_CQJIANGP" (
"GUID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for WF_COMMONLY_USED_TERMS
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_COMMONLY_USED_TERMS";
CREATE TABLE "500000_FREQDB"."WF_COMMONLY_USED_TERMS" (
"COMMONLY_USED_TERMS_ID" VARCHAR2(36 BYTE) NOT NULL ,
"COMMONLY_USED_TERMS" VARCHAR2(200 BYTE) NULL ,
"USERID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_COMMONLY_USED_TERMS" IS '常用语(审批意见)';
COMMENT ON COLUMN "500000_FREQDB"."WF_COMMONLY_USED_TERMS"."COMMONLY_USED_TERMS_ID" IS '主键';
COMMENT ON COLUMN "500000_FREQDB"."WF_COMMONLY_USED_TERMS"."COMMONLY_USED_TERMS" IS '常用语';
COMMENT ON COLUMN "500000_FREQDB"."WF_COMMONLY_USED_TERMS"."USERID" IS '使用人ID';

-- ----------------------------
-- Table structure for WF_CONSIGNMENT
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_CONSIGNMENT";
CREATE TABLE "500000_FREQDB"."WF_CONSIGNMENT" (
"CONSIGNOR" VARCHAR2(40 BYTE) NOT NULL ,
"ASSIGNEE" VARCHAR2(40 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_CONSIGNMENT" IS '设定代理。用户授权他人代理自己的事务。';
COMMENT ON COLUMN "500000_FREQDB"."WF_CONSIGNMENT"."CONSIGNOR" IS '委托人';
COMMENT ON COLUMN "500000_FREQDB"."WF_CONSIGNMENT"."ASSIGNEE" IS '受托人';

-- ----------------------------
-- Table structure for WF_DATAFIELDACL
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_DATAFIELDACL";
CREATE TABLE "500000_FREQDB"."WF_DATAFIELDACL" (
"PACKAGEID" NVARCHAR2(36) NOT NULL ,
"PROCESSID" NUMBER(6) NOT NULL ,
"ACTIVITYID" NUMBER(6) NOT NULL ,
"DATAFIELDID" VARCHAR2(10 BYTE) NOT NULL ,
"PERMISSION" NUMBER(1) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_DATAFIELDACL" IS '流程中各步骤所拥有的数据域访问权限';
COMMENT ON COLUMN "500000_FREQDB"."WF_DATAFIELDACL"."PACKAGEID" IS '过程定义包的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DATAFIELDACL"."PROCESSID" IS '过程定义的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DATAFIELDACL"."ACTIVITYID" IS '活动标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DATAFIELDACL"."DATAFIELDID" IS '数据域标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DATAFIELDACL"."PERMISSION" IS '权限值';

-- ----------------------------
-- Table structure for WF_DEF_CACHEACTNAME
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_DEF_CACHEACTNAME";
CREATE TABLE "500000_FREQDB"."WF_DEF_CACHEACTNAME" (
"PACKAGEID" VARCHAR2(36 BYTE) NOT NULL ,
"PROCESSID" NUMBER(6) NOT NULL ,
"ACTIVITYID" NUMBER(6) NOT NULL ,
"ACTIVITYNAME" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;

-- ----------------------------
-- Table structure for WF_DEF_CACHEPKGNAME
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_DEF_CACHEPKGNAME";
CREATE TABLE "500000_FREQDB"."WF_DEF_CACHEPKGNAME" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"NAME" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_DEF_CACHEPKGNAME" IS '缓存工作流定义的名称列表，用于改善相应数据浏览页面的性能';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_CACHEPKGNAME"."ID" IS '流程定义包的ID';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_CACHEPKGNAME"."NAME" IS '流程定义名称';

-- ----------------------------
-- Table structure for WF_DEF_MAIN
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_DEF_MAIN";
CREATE TABLE "500000_FREQDB"."WF_DEF_MAIN" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"NAME" VARCHAR2(60 BYTE) NULL ,
"LASTRELEASEDPROCESS" NUMBER(6) DEFAULT 0  NULL ,
"LASTPROCESS" NUMBER(6) DEFAULT 0  NULL ,
"BUSINESS" VARCHAR2(36 BYTE) NULL ,
"CREATED" DATE NULL ,
"DESCRIPTION" VARCHAR2(200 BYTE) NULL ,
"VENDOR" VARCHAR2(200 BYTE) NULL ,
"XPDLVERSION" VARCHAR2(10 BYTE) DEFAULT 1.0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_DEF_MAIN" IS '工作流定义主表';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."NAME" IS '流程名称';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."LASTRELEASEDPROCESS" IS '最新发布的过程定义的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."LASTPROCESS" IS '最新的过程定义的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."BUSINESS" IS '工作流过程所对应的业务模块标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."CREATED" IS '创建日期';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."DESCRIPTION" IS '描述';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."VENDOR" IS '说明模型定义的由来，包括开发者的名字，产品名称和产品的发布序号';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_MAIN"."XPDLVERSION" IS '规范版本, 本规范的现行版本 "1.0"';

-- ----------------------------
-- Table structure for WF_DEF_VER
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_DEF_VER";
CREATE TABLE "500000_FREQDB"."WF_DEF_VER" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"VER" NUMBER(6) NOT NULL ,
"DOCID" VARCHAR2(36 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_DEF_VER" IS '工作流定义版本';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_VER"."ID" IS '工作流定义标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_VER"."VER" IS '版本号';
COMMENT ON COLUMN "500000_FREQDB"."WF_DEF_VER"."DOCID" IS '流程定义文件的标识';

-- ----------------------------
-- Table structure for WF_RT_ACTIVITY
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_ACTIVITY";
CREATE TABLE "500000_FREQDB"."WF_RT_ACTIVITY" (
"ID" VARCHAR2(36 BYTE) NOT NULL ,
"CASEID" NUMBER(12) NULL ,
"ACTIVITYID" NUMBER(6) NULL ,
"ISACTIVATE" CHAR(1 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_ACTIVITY" IS '工作流过程的活动实例列表。 此表只记录业务活动的实例数据';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ACTIVITY"."ID" IS '活动实例数据的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ACTIVITY"."CASEID" IS '过程实例数据的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ACTIVITY"."ACTIVITYID" IS '活动定义的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ACTIVITY"."ISACTIVATE" IS '是否处于活动状态';

-- ----------------------------
-- Table structure for WF_RT_BRANCH
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_BRANCH";
CREATE TABLE "500000_FREQDB"."WF_RT_BRANCH" (
"BRANCHID" VARCHAR2(36 BYTE) NOT NULL ,
"CASEID" NUMBER(12) NOT NULL ,
"SPLITACTIVITY" NUMBER(6) NOT NULL ,
"BRANCHNUM" NUMBER(6) NOT NULL ,
"JOINEDNUM" NUMBER(6) DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_BRANCH" IS '记录工作流过程实例分流及其聚合信息';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_BRANCH"."CASEID" IS '过程实例标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_BRANCH"."SPLITACTIVITY" IS '所对应的分流活动的标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_BRANCH"."BRANCHNUM" IS '分枝数目';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_BRANCH"."JOINEDNUM" IS '已汇聚的数目';

-- ----------------------------
-- Table structure for WF_RT_CASE
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_CASE";
CREATE TABLE "500000_FREQDB"."WF_RT_CASE" (
"ID" NUMBER(12) NOT NULL ,
"PACKAGEID" VARCHAR2(36 BYTE) NOT NULL ,
"PROCESSID" NUMBER(6) NOT NULL ,
"SUBJECT" VARCHAR2(200 BYTE) NULL ,
"CREATOR" VARCHAR2(40 BYTE) NULL ,
"CREATED" DATE NOT NULL ,
"STATUS" CHAR(1 BYTE) NOT NULL ,
"FINISHDATE" DATE NULL ,
"DATAKEY" VARCHAR2(36 BYTE) NULL ,
"PROJECTREF" VARCHAR2(36 BYTE) NULL ,
"ENDACTIVITY" VARCHAR2(60 BYTE) NULL ,
"LIMITDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_CASE" IS '该表用于保存过程实例数据';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."ID" IS '过程实例ID';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."PACKAGEID" IS '所对应的工作流过程定义包';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."PROCESSID" IS '所对应的过程定义';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."SUBJECT" IS '主题';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."CREATOR" IS '创建人';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."CREATED" IS '创建时间';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."STATUS" IS '状态：0 - 正在处理(InProcessing);1 - 挂起(Suspend);2 --中止(Cancel);3 - 完成(Finished)';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."FINISHDATE" IS '完成时间';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."DATAKEY" IS '过程实例所对应的业务数据的键值';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."PROJECTREF" IS '过程实例相关的项目，用于与项目管理中的相关项目建立链接';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."ENDACTIVITY" IS '活动完成后所到达的结束活动的名称';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_CASE"."LIMITDATE" IS '过程完成的最后期限';

-- ----------------------------
-- Table structure for WF_RT_NOTE
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_NOTE";
CREATE TABLE "500000_FREQDB"."WF_RT_NOTE" (
"WORKID" VARCHAR2(36 BYTE) NOT NULL ,
"NOTE" VARCHAR2(500 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_NOTE" IS '当审批意见由工作流引擎自动管理时，在表保存审批意见';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_NOTE"."WORKID" IS '工作项ID';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_NOTE"."NOTE" IS '审批意见';

-- ----------------------------
-- Table structure for WF_RT_ROLLBACKSTACK
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_ROLLBACKSTACK";
CREATE TABLE "500000_FREQDB"."WF_RT_ROLLBACKSTACK" (
"CASEID" NUMBER(12) NOT NULL ,
"OPNO" NUMBER(12) NOT NULL ,
"TRANSACTIONNO" NUMBER(12) NULL ,
"OPTARGET" VARCHAR2(36 BYTE) NULL ,
"OPTYPE" NUMBER(3) NULL ,
"OPTIME" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_ROLLBACKSTACK" IS '过程实例的回滚堆栈。此表记录了对当前过程实例所做的可被回滚的操作，此表数据将被用于对过程实例进行回滚。 ';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ROLLBACKSTACK"."CASEID" IS '过程实例标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ROLLBACKSTACK"."OPNO" IS '操作序号';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ROLLBACKSTACK"."TRANSACTIONNO" IS '事务序号';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ROLLBACKSTACK"."OPTARGET" IS '所操作数据条目';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ROLLBACKSTACK"."OPTYPE" IS '操作类型。1－创建过程实例；2－创建活动实例；3－创建工作项；4－提交工作项；5－建立分枝；6－增加已汇聚数目; 7－结束过程';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_ROLLBACKSTACK"."OPTIME" IS '操作时间';

-- ----------------------------
-- Table structure for WF_RT_WORK
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_WORK";
CREATE TABLE "500000_FREQDB"."WF_RT_WORK" (
"CASEID" NUMBER(12) NULL ,
"WORKID" VARCHAR2(36 BYTE) NOT NULL ,
"ACTIVITYINSTID" VARCHAR2(36 BYTE) NULL ,
"PERFORMER" VARCHAR2(40 BYTE) NULL ,
"ARRIVEDATE" DATE NULL ,
"ACCEPTDATE" DATE NULL ,
"FINISHDATE" DATE NULL ,
"CANRETURN" CHAR(1 BYTE) DEFAULT 'N'  NULL ,
"CANRETAKE" CHAR(1 BYTE) DEFAULT 'N'  NULL ,
"SEQNO" NUMBER(6) NULL ,
"ISCOMMITED" CHAR(1 BYTE) DEFAULT 'N'  NULL ,
"LIMITDATE" DATE NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_WORK" IS '工作流过程的工作项';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."CASEID" IS '过程实例标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."WORKID" IS '工作项标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."ACTIVITYINSTID" IS '活动实例标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."PERFORMER" IS '执行人';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."ARRIVEDATE" IS '到达时间';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."ACCEPTDATE" IS '接受时间';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."FINISHDATE" IS '完成时间';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."CANRETURN" IS '是否可回退, Y/N';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."CANRETAKE" IS '是否可取回, Y/N';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."SEQNO" IS '工作项在过程中被派发的序号';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."ISCOMMITED" IS '是否已提交, Y/N';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK"."LIMITDATE" IS '工作项要求完成的最后期限';

-- ----------------------------
-- Table structure for WF_RT_WORK_XIETONG
-- ----------------------------
DROP TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG";
CREATE TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" (
"CASEID" NUMBER(12) NOT NULL ,
"WORKID" VARCHAR2(36 BYTE) NOT NULL ,
"ACTIVITYINSTID" VARCHAR2(36 BYTE) NOT NULL ,
"PERFORMER" VARCHAR2(40 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" IS '协同时处理上步骤执行者';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK_XIETONG"."CASEID" IS '过程实例标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK_XIETONG"."WORKID" IS '工作项标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK_XIETONG"."ACTIVITYINSTID" IS '活动实例标识';
COMMENT ON COLUMN "500000_FREQDB"."WF_RT_WORK_XIETONG"."PERFORMER" IS '执行人';

-- ----------------------------
-- Procedure structure for FEE_450M_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_450M_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
  --测试
  --无线接入450MHZ频段计费'120100'
  --无线接入450MHZ频段
  CURSOR C_COUNT450M IS SELECT * FROM V_RIM_RSM_FEE_450m_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and (freq_emit>0 or freq_rece>0)
              ORDER BY decl_code,FREQ_EMIT,FREQ_RECE;
  V_COUNT450M C_COUNT450M%ROWTYPE;
  --
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --无线接入450MHZ频段记录合计数量
  V_Count_FEE_450m NUMBER;
  X_Count_FEE_450m NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --
begin
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --
  --无线接入450MHZ频段计费'120100'
  V_FLAG := 'N';
  OPEN C_COUNT450M;
  LOOP
    FETCH C_COUNT450M INTO V_COUNT450M;
    EXIT WHEN C_COUNT450M%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT450M.begin_date,'YYYY'),substr(V_COUNT450M.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT450M.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120100';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_FEE_450m FROM V_RIM_RSM_FEE_450m_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and (freq_emit>0 or freq_rece>0);
      --第一条记录
      V_AMOUNT := 0;
      X_Count_FEE_450m :=0;
      X_Count_FEE_450m := X_Count_FEE_450m+1;
      --计算发射频点
      if V_COUNT450M.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
       --计算技术资料表编号是否相同
      ----台站相同，继续累加
      --计算发射频点
      IF  V_DECLCODE=V_COUNT450M.decl_code AND V_APPLYCODE=V_COUNT450M.APPLY_CODE THEN
        if V_COUNT450M.freq_emit>0 then
           V_AMOUNT := V_AMOUNT+1;
        end if;
        --计算接收频点
        if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
          V_AMOUNT := V_AMOUNT+1;
        end if;
      END IF;
      --记录累加
      V_APPLYCODE := V_COUNT450M.APPLY_CODE;
      V_DERATE := V_COUNT450M.DERATE;
      V_DECLCODE := V_COUNT450M.decl_code;
      --取出减免比例
      v_deptpay:= V_COUNT450M.dept_pay;
      v_areacode:= V_COUNT450M.area_code;
      V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      V_PARTMID:=V_PART;
       --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT450M.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT450M.APPLY_CODE,0,length(V_COUNT450M.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNT450M.DECL_CODE;---技术资料表编号
      V_FLAG := 'Y';

    ELSIF V_APPLYCODE=V_COUNT450M.apply_code and V_DECLCODE=V_COUNT450M.decl_code THEN
      X_Count_FEE_450m := X_Count_FEE_450m+1;
     --台站相同，继续累加
      --计算发射频点
      if V_COUNT450M.freq_emit>0 and V_FREQEMIT <> V_COUNT450M.FREQ_EMIT then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_FREQRECE <> V_COUNT450M.FREQ_RECE and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT450M.DERATE;
    ELSE
      INSERT INTO T_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120100',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ----第二次初始数据
      --记录累加
      --记录累加
      V_APPLYCODE := V_COUNT450M.APPLY_CODE;
      V_DERATE := V_COUNT450M.DERATE;
      V_DECLCODE := V_COUNT450M.decl_code;
      --取出减免比例
      v_deptpay:= V_COUNT450M.dept_pay;
      v_areacode:= V_COUNT450M.area_code;
      V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      V_PARTMID:=V_PART;
       --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT450M.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT450M.APPLY_CODE,0,length(V_COUNT450M.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNT450M.DECL_CODE;---技术资料表编号
       V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_FEE_450m := X_Count_FEE_450m+1;
      --如果执行最后条记录
      IF V_Count_FEE_450m=X_Count_FEE_450m THEN
           --计算发射频点
          if V_COUNT450M.freq_emit>0 then
            V_AMOUNT := V_AMOUNT+1;
          end if;
          --计算接收频点
          if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
            V_AMOUNT := V_AMOUNT+1;
          end if;
          --
          INSERT INTO T_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120100',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          --
      END IF;
      --
    END IF;
  END LOOP;
  CLOSE C_COUNT450M;
  --
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      DECL_CODE_Temp,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120100',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;


end fee_450m_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_DATA_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_DATA_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
  --测试
  --无线数据频段
  CURSOR C_COUNTDATA IS SELECT * FROM V_RIM_RSM_FEE_data_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and (freq_emit>0 or freq_rece>0)
              ORDER BY decl_code,FREQ_EMIT,FREQ_RECE;
  V_COUNTDATA C_COUNTDATA%ROWTYPE;


  ----
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --无线数据频段记录合计数量
  V_Count_Data NUMBER;
  X_Count_Data NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  ----
begin
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  ----
  --无线数据频段计费'140100'
  V_FLAG := 'N';
  OPEN C_COUNTDATA;
  LOOP
    FETCH C_COUNTDATA INTO V_COUNTDATA;
    EXIT WHEN C_COUNTDATA%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTDATA.begin_date,'YYYY'),substr(V_COUNTDATA.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTDATA.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    ---
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='140100';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_Data FROM V_RIM_RSM_FEE_data_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND (freq_emit>0 or freq_rece>0) ;
      --第一条记录
      V_AMOUNT := 0;
      X_Count_Data :=0;
      X_Count_Data := X_Count_Data+1;
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算技术资料表编号是否相同
      ----台站相同，继续累加
      --计算发射频点
      IF  V_DECLCODE=V_COUNTDATA.decl_code AND V_APPLYCODE=V_COUNTDATA.APPLY_CODE THEN
        if V_COUNTDATA.freq_emit>0 then
           V_AMOUNT := V_AMOUNT+1;
        end if;
        --计算接收频点
        if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
          V_AMOUNT := V_AMOUNT+1;
        end if;
      END IF;
      --
      --记录累加
      V_APPLYCODE := V_COUNTDATA.APPLY_CODE;
      V_DERATE := V_COUNTDATA.DERATE;
      V_DECLCODE := V_COUNTDATA.decl_code;
       --取出减免比例
      v_deptpay:= V_COUNTDATA.dept_pay;
      v_areacode:= V_COUNTDATA.area_code;
      V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      V_PARTMID:=V_PART;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTDATA.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTDATA.APPLY_CODE,0,length(V_COUNTDATA.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTDATA.DECL_CODE;---技术资料表编号
      V_FLAG := 'Y';
    ELSIF v_applycode=V_COUNTDATA.apply_code and v_declcode=V_COUNTDATA.decl_code THEN
      X_Count_Data := X_Count_Data+1;
      --台站相同，继续累加
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 and V_FREQEMIT <> V_COUNTDATA.FREQ_EMIT then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_FREQRECE <> V_COUNTDATA.FREQ_RECE and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      end if;
    ELSE
      ----新增明细记录表
      INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ----第二次初始数据
      --记录累加
      V_APPLYCODE := V_COUNTDATA.APPLY_CODE;
      V_DERATE := V_COUNTDATA.DERATE;
      V_DECLCODE := V_COUNTDATA.decl_code;
       --取出减免比例
      v_deptpay:= V_COUNTDATA.dept_pay;
      v_areacode:= V_COUNTDATA.area_code;
      V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      V_PARTMID:=V_PART;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTDATA.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTDATA.APPLY_CODE,0,length(V_COUNTDATA.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTDATA.DECL_CODE;---技术资料表编号
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_Data := X_Count_Data+1;
      --如果执行最后条记录
      IF V_Count_Data=X_Count_Data THEN
         --
         --计算发射频点
          if V_COUNTDATA.freq_emit>0 then
            V_AMOUNT := V_AMOUNT+1;
          end if;
          --计算接收频点
          if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
            V_AMOUNT := V_AMOUNT+1;
          end if;
         ----新增明细记录表
         INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
         --新增明细记录表
      END IF;
      --
    END IF;
    --
  END LOOP;
  CLOSE C_COUNTDATA;
  ---
  IF V_FLAG = 'Y' THEN
      ----新增明细记录表
      INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
  END IF;
  ----
  COMMIT;
end fee_data_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_E_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_E_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
 ----测试
 ----地球站
  --地球站
  CURSOR C_COUNTEARTH IS SELECT * FROM V_RIM_RSM_FEE_E_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
  V_COUNTEARTH C_COUNTEARTH%ROWTYPE;
  --
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --地球站记录合计数量
  V_Count_EARTH NUMBER;----记录合计数量
  X_Count_EARTH NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --
begin
  ----
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  ----
  --地球站计费'100100'
  V_FLAG := 'N';
  OPEN  C_COUNTEARTH;
  LOOP
      FETCH  C_COUNTEARTH INTO V_COUNTEARTH;
      EXIT WHEN  C_COUNTEARTH%NOTFOUND;
      --在计费年度之前的年份
      V_YEAR := to_number(nvl(to_char(V_COUNTEARTH.begin_date,'YYYY'),substr(V_COUNTEARTH.APPLY_code,5,4)));
      V_MONTH := to_number(nvl(to_char(V_COUNTEARTH.begin_date,'MM'),'1'));
      if V_YEAR < COUNTYEAR then
        V_PART :=100;
      elsif V_YEAR = COUNTYEAR then
        IF V_MONTH<7 THEN
        --第一、二季度计收全年
          V_PART :=100;
        ELSIF V_MONTH>9 THEN
          --第四季度计收25％
          V_PART :=25;
        ELSE
          --第三季度计收50％
          V_PART :=50;
        END IF;
      ELSE
        V_PART :=0;
      END IF;
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='100100';
      --
      V_AMOUNT := CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0));
      --记录累加
      v_applycode1 :=V_COUNTEARTH.apply_code;
      v_declcode1 :=V_COUNTEARTH.decl_code;
      V_DERATE := V_COUNTEARTH.DERATE;
      V_FLAG := 'N';
      --
      IF V_AMOUNT<=0 THEN
         V_AMOUNT:=0;
      END IF;
      --
      ApplyCode_Temp := Substr(v_applycode1,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(v_applycode1,0,length(v_applycode1)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTEARTH.DECL_CODE;---技术资料表编号
      --
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                      v_declcode1,
                      V_COUNTEARTH.dept_pay,
                      V_COUNTEARTH.area_code,
                        COUNTYEAR,
                        '100100',
                        V_DERATE,
                        V_PART,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PART/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
        ----
        V_AMOUNT :=0;
        v_applycode1 :=V_COUNTEARTH.apply_code;
        v_declcode1 :=V_COUNTEARTH.decl_code;
        V_DERATE := V_COUNTEARTH.DERATE;
        ----
  END LOOP;
  CLOSE  C_COUNTEARTH;
  ---
  commit;

end FEE_E_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_ENTER1G8_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_ENTER1G8_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
   ----测试
   ----无线接入1.8G
   --无线接入1.8G
  CURSOR C_COUNT1G8 IS SELECT * FROM V_RIM_RSM_FEE_ENTER1G8_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
  V_COUNT1G8 C_COUNT1G8%ROWTYPE;
  ---
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
  V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --无线接入1.8G记录合计数量
  V_Count_ENTER1G8 NUMBER;
  X_Count_ENTER1G8 NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --

begin
  ----
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  ----
  --无线接入1.8G '120200'
  V_FLAG := 'N';
  OPEN C_COUNT1G8;
  LOOP
    FETCH C_COUNT1G8 INTO V_COUNT1G8;
    EXIT WHEN C_COUNT1G8%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT1G8.begin_date,'YYYY'),substr(V_COUNT1G8.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT1G8.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;

    --取出收费标准
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120200';
    --第一条记录
    V_AMOUNT := 1;
     --记录累加
    V_DERATE := V_COUNT1G8.DERATE;
     --取出减免比例
    V_DECLCODE := V_COUNT1G8.DECL_CODE;
    v_deptpay:= V_COUNT1G8.dept_pay;
    v_areacode:= V_COUNT1G8.area_code;
    V_PARTMID:=V_PART;

    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNT1G8.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNT1G8.APPLY_CODE,0,length(V_COUNT1G8.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNT1G8.DECL_CODE;---技术资料表编号
    ---
    INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      DECL_CODE_Temp,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120200',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
    V_AMOUNT := 1;
    V_DECLCODE := V_COUNT1G8.DECL_CODE;
    v_deptpay:= V_COUNT1G8.dept_pay;
    v_areacode:= V_COUNT1G8.area_code;
    V_DERATE := V_COUNT1G8.DERATE;
    --取出减免比例
  END LOOP;
  CLOSE C_COUNT1G8;

  ----
  COMMIT;

end FEE_ENTER1G8_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_ENTER3G5_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_ENTER3G5_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS

  ----测试
  ----【无线接入3.5G】
  --无线接入3.5G
  CURSOR C_COUNT3G5 IS SELECT * FROM V_RIM_RSM_FEE_ENTER3G5_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT3G5 C_COUNT3G5%ROWTYPE;
  ---
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --无线接入3.5G记录合计数量
  V_Count_ENTER3G5 NUMBER;----记录合计数量
  X_Count_ENTER3G5 NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
begin
  ---
  ---
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  ---
  --无线接入系统(3.5GHZ)计费'120300'
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNT3G5;
  LOOP
    FETCH  C_COUNT3G5 INTO V_COUNT3G5;
    EXIT WHEN  C_COUNT3G5%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT3G5.begin_date,'YYYY'),substr(V_COUNT3G5.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT3G5.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120300';
      ------数据记录合计数量
      SELECT count(*) INTO V_Count_ENTER3G5 FROM V_RIM_RSM_FEE_ENTER3G5_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
       --第一条记录
      X_Count_ENTER3G5 :=0;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
       ---记录累加
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
       V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
       --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
      V_PARTMID := V_PART;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT3G5.DECL_CODE AND V_APPLYCODE = V_COUNT3G5.APPLY_CODE THEN
      --同一个台站则带宽数据累计
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --计算发射频点
      if V_FREQEMIT <> V_COUNT3G5.FREQ_EMIT then
         V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
        V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT3G5.DERATE;
       --取出减免比例
       ---记录累加
      V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH/3.5);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH :=0;
      --计算发射频点
     -- V_BANDWIDTH :=  V_BANDWIDTH+nvl(V_COUNT3G5.CHAN_DIST,3.5)*2;
      V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
       --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
      --取出减免比例
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --如果执行最后条记录
      if X_Count_ENTER3G5=V_Count_ENTER3G5 then
          ---记录累加
          v_deptpay:= V_COUNT3G5.dept_pay;
          v_areacode:= V_COUNT3G5.area_code;
          V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT3G5.CHAN_DIST,1));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT3G5.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT3G5.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT3G5.DECL_CODE;---技术资料表编号
          --
          INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          --
      end if;
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
    V_DECLCODE := V_COUNT3G5.DECL_CODE;
    v_deptpay:= V_COUNT3G5.dept_pay;
    v_areacode:= V_COUNT3G5.area_code;
    V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
    ----
  END LOOP;
  CLOSE  C_COUNT3G5;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH/3.5);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120300',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;

----
commit;

end FEE_ENTER3G5_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_ENTER3G5_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_ENTER3G5_TEST"(COUNTYEAR NUMBER,DEPTCODE varchar2,areacode varchar2)
IS
  --- ----测试
  ----年度【无线接入3.5G】
  ----年度无线接入3.5G
  --无线接入3.5G
  CURSOR C_COUNT3G5 IS SELECT * FROM V_rim_rsm_FEE_ENTER3G5
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>0
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNT3G5 C_COUNT3G5%ROWTYPE;
  ----
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;


  --无线接入3.5G记录合计数量
  V_Count_ENTER3G5 NUMBER;----记录合计数量
  X_Count_ENTER3G5 NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  ----
begin
  --
  DELETE FROM T_RIM_RSM_PAY_DEPTITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_deptnetitem WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECKITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  --无线接入系统(3.5GHZ)计费'120300'
  V_FLAG := 'N';
  X_Count_ENTER3G5 :=0;
  V_BANDWIDTH :=0;
  OPEN  C_COUNT3G5;
  LOOP
    FETCH  C_COUNT3G5 INTO V_COUNT3G5;
    EXIT WHEN  C_COUNT3G5%NOTFOUND;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120300';
        ----数据记录合计数量
      SELECT count(*) INTO V_Count_ENTER3G5 FROM V_rim_rsm_FEE_ENTER3G5
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      if X_Count_ENTER3G5 = 0 then
         X_Count_ENTER3G5 :=0;
      end if;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --第一条记录
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      if V_BANDWIDTH  =0 then
         V_BANDWIDTH :=0;
      end if;
      --计算发射频点
       V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
      V_DERATE := V_COUNT3G5.DERATE;
       --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_APPLYCODE = V_COUNT3G5.APPLY_CODE AND V_DECLCODE = V_COUNT3G5.DECL_CODE THEN
      --同一个台站则带宽数据累计
       X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --计算发射频点
      if V_FREQEMIT <> V_COUNT3G5.FREQ_EMIT then
         V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
        V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
       ---记录累加
      V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH/4);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
        --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT3G5.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := 'T';----申请表类型T或PA
      --
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH :=0;
      --计算发射频点
      V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
      --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNT3G5.APPLY_CODE;
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      if  X_Count_ENTER3G5 =V_Count_ENTER3G5 then
          ---记录累加
          v_deptpay:= V_COUNT3G5.dept_pay;
          v_areacode:= V_COUNT3G5.area_code;
          V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT3G5.CHAN_DIST,1));

          --空值则默认为一个单位
          V_DERATE := V_COUNT3G5.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT3G5.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := 'T';--substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT3G5.DECL_CODE;---技术资料表编号
          --
          INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        ApplyCode_Temp,
                        DECL_CODE_Temp,
                        COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
          --
      end if;
      --
    END IF;
     ---记录累加
    V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
    V_DECLCODE := V_COUNT3G5.DECL_CODE;
    v_deptpay:= V_COUNT3G5.dept_pay;
    v_areacode:= V_COUNT3G5.area_code;
    V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
    --
  END LOOP;
  CLOSE  C_COUNT3G5;
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH/3.5);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    ApplyType_Temp := 'T';--substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '120300',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
   ----
  commit;

end FEE_ENTER3G5_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_ENTER5G8_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_ENTER5G8_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
   ---测试
  ----【无线接入5.8G】
  --无线接入5.8G
  --无线接入5.8G
  CURSOR C_COUNT5G82 IS SELECT * FROM V_RIM_RSM_FEE_ENTER5G8_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND (FREQ_EMIT>= 5725 and  FREQ_EMIT<= 5850 )
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT5G82 C_COUNT5G82%ROWTYPE;
  --
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --无线接入5.8G记录合计数量
  V_Count_ENTER5G8 NUMBER;----记录合计数量
  X_Count_ENTER5G8 NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  ---
begin
  ---
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  ----
  --无线接入系统(5.8GHZ)计费'120400'
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNT5G82;
  LOOP
    FETCH  C_COUNT5G82 INTO V_COUNT5G82;
    EXIT WHEN  C_COUNT5G82%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT5G82.begin_date,'YYYY'),substr(V_COUNT5G82.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT5G82.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120400';
      ------数据记录合计数量
      SELECT count(*) INTO V_Count_ENTER5G8 FROM v_rim_rsm_fee_enter5g8_Apply
               WHERE APPLY_CODE='T500020150020'
                AND begin_YEAR=2015
                AND (FREQ_EMIT>= 5725 and  FREQ_EMIT<= 5850 ) ;
      --第一条记录
      X_Count_ENTER5G8 :=0;
      X_Count_ENTER5G8 :=X_Count_ENTER5G8+1;
      -----记录累加
      -- V_DECLCODE := V_COUNT5G82.DECL_CODE;
      v_deptpay:= V_COUNT5G82.dept_pay;
      v_areacode:= V_COUNT5G82.area_code;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      V_PARTMID := V_PART;
      ---
      if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G82.DERATE;
      --取出减免比例
      V_FLAG := 'Y';

    ELSIF V_DECLCODE=V_COUNT5G82.DECL_CODE AND V_APPLYCODE= V_COUNT5G82.APPLY_CODE THEN
      --同一个台站则带宽数据累计
      X_Count_ENTER5G8 :=X_Count_ENTER5G8+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT5G82.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
       --取出减免比例
       ---记录累加
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT5G82.DERATE;
      v_deptpay:= V_COUNT5G82.dept_pay;
      v_areacode:= V_COUNT5G82.area_code;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      V_PARTMID := V_PART;
      --
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120400',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH :=0;
      V_BANDWIDTH := nvl(V_COUNT5G82.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNT5G82.DERATE;
      --取出减免比例
      V_APPLYCODE := V_COUNT5G82.APPLY_CODE;
      V_DECLCODE := V_COUNT5G82.DECL_CODE;
      v_deptpay:= V_COUNT5G82.dept_pay;
      v_areacode:= V_COUNT5G82.area_code;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_ENTER5G8 :=X_Count_ENTER5G8+1;
      --如果执行最后条记录
      if X_Count_ENTER5G8 = V_Count_ENTER5G8 then
          V_DECLCODE := V_COUNT5G82.DECL_CODE;
          v_deptpay:= V_COUNT5G82.dept_pay;
          v_areacode:= V_COUNT5G82.area_code;
          V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
          --空值则默认为一个单位
          V_DERATE := V_COUNT5G82.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          ----
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT5G82.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT5G82.APPLY_CODE,0,length(V_COUNT5G82.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT5G82.DECL_CODE;---技术资料表编号
          ----
          INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120400',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      end if;
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT5G82.APPLY_CODE;
    V_DECLCODE := V_COUNT5G82.DECL_CODE;
    v_deptpay:= V_COUNT5G82.dept_pay;
    v_areacode:= V_COUNT5G82.area_code;
    V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
  END LOOP;
  CLOSE  C_COUNT5G82;
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120400',
                      V_DERATE,
                      V_PARTMID,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
---
commit;

end FEE_ENTER5G8_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_KP2G4_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_KP2G4_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
  ---测试
  ---扩频系统2.4G
  CURSOR C_COUNT2G4 IS SELECT * FROM V_RIM_RSM_FEE_KP2G4_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT2G4 C_COUNT2G4%ROWTYPE;
  --
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --移动台记录合计数量
  V_Count_kp2g4 NUMBER;
  X_Count_kp2g4 NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
begin
   ---
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --
   --扩频系统2.4G计费'130100'
  V_FLAG := 'N';
  OPEN C_COUNT2G4;
  LOOP
    FETCH C_COUNT2G4 INTO V_COUNT2G4;
    EXIT WHEN C_COUNT2G4%NOTFOUND;

    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT2G4.begin_date,'YYYY'),substr(V_COUNT2G4.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT2G4.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    ----
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130100';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_kp2g4 FROM V_RIM_RSM_FEE_KP2G4_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0 ;
      --第一条记录
      X_Count_kp2g4 :=0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
      ---记录累加
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
      V_PARTMID := V_PART;
      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
       --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT2G4.DECL_CODE AND V_APPLYCODE= V_COUNT2G4.APPLY_CODE THEN
      ---
      X_Count_kp2g4 :=X_Count_kp2g4+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT2G4.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
       ---记录累加
      V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_PARTMID := V_PART;
      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT2G4.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      --
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
     -- DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
      --
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '130100',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);

      V_BANDWIDTH := nvl(V_COUNT2G4.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
      --取出减免比例
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      --
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
       --如果执行最后条记录
      IF X_Count_kp2g4=V_Count_kp2g4 THEN
         ---记录累加
          v_deptpay:= V_COUNT2G4.dept_pay;
          v_areacode:= V_COUNT2G4.area_code;
          V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT2G4.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
          --
          INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                          decl_code,
                          dept_pay,
                          area_code,
                          COUNT_YEAR,
                          ITEM_CODE,
                          DERATE,
                          pay_rate,
                          AMOUNT,
                          SUM_COUNT,
                          SUM_PAY,
                          Applytype)
                      VALUES (ApplyCode_Temp,
                            DECL_CODE_Temp,
                          v_deptpay,
                          v_areacode,
                          COUNTYEAR,
                            '130100',
                            V_DERATE,
                            V_PARTMID,
                          V_AMOUNT,
                            V_AMOUNT*V_FEE,
                            V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                            ApplyType_Temp);
      END IF;

    END IF;
    --
    ---记录累加
    V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
    V_DECLCODE := V_COUNT2G4.DECL_CODE;
    v_deptpay:= V_COUNT2G4.dept_pay;
    v_areacode:= V_COUNT2G4.area_code;
    V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
    --
  END LOOP;
  CLOSE C_COUNT2G4;

  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '130100',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ---
  COMMIT;
end fee_kp2g4_apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_KP2G4_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_KP2G4_TEST"(COUNTYEAR NUMBER,DEPTCODE varchar2,areacode varchar2)
IS
  ----测试
  ----扩频系统2.4G
  --扩频系统2.4G
  CURSOR C_COUNT2G4 IS SELECT * FROM V_rim_rsm_FEE_KP2G4
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>0
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNT2G4 C_COUNT2G4%ROWTYPE;
--
 V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  --申请表编号

  V_DECLCODE VARCHAR2(6);
  V_DECLCODE1 VARCHAR2(6);
   --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
  --数量
  V_BANDWIDTH NUMBER;
  --带宽
  V_DERATE NUMBER;
  --减免
  V_FEE NUMBER;
  --

  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);

  --无绳电话的收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --无线数据频段记录合计数量
  V_Count_Data NUMBER;
  X_Count_Data NUMBER;----记录次数
  --无线接入450MHZ频段记录合计数量
  V_Count_FEE_450m NUMBER;
  X_Count_FEE_450m NUMBER;----记录次数
  --移动台记录合计数量
  V_Count_mobile NUMBER;
  X_Count_mobile NUMBER;----记录次数
  --扩频系统2.4G记录合计数量
  V_Count_kp2g4 NUMBER;
  X_Count_kp2g4 NUMBER;----记录次数
  --扩频系统5.8G记录合计数量
  V_Count_KP5G8 NUMBER;
  X_Count_KP5G8 NUMBER;----记录次数
  --无线接入3.5G记录合计数量
  V_Count_ENTER3G5 NUMBER;----记录合计数量
  X_Count_ENTER3G5 NUMBER;----记录次数
  --无线接入5.8G记录合计数量
  V_Count_ENTER5G8 NUMBER;----记录合计数量
  X_Count_ENTER5G8 NUMBER;----记录次数
  --雷达站10G以下--记录合计数量
  V_CountR_10GDOWN NUMBER;----记录合计数量
  X_CountR_10GDOWN NUMBER;----记录次数
  --雷达站10G以上--记录合计数量
  V_CountR_10GUP NUMBER;----记录合计数量
  X_CountR_10GUP NUMBER;----记录次数
   --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
--
begin
  ---
  DELETE FROM T_RIM_RSM_PAY_DEPTITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_deptnetitem WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECKITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  --
  --扩频系统2.4G计费'130100'
  V_FLAG := 'N';
  OPEN C_COUNT2G4;
  LOOP
    FETCH C_COUNT2G4 INTO V_COUNT2G4;
    EXIT WHEN C_COUNT2G4%NOTFOUND;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130100';
       ----数据记录合计数量
      SELECT count(*) INTO V_Count_kp2g4 FROM V_rim_rsm_FEE_KP2G4
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      X_Count_kp2g4 :=0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
      --
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
        --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_APPLYCODE = V_COUNT2G4.APPLY_CODE AND V_DECLCODE = V_COUNT2G4.DECL_CODE THEN
       X_Count_kp2g4 :=X_Count_kp2g4+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT2G4.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
        --带宽累加，空值则默认为一个单位
      end if;
       ---记录累加
      V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;

      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;

      V_DERATE := V_COUNT2G4.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
       --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
     -- DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '130100',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---

      V_BANDWIDTH := nvl(V_COUNT2G4.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
       --取出减免比例
      V_APPLYCODE:= V_COUNT2G4.APPLY_CODE;
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
       --如果执行最后条记录
      IF X_Count_kp2g4=V_Count_kp2g4 THEN
         ---记录累加
          v_deptpay:= V_COUNT2G4.dept_pay;
          v_areacode:= V_COUNT2G4.area_code;
          V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));

          --空值则默认为一个单位
          V_DERATE := V_COUNT2G4.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
          --
          INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        ApplyCode_Temp,
                        DECL_CODE_Temp,
                        COUNTYEAR,
                        '130100',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      END IF;
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
    V_DECLCODE := V_COUNT2G4.DECL_CODE;
    v_deptpay:= V_COUNT2G4.dept_pay;
    v_areacode:= V_COUNT2G4.area_code;
    V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
    --
  END LOOP;
  CLOSE C_COUNT2G4;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '130100',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100);
  END IF;
--
  COMMIT;

end FEE_KP2G4_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_KP5G8_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_KP5G8_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
   ---测试
   ---扩频系统5.8G
   --扩频系统5.8G
  CURSOR C_COUNT5G81 IS SELECT * FROM V_RIM_RSM_FEE_KP5G8_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT5G81 C_COUNT5G81%ROWTYPE;
  --
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --扩频系统5.8G记录合计数量
  V_Count_KP5G8 NUMBER;----记录合计数量
  X_Count_KP5G8 NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --
begin
  ---
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --
  --扩频系统5.8G计费'130200'
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNT5G81;
  LOOP
    FETCH  C_COUNT5G81 INTO V_COUNT5G81;
    EXIT WHEN  C_COUNT5G81%NOTFOUND;

    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT5G81.begin_date,'YYYY'),substr(V_COUNT5G81.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT5G81.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130200';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_KP5G8 FROM V_RIM_RSM_FEE_KP5G8_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      X_Count_KP5G8 :=0;
      X_Count_KP5G8 :=X_Count_KP5G8+1;
       ---记录累加
      v_deptpay:= V_COUNT5G81.dept_pay;
      v_areacode:= V_COUNT5G81.area_code;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      V_PARTMID := V_PART;
      if (V_BANDWIDTH = 0 ) then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G81.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT5G81.DECL_CODE AND V_APPLYCODE=V_COUNT5G81.APPLY_CODE THEN
       X_Count_KP5G8 :=X_Count_KP5G8+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT5G81.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT5G81.DERATE;
       --取出减免比例
       ---记录累加
      V_APPLYCODE := V_COUNT5G81.APPLY_CODE;
      V_DECLCODE := V_COUNT5G81.DECL_CODE;
      v_deptpay:= V_COUNT5G81.dept_pay;
      v_areacode:= V_COUNT5G81.area_code;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '130200',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH := CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G81.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNT5G81.DECL_CODE;
      v_deptpay:= V_COUNT5G81.dept_pay;
      v_areacode:= V_COUNT5G81.area_code;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_KP5G8 :=X_Count_KP5G8+1;
       --如果执行最后条记录
      IF X_Count_KP5G8=V_Count_KP5G8 THEN
         ---记录累加
          v_deptpay:= V_COUNT5G81.dept_pay;
          v_areacode:= V_COUNT5G81.area_code;
          V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT5G81.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT5G81.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT5G81.APPLY_CODE,0,length(V_COUNT5G81.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT5G81.DECL_CODE;---技术资料表编号
          --
         INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '130200',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      END IF;
      --
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT5G81.APPLY_CODE;
    V_DECLCODE := V_COUNT5G81.DECL_CODE;
    v_deptpay:= V_COUNT5G81.dept_pay;
    v_areacode:= V_COUNT5G81.area_code;
    V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
  END LOOP;
  CLOSE  C_COUNT5G81;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '130200',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --
  commit;

end FEE_KP5G8_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_MMDS_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_MMDS_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
  --测试
  --有线电视传输MMDS台
  CURSOR C_COUNTMMDS IS SELECT * FROM V_RIM_RSM_FEE_MMDS_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNTMMDS C_COUNTMMDS%ROWTYPE;
  --
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --移动台记录合计数量
  V_Count_MMDS NUMBER;
  X_Count_MMDS NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --
begin

  ---
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;

  --有线电视传输（MMDS）计费'930000'
  V_FLAG := 'N';
  OPEN C_COUNTMMDS;
  LOOP
    FETCH C_COUNTMMDS INTO V_COUNTMMDS;
    EXIT WHEN C_COUNTMMDS%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTMMDS.begin_date,'YYYY'),substr(V_COUNTMMDS.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTMMDS.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_DECLCODE := V_COUNTMMDS.DECL_CODE;
      V_BANDWIDTH := nvl(V_COUNTMMDS.CHAN_DIST,1);
      v_deptpay:= V_COUNTMMDS.dept_pay;
      v_areacode:= V_COUNTMMDS.area_code;
      V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
      V_PARTMID := V_PART;
      --空值则默认为一个单位
      V_DERATE := V_COUNTMMDS.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='930000';
      --取出收费标准
    ELSIF V_DECLCODE = V_COUNTMMDS.DECL_CODE THEN
     --台站相同，继续累加
      if V_FREQEMIT <> V_COUNTMMDS.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+nvl(V_COUNTMMDS.CHAN_DIST,1);
        V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTMMDS.DERATE;
    ELSE
    --台站不同,保存计算结果
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '930000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH := nvl(V_COUNTMMDS.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNTMMDS.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNTMMDS.DECL_CODE;
      v_deptpay:= V_COUNTMMDS.dept_pay;
      v_areacode:= V_COUNTMMDS.area_code;
      V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE C_COUNTMMDS;
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
    END IF;
    INSERT INTO t_rim_rsm_PAY_APPLYITEM  (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '930000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;

  --
  COMMIT;


end fee_mmds_apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_MOBILE_APPLY_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_MOBILE_APPLY_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
  --
  --测试
  --移动台
  CURSOR C_COUNTMOBILE IS SELECT * FROM V_RIM_RSM_FEE_mobile_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
  V_COUNTMOBILE C_COUNTMOBILE%ROWTYPE;
  ---
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --移动台记录合计数量
  V_Count_mobile NUMBER;
  X_Count_mobile NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
begin
  ---
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --
  --移动台计费'820000'
  V_FLAG := 'N';
  OPEN C_COUNTMOBILE;
  LOOP
    FETCH C_COUNTMOBILE INTO V_COUNTMOBILE;
    EXIT WHEN C_COUNTMOBILE%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTMOBILE.begin_date,'YYYY'),substr(V_COUNTMOBILE.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTMOBILE.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='820000';
       ----数据记录合计数量
      SELECT count(*) INTO V_Count_mobile FROM V_RIM_RSM_FEE_mobile_Apply
                WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
      --第一条记录
      V_AMOUNT := 1;
      X_Count_mobile :=0;
      X_Count_mobile :=X_Count_mobile+1;
       --记录累加
      V_DERATE := V_COUNTMOBILE.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNTMOBILE.decl_code;
      v_deptpay:= V_COUNTMOBILE.dept_pay;
      v_areacode:= V_COUNTMOBILE.area_code;
      V_PARTMID:=V_PART;
      V_FLAG := 'Y';
      -----获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTMOBILE.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTMOBILE.APPLY_CODE,0,length(V_COUNTMOBILE.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTMOBILE.DECL_CODE;---技术资料表编号
      ---
    ELSIF V_DECLCODE=V_COUNTMOBILE.decl_code THEN
      X_Count_mobile :=X_Count_mobile+1;
     --台站相同，继续累加
      V_AMOUNT := V_AMOUNT+1;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTMOBILE.DERATE;
    ELSE
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTMOBILE.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTMOBILE.APPLY_CODE,0,length(V_COUNTMOBILE.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTMOBILE.DECL_CODE;---技术资料表编号
      --
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '820000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_AMOUNT := 1;
      V_DECLCODE := V_COUNTMOBILE.decl_code;
      v_deptpay:= V_COUNTMOBILE.dept_pay;
      v_areacode:= V_COUNTMOBILE.area_code;
      V_DERATE := V_COUNTMOBILE.DERATE;
      --
      X_Count_mobile :=X_Count_mobile+1;
       --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE;
  ---
  IF   V_FLAG = 'Y' AND V_Count_mobile= X_Count_mobile THEN
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '820000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
  END IF;
  ---

   COMMIT;
end FEE_mobile_Apply_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_MOBILE_DEPT_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_MOBILE_DEPT_TEST"(COUNTYEAR NUMBER,DEPTCODE varchar2,areacode varchar2)
is
  ----测试
  --移动台计费'820000'【1000MHz以下的无线电台(移动电台)】
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  --申请表编号

  V_DECLCODE VARCHAR2(6);
  V_DECLCODE1 VARCHAR2(6);
   --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
  --数量
  V_BANDWIDTH NUMBER;
  --带宽
  V_DERATE NUMBER;
  --减免
  V_FEE NUMBER;
  --

  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);

  --无绳电话的收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --无线数据频段记录合计数量
  V_Count_Data NUMBER;
  X_Count_Data NUMBER;----记录次数
  --无线接入450MHZ频段记录合计数量
  V_Count_FEE_450m NUMBER;
  X_Count_FEE_450m NUMBER;----记录次数
  --移动台记录合计数量
  V_Count_mobile NUMBER;
  X_Count_mobile NUMBER;----记录次数
  --扩频系统2.4G记录合计数量
  V_Count_kp2g4 NUMBER;
  X_Count_kp2g4 NUMBER;----记录次数
  --扩频系统5.8G记录合计数量
  V_Count_KP5G8 NUMBER;
  X_Count_KP5G8 NUMBER;----记录次数
  --无线接入3.5G记录合计数量
  V_Count_ENTER3G5 NUMBER;----记录合计数量
  X_Count_ENTER3G5 NUMBER;----记录次数
  --无线接入5.8G记录合计数量
  V_Count_ENTER5G8 NUMBER;----记录合计数量
  X_Count_ENTER5G8 NUMBER;----记录次数
  --雷达站10G以下--记录合计数量
  V_CountR_10GDOWN NUMBER;----记录合计数量
  X_CountR_10GDOWN NUMBER;----记录次数
  --雷达站10G以上--记录合计数量
  V_CountR_10GUP NUMBER;----记录合计数量
  X_CountR_10GUP NUMBER;----记录次数
   --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）

    --移动台(1000MHz以下的无线电台(移动电台)--'820000')
  CURSOR C_COUNTMOBILE IS SELECT * FROM V_rim_rsm_FEE_mobile
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTMOBILE C_COUNTMOBILE%ROWTYPE;

begin

  DELETE FROM T_RIM_RSM_PAY_DEPTITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_deptnetitem WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECKITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;

  --移动台计费'820000'【1000MHz以下的无线电台(移动电台)】
  V_FLAG := 'N';
  OPEN C_COUNTMOBILE;
  LOOP
    FETCH C_COUNTMOBILE INTO V_COUNTMOBILE;
    EXIT WHEN C_COUNTMOBILE%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode :=V_COUNTMOBILE.apply_code;
      v_declcode :=V_COUNTMOBILE.decl_code;
      V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='820000';
      --取出收费标准
    ELSIF v_applycode=V_COUNTMOBILE.apply_code and v_declcode=V_COUNTMOBILE.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
    ELSE
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '820000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_AMOUNT := 1;
      v_applycode :=V_COUNTMOBILE.apply_code;
      v_declcode :=V_COUNTMOBILE.decl_code;
      V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '820000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;


end FEE_MOBILE_Dept_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_R_APPLY10GDOWN_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_R_APPLY10GDOWN_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
----测试
----雷达站10G以下(按照微波站收费)
--雷达站10G以下(按照微波站收费)
  CURSOR C_COUNTR10GDOWN IS SELECT * FROM V_RIM_RSM_FEE_R_Apply
        WHERE APPLY_CODE=APPLYCODE
        AND begin_YEAR=COUNTYEAR
        and FREQ_EMIT<=10000 and FREQ_EMIT>0
        ORDER BY decl_code,FREQ_EMIT;
  V_COUNTR10GDOWN C_COUNTR10GDOWN%ROWTYPE;
  ----
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --雷达站10G以下--记录合计数量
  V_Count_10GDOWN NUMBER;----记录合计数量
  X_Count_10GDOWN NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  ---
begin
  ----
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --
  --10G以下雷达站计费'910000'(按照微波站收费，重庆需求)
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNTR10GDOWN;
  LOOP
    FETCH  C_COUNTR10GDOWN INTO V_COUNTR10GDOWN;
    EXIT WHEN  C_COUNTR10GDOWN%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTR10GDOWN.begin_date,'YYYY'),substr(V_COUNTR10GDOWN.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTR10GDOWN.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='910000';
      ------数据记录合计数量
      SELECT count(*) INTO V_Count_10GDOWN FROM V_RIM_RSM_FEE_R_Apply
        WHERE APPLY_CODE=APPLYCODE
        AND begin_YEAR=COUNTYEAR
        and FREQ_EMIT<=10000 and FREQ_EMIT>0 ;
      ----
      X_Count_10GDOWN :=0;
      X_Count_10GDOWN :=X_Count_10GDOWN+1;
      --第一条记录
      --V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GDOWN.dept_pay;
      v_areacode:= V_COUNTR10GDOWN.area_code;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      V_PARTMID:= V_PART;
       if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
       --空值则默认为一个单位
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNTR10GDOWN.DECL_CODE  AND V_APPLYCODE = V_COUNTR10GDOWN.APPLY_CODE THEN
      --同一个台站则带宽数据累计
      X_Count_10GDOWN :=X_Count_10GDOWN+1;
      ----
      if V_FREQEMIT <> V_COUNTR10GDOWN.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTR10GDOWN.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH :=0;
      V_BANDWIDTH := CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      V_APPLYCODE := V_COUNTR10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GDOWN.dept_pay;
      v_areacode:= V_COUNTR10GDOWN.area_code;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_10GDOWN :=X_Count_10GDOWN+1;
      IF X_Count_10GDOWN = V_Count_10GDOWN  THEN
          V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
          v_deptpay:= V_COUNTR10GDOWN.dept_pay;
          v_areacode:= V_COUNTR10GDOWN.area_code;
          V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
          --空值则默认为一个单位
          V_DERATE := V_COUNTR10GDOWN.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          ----
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNTR10GDOWN.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNTR10GDOWN.APPLY_CODE,0,length(V_COUNTR10GDOWN.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNTR10GDOWN.DECL_CODE;---技术资料表编号
          ---
           INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          ---
      END IF;
      --如果执行最后条记录
    END IF;
    ---
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      ---记录累加
      V_APPLYCODE := V_COUNTR10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GDOWN.dept_pay;
      v_areacode:= V_COUNTR10GDOWN.area_code;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
    ----
  END LOOP;
  CLOSE  C_COUNTR10GDOWN;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '910000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----
commit;

end FEE_R_Apply10GDOWN_TEST;

/

-- ----------------------------
-- Procedure structure for FEE_R_APPLY10GUP_TEST
-- ----------------------------
CREATE OR REPLACE procedure "500000_FREQDB"."FEE_R_APPLY10GUP_TEST"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
----测试
----雷达站10G以上(按照微波站收费)
--雷达站10G以上(按照微波站收费)
  --雷达站10G以上(按照微波站收费)
  CURSOR C_COUNTR10GUP IS SELECT * FROM V_RIM_RSM_FEE_R_Apply
        WHERE APPLY_CODE=APPLYCODE
        AND begin_YEAR=COUNTYEAR
        and FREQ_EMIT>10000
        ORDER BY decl_code,FREQ_EMIT;
  V_COUNTR10GUP C_COUNTR10GUP%ROWTYPE;
  ----
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
  V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;

  --雷达站10G以上--记录合计数量
  V_CountR_10GUP NUMBER;----记录合计数量
  X_CountR_10GUP NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  ---
begin
  ----
  ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ----
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --
  --雷达站10G以上计费'920000'(按照微波站收费，重庆需求)
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNTR10GUP;
  LOOP
    FETCH  C_COUNTR10GUP INTO V_COUNTR10GUP;
    EXIT WHEN  C_COUNTR10GUP%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTR10GUP.begin_date,'YYYY'),substr(V_COUNTR10GUP.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTR10GUP.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='920000';
      ------数据记录合计数量
      SELECT count(*) INTO V_CountR_10GUP FROM V_RIM_RSM_FEE_R_Apply
          WHERE APPLY_CODE=APPLYCODE
          AND begin_YEAR=COUNTYEAR
          and FREQ_EMIT>10000;
      ----
      X_CountR_10GUP :=0;
      X_CountR_10GUP :=X_CountR_10GUP+1;
      --第一条记录
      --V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GUP.dept_pay;
      v_areacode:= V_COUNTR10GUP.area_code;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      V_PARTMID:= V_PART;
       if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
       --空值则默认为一个单位
      V_DERATE := V_COUNTR10GUP.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNTR10GUP.DECL_CODE  AND V_APPLYCODE = V_COUNTR10GUP.APPLY_CODE THEN
      --同一个台站则带宽数据累计
      X_CountR_10GUP :=X_CountR_10GUP+1;
      ----
      if V_FREQEMIT <> V_COUNTR10GUP.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTR10GUP.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH :=0;
      V_BANDWIDTH := CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNTR10GUP.DERATE;
      --取出减免比例
      V_APPLYCODE := V_COUNTR10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
      v_deptpay:= V_COUNTR10GUP.dept_pay;
      v_areacode:= V_COUNTR10GUP.area_code;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
       X_CountR_10GUP :=X_CountR_10GUP+1;
      IF X_CountR_10GUP = V_CountR_10GUP  THEN
          V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
          v_deptpay:= V_COUNTR10GUP.dept_pay;
          v_areacode:= V_COUNTR10GUP.area_code;
          V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
          --空值则默认为一个单位
          V_DERATE := V_COUNTR10GUP.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          ----
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNTR10GUP.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNTR10GUP.APPLY_CODE,0,length(V_COUNTR10GUP.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNTR10GUP.DECL_CODE;---技术资料表编号
          ---
           INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          ---
      END IF;
      --如果执行最后条记录
    END IF;
    ---
      V_DERATE := V_COUNTR10GUP.DERATE;
      --取出减免比例
      ---记录累加
      V_APPLYCODE := V_COUNTR10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
      v_deptpay:= V_COUNTR10GUP.dept_pay;
      v_areacode:= V_COUNTR10GUP.area_code;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
    ----
  END LOOP;
  CLOSE  C_COUNTR10GUP;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '920000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----
commit;

end FEE_R_Apply10GUP_TEST;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEECOMPUTE_APP_PA
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEECOMPUTE_APP_PA"(applycode VARCHAR,COUNTYEAR NUMBER,COUNTHANDLER VARCHAR,COUNTDATE DATE,DATACONFIRM VARCHAR,CHECKHANDLER VARCHAR,CHECKDATE DATE)
IS
  V_SUM    NUMBER;
  V_SUM1   NUMBER;
  V_COUNT  NUMBER;
 CURSOR C_dept IS
  select APP_PA_ID_CARD,org_area_code from v_rim_rsm_pa_equcheckcount where app_code=applycode and APP_PA_ID_CARD<>'null' and APP_PA_ID_CARD is not null group by APP_PA_ID_CARD,org_area_code;
  v_dept C_dept%ROWTYPE;
BEGIN
 OPEN C_dept;
  LOOP
    FETCH  C_dept INTO v_dept;
    EXIT WHEN  C_dept%NOTFOUND;
  P_rim_rsm_FEEITEM_EQUAPP_PA(COUNTYEAR,applycode);
    V_SUM :=0;
  SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_EQUPA_APPLYITEM WHERE apply_code=applycode AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_EQUPA_APPLYITEM WHERE apply_code=applycode AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM1;
  END IF;
  IF DATACONFIRM='N' THEN
    UPDATE T_RIM_RSM_PAY_EQUPA_APPLYCOUNT  SET   SUM_COUNT  =V_SUM,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =NULL,
                    CHECK_DATE  =NULL
                WHERE  apply_code  =applycode
                  and  area_code  =v_dept.org_area_code
                  and  IDENTIFICATION_CARD  =v_dept.app_pa_id_card
                  and  COUNT_YEAR  =COUNTYEAR;

    IF SQL%NOTFOUND THEN
    --属于新加的计算结果,并且有计算细目记录
      INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYCOUNT (ITEM_NO,
                      APPLY_CODE,
                      IDENTIFICATION_CARD,
                      area_code,
                      COUNT_YEAR,
                      SUM_COUNT,
                      HANDLE_DATE,
                      HANDLER,
                      CONFIRM,
                      CHECKER,
                      CHECK_DATE)
                    VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                      APPLYCODE,
                      v_dept.app_pa_id_card,
                      v_dept.org_area_code,
                      COUNTYEAR,
                      V_SUM,
                      COUNTDATE,
                      COUNTHANDLER,
                      DATACONFIRM,
                      CHECKHANDLER,
                      CHECKDATE);

    END IF;
  ELSE
    UPDATE T_RIM_RSM_PAY_EQUPA_APPLYCOUNT   SET  SUM_COUNT  =V_SUM,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =CHECKHANDLER,
                    CHECK_DATE  =CHECKDATE
                WHERE  apply_code  =applycode
                  and COUNT_YEAR  =COUNTYEAR;
    IF SQL%NOTFOUND THEN
     --属于新加的计算结果,并且有计算细目记录
           INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYCOUNT (ITEM_NO,
                      APPLY_CODE,
                      IDENTIFICATION_CARD,
                      area_code,
                      COUNT_YEAR,
                      SUM_COUNT,
                      HANDLE_DATE,
                      HANDLER,
                      CONFIRM,
                      CHECKER,
                      CHECK_DATE)
                    VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                      APPLYCODE,
                      v_dept.app_pa_id_card,
                      v_dept.org_area_code,
                      COUNTYEAR,
                      V_SUM,
                      COUNTDATE,
                      COUNTHANDLER,
                      DATACONFIRM,
                      CHECKHANDLER,
                      CHECKDATE);
    END IF;
   END IF;
 END LOOP;
 IF V_dept.App_Pa_Id_Card IS NULL THEN
       UPDATE T_RIM_RSM_PAY_EQUPA_APPLYCOUNT  SET   SUM_COUNT  =0,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =NULL,
                    CHECK_DATE  =NULL
                WHERE  apply_code  =applycode
                  and COUNT_YEAR  =COUNTYEAR;
  END IF;
  close C_dept;
  commit;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEECOMPUTE_APPLY
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEECOMPUTE_APPLY"(APPLYCODE varchar2,COUNTYEAR NUMBER,COUNTHANDLER VARCHAR,COUNTDATE DATE,DATACONFIRM VARCHAR,CHECKHANDLER VARCHAR,CHECKDATE DATE)
IS
----新台计费
  V_SUM    NUMBER;
  V_SUM1   NUMBER;
  V_COUNT  NUMBER;
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  CURSOR C_dept IS
    select dept_pay,area_code from v_RIM_RSM_PAY_dept where apply_code= 'T'||applycode and dept_pay<>'null' and dept_pay is not null group by dept_pay,area_code;
  v_dept C_dept%ROWTYPE;
BEGIN
  P_RIM_RSM_FEEITEM_APPLY(COUNTYEAR,APPLYCODE);
  --
  --ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  --ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  ApplyCode_Temp := APPLYCODE;
  ApplyType_Temp := 'T';
  --
  OPEN C_dept;
  LOOP
    FETCH  C_dept INTO v_dept;
    EXIT WHEN  C_dept%NOTFOUND;
    V_SUM :=0;
    SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
    IF V_COUNT>0 THEN
       SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
      V_SUM := V_SUM1;
    END IF;
    SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND  dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
    IF V_COUNT>0 THEN
       SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND  dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
      V_SUM := V_SUM+V_SUM1;
    END IF;
     SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND  dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND  dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM+V_SUM1;
  END IF;
    SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_APPLYOTHER WHERE APPLY_CODE=ApplyCode_Temp and dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
    IF V_COUNT>0 THEN
      SELECT SUM(FEE_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_APPLYOTHER WHERE APPLY_CODE=ApplyCode_Temp and dept_pay=v_dept.dept_pay and area_code=v_dept.area_code AND COUNT_YEAR=COUNTYEAR;
      V_SUM := V_SUM+V_SUM1;
    END IF;
    IF DATACONFIRM='N' THEN
      UPDATE T_RIM_RSM_PAY_APPLYCOUNT  SET  SUM_COUNT  =V_SUM,
                      HANDLE_DATE  =COUNTDATE,
                      HANDLER    =COUNTHANDLER,
                      CONFIRM    =DATACONFIRM,
                      CHECKER     =NULL,
                      CHECK_DATE  =NULL,
                      APPLYTYPE = ApplyType_Temp
                  WHERE  APPLY_CODE  =ApplyCode_Temp AND
                      dept_pay  =v_dept.dept_pay and
                      area_code  =v_dept.area_code and
                      COUNT_YEAR  =COUNTYEAR;
      IF SQL%NOTFOUND THEN
      --属于新加的计算结果,并且有计算细目记录
        INSERT INTO T_RIM_RSM_PAY_APPLYCOUNT(ITEM_NO,
                      APPLY_CODE,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      SUM_COUNT,
                      HANDLE_DATE,
                      HANDLER,
                      CONFIRM,
                      APPLYTYPE)
                    VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                      ApplyCode_Temp,
                      v_dept.dept_pay,
                      v_dept.area_code,
                      COUNTYEAR,
                      V_SUM,
                      COUNTDATE,
                      COUNTHANDLER,
                      DATACONFIRM,
                      ApplyType_Temp);
      END IF;
    ELSE
      UPDATE T_RIM_RSM_PAY_APPLYCOUNT  SET  SUM_COUNT  =V_SUM,
                      HANDLE_DATE  =COUNTDATE,
                      HANDLER    =COUNTHANDLER,
                      CONFIRM    =DATACONFIRM,
                      CHECKER     =CHECKHANDLER,
                      CHECK_DATE  =CHECKDATE,
                      APPLYTYPE = ApplyType_Temp
                  WHERE  APPLY_CODE  =ApplyCode_Temp AND
                      dept_pay  =v_dept.dept_pay and
                      area_code  =v_dept.area_code and
                      COUNT_YEAR  =COUNTYEAR;
      IF SQL%NOTFOUND THEN
      --属于新加的计算结果,并且有计算细目记录
        INSERT INTO T_RIM_RSM_PAY_APPLYCOUNT(ITEM_NO,
                      APPLY_CODE,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      SUM_COUNT,
                      HANDLE_DATE,
                      HANDLER,
                      CONFIRM,
                      CHECKER,
                      CHECK_DATE,
                      APPLYTYPE)
                    VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                      ApplyCode_Temp,
                      v_dept.dept_pay,
                      v_dept.area_code,
                      COUNTYEAR,
                      V_SUM,
                      COUNTDATE,
                      COUNTHANDLER,
                      DATACONFIRM,
                      CHECKHANDLER,
                      CHECKDATE,
                      ApplyType_Temp);
      END IF;
    END IF;
     IF V_SUM=0 THEN
        SELECT COUNT(*) INTO V_COUNT FROM v_rim_rsm_pay_dept where to_char(STAT_Date_Start,'YYYY')=TO_CHAR(COUNTYEAR)
           and APPLY_code=TO_CHAR('T'||APPLYCODE) and dept_pay<>'null';
         IF V_COUNT=0 THEN
             DELETE FROM T_RIM_RSM_PAY_APPLYCOUNT
               WHERE  APPLY_CODE  =ApplyCode_Temp AND
                  dept_pay  =v_dept.dept_pay and
                  area_code  =v_dept.area_code and
                  COUNT_YEAR  =COUNTYEAR;
         END IF;
     END IF;
  END LOOP;
  IF V_dept.Dept_Pay IS NULL THEN
      UPDATE T_RIM_RSM_PAY_APPLYCOUNT  SET  SUM_COUNT =0,
                      HANDLE_DATE  =COUNTDATE,
                      HANDLER    =COUNTHANDLER,
                      CONFIRM    =DATACONFIRM,
                      CHECKER     =NULL,
                      CHECK_DATE  =NULL
                  WHERE  APPLY_CODE  =ApplyCode_Temp AND
                      COUNT_YEAR  =COUNTYEAR;
  END IF;
  CLOSE C_dept;
  commit;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEECOMPUTE_DEPT
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEECOMPUTE_DEPT"(DEPTCODE VARCHAR,areacode varchar,COUNTYEAR NUMBER,COUNTHANDLER VARCHAR,COUNTDATE DATE,DATACONFIRM VARCHAR,CHECKHANDLER VARCHAR,CHECKDATE DATE)
IS
  V_SUM    NUMBER;
  V_SUM1   NUMBER;
  V_COUNT  NUMBER;
BEGIN
  ----年度计费
  P_RIM_RSM_FEEITEM_DEPT(COUNTYEAR,DEPTCODE,areacode);
    V_SUM :=0;
  SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_pay_deptnetitem WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_pay_deptnetitem WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM1;
  END IF;
  SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_DEPTITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_DEPTITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM+V_SUM1;
  END IF;
  SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_EQUCHECKITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode  AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_EQUCHECKITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode  AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM+V_SUM1;
  END IF;
  SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_DEPTOTHER WHERE DEPT_PAY=DEPTCODE and area_code=areacode  AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(FEE_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_DEPTOTHER WHERE DEPT_PAY=DEPTCODE and area_code=areacode  AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM+V_SUM1;
  END IF;
  IF DATACONFIRM='N' THEN
    UPDATE T_RIM_RSM_PAY_DEPTCOUNT  SET   SUM_COUNT  =V_SUM,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =NULL,
                    CHECK_DATE  =NULL
                WHERE  DEPT_PAY  =DEPTCODE
                  AND  area_code=areacode
                  and COUNT_YEAR  =COUNTYEAR;
    IF SQL%NOTFOUND THEN
    --属于新加的计算结果,并且有计算细目记录
      INSERT INTO T_RIM_RSM_PAY_DEPTCOUNT (ITEM_NO,
                       DEPT_PAY,
                       area_code,
                       COUNT_YEAR,
                       SUM_COUNT,
                       HANDLE_DATE,
                       HANDLER,
                       CONFIRM)
                  VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                       DEPTCODE,
                       areacode,
                       COUNTYEAR,
                       V_SUM,
                       COUNTDATE,
                       COUNTHANDLER,
                       DATACONFIRM);
    END IF;
  ELSE
    UPDATE T_RIM_RSM_PAY_DEPTCOUNT   SET  SUM_COUNT  =V_SUM,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =CHECKHANDLER,
                    CHECK_DATE  =CHECKDATE
                WHERE  DEPT_PAY  =DEPTCODE
                  AND  area_code=areacode
                  and COUNT_YEAR  =COUNTYEAR;
    IF SQL%NOTFOUND THEN
     --属于新加的计算结果,并且有计算细目记录
      INSERT INTO T_RIM_RSM_PAY_DEPTCOUNT (ITEM_NO,
                       DEPT_PAY,
                       area_code,
                       COUNT_YEAR,
                       SUM_COUNT,
                       HANDLE_DATE,
                       HANDLER,
                       CONFIRM,
                       CHECKER,
                       CHECK_DATE)
                  VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                       DEPTCODE,
                       areacode,
                       COUNTYEAR,
                       V_SUM,
                       COUNTDATE,
                       COUNTHANDLER,
                       DATACONFIRM,
                       CHECKHANDLER,
                       CHECKDATE);
    END IF;
  END IF;
  commit;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEECOMPUTE_DEPT_PA
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEECOMPUTE_DEPT_PA"(DEPTCODE VARCHAR,areacode varchar,COUNTYEAR NUMBER,COUNTHANDLER VARCHAR,COUNTDATE DATE,DATACONFIRM VARCHAR,CHECKHANDLER VARCHAR,CHECKDATE DATE)
IS
  V_SUM    NUMBER;
  V_SUM1   NUMBER;
  V_COUNT  NUMBER;
BEGIN
  P_rim_rsm_FEEITEM_EQUDEPT_PA(COUNTYEAR,DEPTCODE,areacode);
    V_SUM :=0;
  SELECT COUNT(*) INTO V_COUNT FROM T_RIM_RSM_PAY_EQUPADEPTITEM WHERE IDENTIFICATION_CARD=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  IF V_COUNT>0 THEN
    SELECT SUM(SUM_PAY) INTO V_SUM1 FROM T_RIM_RSM_PAY_EQUPADEPTITEM WHERE IDENTIFICATION_CARD=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
    V_SUM := V_SUM1;
  END IF;
  IF DATACONFIRM='N' THEN
    UPDATE T_RIM_RSM_PAY_EQUPADEPTCOUNT  SET   SUM_COUNT  =V_SUM,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =NULL,
                    CHECK_DATE  =NULL
                WHERE  IDENTIFICATION_CARD  =DEPTCODE
                  AND  area_code=areacode
                  and COUNT_YEAR  =COUNTYEAR;
    IF SQL%NOTFOUND THEN
    --属于新加的计算结果,并且有计算细目记录
      INSERT INTO T_RIM_RSM_PAY_EQUPADEPTCOUNT (ITEM_NO,
                       IDENTIFICATION_CARD,
                       area_code,
                       COUNT_YEAR,
                       SUM_COUNT,
                       HANDLE_DATE,
                       HANDLER,
                       CONFIRM)
                  VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                       DEPTCODE,
                       areacode,
                       COUNTYEAR,
                       V_SUM,
                       COUNTDATE,
                       COUNTHANDLER,
                       DATACONFIRM);
    END IF;
  ELSE
    UPDATE T_RIM_RSM_PAY_EQUPADEPTCOUNT   SET  SUM_COUNT  =V_SUM,
                    HANDLE_DATE  =COUNTDATE,
                    HANDLER    =COUNTHANDLER,
                    CONFIRM    =DATACONFIRM,
                    CHECKER     =CHECKHANDLER,
                    CHECK_DATE  =CHECKDATE
                WHERE  IDENTIFICATION_CARD  =DEPTCODE
                  AND  area_code=areacode
                  and COUNT_YEAR  =COUNTYEAR;
    IF SQL%NOTFOUND THEN
     --属于新加的计算结果,并且有计算细目记录
      INSERT INTO T_RIM_RSM_PAY_EQUPADEPTCOUNT (ITEM_NO,
                       IDENTIFICATION_CARD,
                       area_code,
                       COUNT_YEAR,
                       SUM_COUNT,
                       HANDLE_DATE,
                       HANDLER,
                       CONFIRM,
                       CHECKER,
                       CHECK_DATE)
                  VALUES(F_RIM_RSM_GETFEENO(COUNTYEAR),
                       DEPTCODE,
                       areacode,
                       COUNTYEAR,
                       V_SUM,
                       COUNTDATE,
                       COUNTHANDLER,
                       DATACONFIRM,
                       CHECKHANDLER,
                       CHECKDATE);
    END IF;
  END IF;
  commit;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEEITEM_APPLY
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEEITEM_APPLY"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
  ----新台计费
  
  --集群系统
  CURSOR C_COUNTJQ IS SELECT dept_pay,area_code,net_guid,
  min(begin_date) begin_date,freq,net_range,
  min(freq_note) freq_note,min(derate) derate ,
  ----【申请表编号、技术资料表编号】
  min(apply_code) APPLY_CODE,min(DECL_CODE) DECL_CODE
  FROM V_RIM_RSM_FEE_JQ_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and freq>0
              group BY dept_pay,area_code,net_guid,freq,net_range;
  V_COUNTJQ C_COUNTJQ%ROWTYPE;
  --寻呼系统
  CURSOR C_COUNTPB IS SELECT dept_pay,area_code,net_guid,
  ---【申请表编号、技术资料表编号】
  min(apply_code) APPLY_CODE,min(DECL_CODE) DECL_CODE ,
  min(begin_date) begin_date,freq_emit,net_range,
  min(freq_note) freq_note,min(derate) derate
  FROM V_RIM_RSM_FEE_PB_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and freq_emit>0
              group BY dept_pay,area_code,net_guid,freq_emit,net_range;
  V_COUNTPB C_COUNTPB%ROWTYPE;

  --广播电台
  CURSOR C_COUNTBC IS SELECT  dept_pay,area_code,net_guid,
  ----【申请表编号、技术资料表编号】
  min(apply_code) APPLY_CODE,min(DECL_CODE) DECL_CODE ,
  min(begin_date) begin_date,freq_emit,net_range,min(freq_note) freq_note,
  min(derate) derate  FROM V_RIM_RSM_FEE_BC_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and freq_emit>0
              group BY dept_pay,area_code,net_guid,freq_emit,net_range;
  V_COUNTBC C_COUNTBC%ROWTYPE;

  --电视
  CURSOR C_COUNTBT IS SELECT  dept_pay,area_code,net_guid,
  ----【申请表编号、技术资料表编号】
  min(apply_code) APPLY_CODE,min(DECL_CODE) DECL_CODE ,
  min(begin_date) begin_date,freq_emit,net_range,min(freq_note) freq_note,
  min(derate) derate
  FROM V_RIM_RSM_FEE_BT_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and freq_emit>0
              group BY dept_pay,area_code,net_guid,freq_emit,net_range;
  V_COUNTBT C_COUNTBT%ROWTYPE;

  ----无绳电话---410000
  ----暂时去掉
  /*
  CURSOR C_COUNTLINELESS IS SELECT * FROM V_RIM_RSM_FEE_LINELESS_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
  V_COUNTLINELESS C_COUNTLINELESS%ROWTYPE;

  */
  
  --船舶电台（吨位小于1600吨）
  CURSOR C_COUNTSHIP1 IS SELECT * FROM V_RIM_RSM_FEE_S_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND SHIP_TYPE<>'PH'
                AND TONNAGE<=1600
              ORDER BY decl_code;
  V_COUNTSHIP1 C_COUNTSHIP1%ROWTYPE;

  --船舶电台（吨位大于1600吨）
  CURSOR C_COUNTSHIP2 IS SELECT * FROM V_RIM_RSM_FEE_S_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND SHIP_TYPE<>'PH'
                AND TONNAGE>1600
              ORDER BY decl_code;
  V_COUNTSHIP2 C_COUNTSHIP2%ROWTYPE;

  --船舶电台（渔船，功率>=20马力）
  CURSOR C_COUNTSHIP3 IS SELECT * FROM V_RIM_RSM_FEE_S_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND SHIP_TYPE='PH'
                AND POWER>=20
              ORDER BY decl_code;
  V_COUNTSHIP3 C_COUNTSHIP3%ROWTYPE;

  --航空器电台(固定翼飞机27吨以上)
  CURSOR C_COUNTAERO1 IS SELECT * FROM V_RIM_RSM_FEE_A_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND TONNAGE>27
              ORDER BY decl_code;
  V_COUNTAERO1 C_COUNTAERO1%ROWTYPE;
  --航空器电台航空器电台(固定翼飞机5.7吨至27吨以下(含))
  CURSOR C_COUNTAERO2 IS SELECT * FROM V_RIM_RSM_FEE_A_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND TONNAGE<=27 and TONNAGE>5.7
              ORDER BY decl_code;
  V_COUNTAERO2 C_COUNTAERO2%ROWTYPE;
  --航空器电台(固定翼飞机5.7吨(含)以下)
  CURSOR C_COUNTAERO3 IS SELECT * FROM V_RIM_RSM_FEE_A_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND TONNAGE<=5.7  and TONNAGE>0
              ORDER BY decl_code;
  V_COUNTAERO3 C_COUNTAERO3%ROWTYPE;
  --航空器电台(旋翼飞机)
  CURSOR C_COUNTAERO4 IS SELECT * FROM V_RIM_RSM_FEE_A_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND TONNAGE=0
              ORDER BY decl_code;
  V_COUNTAERO4 C_COUNTAERO4%ROWTYPE;

  --无线数据频段----v_rim_rsm_fee_v该为
  CURSOR C_COUNTDATA IS SELECT * FROM v_rim_rsm_fee_data_apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR 
                /*
                AND ((FREQ_EMIT>=223.025 AND FREQ_EMIT<=235) OR (FREQ_RECE>=223.025 AND FREQ_RECE<=235)
                  OR (FREQ_EMIT>821 AND FREQ_EMIT<825) OR (FREQ_RECE>821 AND FREQ_RECE<825)
                  OR (FREQ_EMIT>866 AND FREQ_EMIT<870) OR (FREQ_RECE>866 AND FREQ_RECE<870)
                  OR (FREQ_EMIT>915 AND FREQ_EMIT<917) OR (FREQ_RECE>915 AND FREQ_RECE<917))
                  */
              ORDER BY decl_code,FREQ_EMIT,FREQ_RECE;
  V_COUNTDATA C_COUNTDATA%ROWTYPE;

  --无线接入450MHZ频段----v_rim_rsm_fee_v改为v_rim_rsm_fee_450m_apply
  CURSOR C_COUNT450M IS SELECT * FROM v_rim_rsm_fee_450m_apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR 
                /*
                AND ((FREQ_EMIT>=450.5 AND FREQ_EMIT<=451.975) OR (FREQ_RECE>=450.5 AND FREQ_RECE<=451.975)
                  OR (FREQ_EMIT>=460.5 AND FREQ_EMIT<=461.975) OR (FREQ_RECE>=460.5 AND FREQ_RECE<=461.975))
                */
              ORDER BY decl_code,FREQ_EMIT,FREQ_RECE;
  V_COUNT450M C_COUNT450M%ROWTYPE;

  --其它固定台【1000MHz以下的无线电台(固定电台)--'810000'】
  CURSOR C_COUNTOTHER IS SELECT dept_pay,area_code,net_guid,min(apply_code) apply_code,min(begin_date) begin_date,
       freq,min(freq_note) freq_note,min(derate) derate,decl_code
       FROM V_RIM_RSM_FEE_OTHER_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and freq>0
              group BY dept_pay,area_code,net_guid,freq,decl_code;
  V_COUNTOTHER C_COUNTOTHER%ROWTYPE;
  --移动台【1000MHz以下的无线电台(移动台)--'820000'】----V_RIM_RSM_FEE_MOBILE_Apply改为 V_RIM_RSM_FEE_U
  CURSOR C_COUNTMOBILE IS SELECT * FROM V_RIM_RSM_FEE_MOBILE_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
  V_COUNTMOBILE C_COUNTMOBILE%ROWTYPE;
  --MMDS台-----V_RIM_RSM_FEE_M改为V_rim_rsm_FEE_MMDS_Apply
  CURSOR C_COUNTMMDS IS SELECT * FROM V_rim_rsm_FEE_MMDS_Apply
              WHERE DECL_CODE LIKE 'TF%'
                AND APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND STAT_TYPE='MD'
                AND FREQ_EMIT>0
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNTMMDS C_COUNTMMDS%ROWTYPE;
  --无线接入1.8G----视图V_rim_rsm_FEE_ENTER1G8 改为V_rim_rsm_FEE_ENTER1G8_Apply
  CURSOR C_COUNT1G8 IS SELECT * FROM V_rim_rsm_FEE_ENTER1G8_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                --AND decl_code like 'C%'
              ORDER BY decl_code;
  V_COUNT1G8 C_COUNT1G8%ROWTYPE;
  --扩频系统2.4G----V_RIM_RSM_FEE_KP2G4_Apply改为V_RIM_RSM_FEE_M
  CURSOR C_COUNT2G4 IS SELECT * FROM V_RIM_RSM_FEE_M
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND (FREQ_EMIT>=2400 AND FREQ_EMIT<=2483.5)
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT2G4 C_COUNT2G4%ROWTYPE;
  --扩频系统5.8G----V_RIM_RSM_FEE_KP5G8_Apply改为V_RIM_RSM_FEE_M
  CURSOR C_COUNT5G81 IS SELECT * FROM V_RIM_RSM_FEE_KP5G8_Apply
               WHERE APPLY_CODE=APPLYCODE 
                AND begin_YEAR=COUNTYEAR
                --AND STAT_TYPE<>'CS'
							  AND (FREQ_EMIT>=5725 AND FREQ_EMIT<=5850)
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT5G81 C_COUNT5G81%ROWTYPE;
  --无线接入3.5G----V_RIM_RSM_FEE_ENTER3G5_Apply改为V_RIM_RSM_FEE_M
  CURSOR C_COUNT3G5 IS SELECT * FROM V_RIM_RSM_FEE_ENTER3G5_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND ((FREQ_EMIT>=3399.5 AND FREQ_EMIT<=3431) OR (FREQ_EMIT>=3499.5 AND FREQ_EMIT<=3531))
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT3G5 C_COUNT3G5%ROWTYPE;

  --无线接入5.8G
  CURSOR C_COUNT5G82 IS SELECT * FROM V_RIM_RSM_FEE_M
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND STAT_TYPE='CS'
                AND (FREQ_EMIT>=5725 AND FREQ_EMIT<=5850)
              ORDER BY decl_code,FREQ_EMIT;
  V_COUNT5G82 C_COUNT5G82%ROWTYPE;

  --雷达站10G以下(按照微波站收费)
  CURSOR C_COUNTR10GDOWN IS SELECT * FROM V_rim_rsm_FEE_R
        WHERE APPLY_CODE=APPLYCODE
        AND begin_YEAR=COUNTYEAR
        and FREQ_EMIT<=10000 and FREQ_EMIT>0
        ORDER BY decl_code,FREQ_EMIT;
  V_COUNTR10GDOWN C_COUNTR10GDOWN%ROWTYPE;
  --雷达站10G以上(按照微波站收费)
  CURSOR C_COUNTR10GUP IS SELECT * FROM V_rim_rsm_FEE_R
        WHERE APPLY_CODE=APPLYCODE
        AND begin_YEAR=COUNTYEAR
        and FREQ_EMIT>10000
        ORDER BY decl_code,FREQ_EMIT;
  V_COUNTR10GUP C_COUNTR10GUP%ROWTYPE;
  --10G以下微波
  -----去除同个台站的相同频率
  CURSOR C_COUNT10GDOWN IS SELECT distinct (APPLY_CODE||DECL_CODE||FREQ_EMIT) as APPLY_CODE_TEMP ,APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate,begin_date,begin_YEAR,dept_pay,area_code
               FROM V_RIM_RSM_FEE_M_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT<=10000 and FREQ_EMIT>0
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate;
  V_COUNT10GDOWN C_COUNT10GDOWN%ROWTYPE;
  --10G以上微波站
  CURSOR C_COUNT10GUP IS SELECT distinct (APPLY_CODE||DECL_CODE||FREQ_EMIT) as APPLY_CODE_TEMP ,APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate,begin_date,begin_YEAR,dept_pay,area_code
               FROM V_RIM_RSM_FEE_M_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>10000
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate;
  V_COUNT10GUP C_COUNT10GUP%ROWTYPE;
  --地球站
  CURSOR C_COUNTEARTH IS SELECT * FROM V_RIM_RSM_FEE_E_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
  V_COUNTEARTH C_COUNTEARTH%ROWTYPE;
  /*
  --------设备检测费----------------------------------------------------
 --寻呼系统(设备检测费)'112000' /广东省 20130125
  CURSOR C_COUNTPB_EQUCHECK IS SELECT  * FROM v_rim_rsm_fee_EQUCHECK_pb
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTPB_EQUCHECK C_COUNTPB_EQUCHECK%ROWTYPE;
  --集群系统(设备检测费)'113000' /广东省 20130125
  CURSOR C_COUNTJQ_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_jq
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTJQ_EQUCHECK C_COUNTJQ_EQUCHECK%ROWTYPE;
  --广播电台(设备检测费)'116000' /广东省 20130125
   CURSOR C_COUNTBC_EQUCHECK IS SELECT  *  FROM v_rim_rsm_fee_equcheck_bc
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTBC_EQUCHECK C_COUNTBC_EQUCHECK%ROWTYPE;
  --电视(设备检测费)'115000' /广东省 20130125
   CURSOR C_COUNTBT_EQUCHECK IS SELECT  *  FROM V_rim_rsm_FEE_EQUCHECK_BT
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTBT_EQUCHECK C_COUNTBT_EQUCHECK%ROWTYPE;
--无绳电话(设备检测费)'114000'/广东省 20130125
  CURSOR C_COUNTLINELESS_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_linless
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTLINELESS_EQUCHECK C_COUNTLINELESS_EQUCHECK%ROWTYPE;
   --微波站(包括10G以上和10G以下)(设备检测费)'119000' /广东省 20130125
   CURSOR C_COUNT10G_EQUCHECK IS SELECT  *  FROM v_rim_rsm_fee_equcheck_m
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNT10G_EQUCHECK C_COUNT10G_EQUCHECK%ROWTYPE;
  --无线数据频段(设备检测费)(设备检测费)'111700' /广东省 20130125
  CURSOR C_COUNTDATA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_data
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTDATA_EQUCHECK C_COUNTDATA_EQUCHECK%ROWTYPE;
    --地球站(设备检测费)'111300' /广东省 20130125
  CURSOR C_COUNTEARTH_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_e
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTEARTH_EQUCHECK  C_COUNTEARTH_EQUCHECK%ROWTYPE;
   --MMDS台 (设备检测费)'111200' /广东省 20130125
  CURSOR C_COUNTMMDS_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_mmds
              WHERE DECL_CODE LIKE 'TF%'
                AND APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTMMDS_EQUCHECK C_COUNTMMDS_EQUCHECK%ROWTYPE;
  --无线接入1.8G(设备检测费)'111400'/广东省 20130125
  CURSOR C_COUNT1G8_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_ECHECK_enter1g8
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNT1G8_EQUCHECK C_COUNT1G8_EQUCHECK%ROWTYPE;
   --扩频系统2.4G(设备检测费)'111500'/广东省 20130125
  CURSOR C_COUNT2G4_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_kp2g4
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNT2G4_EQUCHECK C_COUNT2G4_EQUCHECK%ROWTYPE;
  --扩频系统5.8G(设备检测费)'111600'/广东省 20130125
  CURSOR C_COUNT5G81_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_kp5g8
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNT5G81_EQUCHECK C_COUNT5G81_EQUCHECK%ROWTYPE;
   --其它固定台(设备检测费)'117000'/广东省 20130125
  CURSOR C_COUNTOTHER_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_other
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTOTHER_EQUCHECK C_COUNTOTHER_EQUCHECK%ROWTYPE;
   --移动台(设备检测费)'118000'/广东省 20130125
  CURSOR C_COUNTMOBILE_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_mobile
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTMOBILE_EQUCHECK C_COUNTMOBILE_EQUCHECK%ROWTYPE;
   --蜂窝公众通信基站GSM(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTGSM_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_GSM
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTGSM_EQUCHECK C_COUNTGSM_EQUCHECK%ROWTYPE;
    --蜂窝公众通信基站CDMA(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTCDMA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_CDMA
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTCDMA_EQUCHECK C_COUNTCDMA_EQUCHECK%ROWTYPE;
      --蜂窝公众通信基站WCDMA(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTWCDMA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_WCDMA
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTWCDMA_EQUCHECK C_COUNTWCDMA_EQUCHECK%ROWTYPE;
      --蜂窝公众通信基站TD-SCDMA(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTTDSCDMA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_TDSCDMA
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTTDSCDMA_EQUCHECK C_COUNTTDSCDMA_EQUCHECK%ROWTYPE;
------------------------------------------------------------------------
*/
  --V_AREACODE1 VARCHAR2(6); --设备检测用到的变量
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  V_YEAR NUMBER;
  --批准年度
  V_MONTH NUMBER;
   --批准月份
  V_PART NUMBER;
    --计收比例
  V_PARTMID NUMBER;
  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);
  V_DECLCODE VARCHAR2(6);
   V_DECLCODE1 VARCHAR2(6);
    --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
   --数量
  V_BANDWIDTH NUMBER;
   --带宽
  V_DERATE NUMBER;
   --减免
  V_FEE NUMBER;
  --无线数据频段记录合计数量
  V_Count_Data NUMBER;
  X_Count_Data NUMBER;----记录次数
  --无线接入450MHZ频段记录合计数量
  V_Count_FEE_450m NUMBER;
  X_Count_FEE_450m NUMBER;----记录次数
  --移动台记录合计数量
  V_Count_mobile NUMBER;
  X_Count_mobile NUMBER;----记录次数
  --扩频系统2.4G记录合计数量
  V_Count_kp2g4 NUMBER;
  X_Count_kp2g4 NUMBER;----记录次数
  --扩频系统5.8G记录合计数量
  V_Count_KP5G8 NUMBER;
  X_Count_KP5G8 NUMBER;----记录次数
  --无线接入3.5G记录合计数量
  V_Count_ENTER3G5 NUMBER;----记录合计数量
  X_Count_ENTER3G5 NUMBER;----记录次数
  --无线接入5.8G记录合计数量
  V_Count_ENTER5G8 NUMBER;----记录合计数量
  X_Count_ENTER5G8 NUMBER;----记录次数
  --雷达站10G以下--记录合计数量
  V_CountR_10GDOWN NUMBER;----记录合计数量
  X_CountR_10GDOWN NUMBER;----记录次数
  --雷达站10G以上--记录合计数量
  V_CountR_10GUP NUMBER;----记录合计数量
  X_CountR_10GUP NUMBER;----记录次数
    --收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --
BEGIN
  --V_AREACODE1:=SUBSTR(substr(substr(APPLYCODE,-12,12),0,4),1,4)||'00';--设备检测用到的变量
  -- ApplyCode_Temp := Substr(APPLYCODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
  -- ApplyType_Temp := substr(APPLYCODE,0,length(APPLYCODE)-12);----申请表类型T或PA
  
  ApplyCode_Temp:=APPLYCODE;
  ApplyType_Temp:='T';
  --
  DELETE FROM T_RIM_RSM_PAY_APPLYITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_applynetitem WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECK_APPITEM WHERE APPLY_CODE=ApplyCode_Temp AND COUNT_YEAR=COUNTYEAR;
  --集群无线调度系统
  OPEN C_COUNTJQ;
  LOOP
    FETCH C_COUNTJQ INTO V_COUNTJQ;
    EXIT WHEN C_COUNTJQ%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTJQ.begin_date,'YYYY'),substr(V_COUNTJQ.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTJQ.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    --查询该缴费单位在本申请表之前的其它申请表中是否已经使用此频点，
    SELECT COUNT(*) INTO V_AMOUNT FROM V_RIM_RSM_FEE_JQ
      WHERE dept_pay=V_COUNTJQ.dept_pay AND area_code=V_COUNTJQ.area_code
         AND freq=V_COUNTJQ.freq AND net_guid=V_COUNTJQ.net_guid AND begin_date<V_COUNTJQ.begin_date;
    --没有使用的频率才计费
    IF V_AMOUNT=0 THEN
      IF  V_COUNTJQ.net_range='GJ' THEN
        V_ITEMCODE:='210000';
      ELSIF V_COUNTJQ.net_range='SJ' THEN
        V_ITEMCODE:='220000';
      ELSE
        V_ITEMCODE:='230000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTJQ.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTJQ.APPLY_CODE,0,length(V_COUNTJQ.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTJQ.DECL_CODE;---技术资料表编号
      --新增明细记录表
     INSERT INTO t_rim_rsm_pay_applynetitem(apply_code,
                      dept_pay,
                      area_code,
                      count_year,
                      item_code,
                      freq_note,
                      derate,
                      pay_rate,
                      sum_count,
                      sum_pay,
                      applytype,
                      decl_code)
                  VALUES (ApplyCode_Temp,
                      V_COUNTJQ.dept_pay,
                      V_COUNTJQ.area_code,
                      COUNTYEAR,
                      V_ITEMCODE,
                      V_COUNTJQ.freq_note,
                      V_COUNTJQ.DERATE,
                      V_PART,
                      V_FEE,
                      V_FEE*(V_PART/100.0)*(100-V_COUNTJQ.DERATE)/100,
                      ApplyType_Temp,
                      DECL_CODE_Temp);
    END IF;
  END LOOP;
  CLOSE C_COUNTJQ;
  --寻呼系统
  OPEN C_COUNTPB;
  LOOP
    FETCH C_COUNTPB INTO V_COUNTPB;
    EXIT WHEN C_COUNTPB%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTPB.begin_date,'YYYY'),substr(V_COUNTPB.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTPB.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    --查询该缴费单位是否已经使用此频率
    SELECT COUNT(*) INTO V_AMOUNT FROM V_RIM_RSM_FEE_PB_Apply
      WHERE dept_pay=V_COUNTPB.dept_pay AND area_code=V_COUNTPB.area_code
         AND freq_emit=V_COUNTPB.freq_emit  AND net_guid=V_COUNTPB.net_guid AND begin_date<V_COUNTPB.begin_date;
    --没有使用的频率才计费
    IF V_AMOUNT=0 THEN
      IF  V_COUNTPB.net_range='GJ' THEN
        V_ITEMCODE:='310000';
      ELSIF V_COUNTPB.net_range='SJ' THEN
        V_ITEMCODE:='320000';
      ELSE
        V_ITEMCODE:='330000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTPB.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTPB.APPLY_CODE,0,length(V_COUNTPB.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTPB.DECL_CODE;---技术资料表编号
      --新增明细记录表
     INSERT INTO t_rim_rsm_pay_applynetitem(apply_code,
                      dept_pay,
                      area_code,
                      count_year,
                      item_code,
                      freq_note,
                      derate,
                      pay_rate,
                      sum_count,
                      sum_pay,
                      applytype,
                      decl_code)
                  VALUES (ApplyCode_Temp,
                      V_COUNTPB.dept_pay,
                      V_COUNTPB.area_code,
                      COUNTYEAR,
                      V_ITEMCODE,
                      V_COUNTPB.freq_note,
                      V_COUNTPB.DERATE,
                      V_PART,
                      V_FEE,
                      V_FEE*(V_PART/100.0)*(100-V_COUNTPB.DERATE)/100,
                      ApplyType_Temp,
                      DECL_CODE_Temp);
    END IF;
  END LOOP;
  CLOSE C_COUNTPB;
  --广播电台
  OPEN C_COUNTBC;
  LOOP
    FETCH C_COUNTBC INTO V_COUNTBC;
    EXIT WHEN C_COUNTBC%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTBC.begin_date,'YYYY'),substr(V_COUNTBC.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTBC.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    --查询该缴费单位是否已经使用此频率
    SELECT COUNT(*) INTO V_AMOUNT FROM V_RIM_RSM_FEE_BC_Apply
      WHERE dept_pay=V_COUNTBC.dept_pay AND area_code=V_COUNTBC.area_code
         AND freq_emit=V_COUNTBC.freq_emit  AND net_guid=V_COUNTBC.net_guid AND begin_date<V_COUNTBC.begin_date;
    --没有使用的频率才计费
    IF V_AMOUNT=0 THEN
      IF  V_COUNTBC.net_range='GJ' THEN
        V_ITEMCODE:='560000';
      ELSIF V_COUNTBC.net_range='SJ' THEN
        V_ITEMCODE:='570000';
      ELSIF V_COUNTBC.net_range='CJ' THEN
        V_ITEMCODE:='580000';
      ELSE
        V_ITEMCODE:='590000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
      --
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTBC.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTBC.APPLY_CODE,0,length(V_COUNTBC.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTBC.DECL_CODE;---技术资料表编号
      --新增明细记录表
      --
     INSERT INTO t_rim_rsm_pay_applynetitem(apply_code,
                      dept_pay,
                      area_code,
                      count_year,
                      item_code,
                      freq_note,
                      derate,
                      pay_rate,
                      sum_count,
                      sum_pay,
                      applytype,
                      decl_code)
                  VALUES (ApplyCode_Temp,
                      V_COUNTBC.dept_pay,
                      V_COUNTBC.area_code,
                      COUNTYEAR,
                      V_ITEMCODE,
                      V_COUNTBC.freq_note,
                      V_COUNTBC.DERATE,
                      V_PART,
                      V_FEE,
                      V_FEE*(V_PART/100.0)*(100-V_COUNTBC.DERATE)/100,
                      ApplyType_Temp,
                      DECL_CODE_Temp);
    END IF;
  END LOOP;
  CLOSE C_COUNTBC;
  --电视
  OPEN C_COUNTBT;
  LOOP
    FETCH C_COUNTBT INTO V_COUNTBT;
    EXIT WHEN C_COUNTBT%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTBT.begin_date,'YYYY'),substr(V_COUNTBT.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTBT.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    --查询该缴费单位是否已经使用此频率
    SELECT COUNT(*) INTO V_AMOUNT FROM V_RIM_RSM_FEE_BT_Apply
      WHERE dept_pay=V_COUNTBT.dept_pay AND area_code=V_COUNTBT.area_code
         AND freq_emit=V_COUNTBT.freq_emit AND net_guid=V_COUNTBT.net_guid AND begin_date<V_COUNTBT.begin_date;
    --没有使用的频率才计费
    IF V_AMOUNT=0 THEN
      IF  V_COUNTBT.net_range='GJ' THEN
        V_ITEMCODE:='510000';
      ELSIF V_COUNTBT.net_range='SJ' THEN
        V_ITEMCODE:='520000';
      ELSIF V_COUNTBT.net_range='CJ' THEN
        V_ITEMCODE:='530000';
      ELSE
        V_ITEMCODE:='540000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTBT.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTBT.APPLY_CODE,0,length(V_COUNTBT.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTBT.DECL_CODE;---技术资料表编号
      --新增明细记录表
      INSERT INTO t_rim_rsm_pay_applynetitem(apply_code,
                      dept_pay,
                      area_code,
                      count_year,
                      item_code,
                      freq_note,
                      derate,
                      pay_rate,
                      sum_count,
                      sum_pay,
                      decl_code,
                      applytype)
                  VALUES (ApplyCode_Temp,
                      V_COUNTBT.dept_pay,
                      V_COUNTBT.area_code,
                      COUNTYEAR,
                      V_ITEMCODE,
                      V_COUNTBT.freq_note,
                      V_COUNTBT.DERATE,
                      V_PART,
                      V_FEE,
                      V_FEE*(V_PART/100.0)*(100-V_COUNTBT.DERATE)/100,
                      DECL_CODE_Temp,
                      ApplyType_Temp);
    END IF;
  END LOOP;
  CLOSE C_COUNTBT;

  --无绳电话计费暂时不计费
  --无绳电话计费'410000'
  
  /*
  V_FLAG := 'N';
  OPEN C_COUNTLINELESS;
  LOOP
    FETCH C_COUNTLINELESS INTO V_COUNTLINELESS;
    EXIT WHEN C_COUNTLINELESS%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTLINELESS.begin_date,'YYYY'),substr(V_COUNTLINELESS.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTLINELESS.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='410000';
      V_FLAG := 'Y';
    end if;
    V_FEE :=0;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTLINELESS.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTLINELESS.APPLY_CODE,0,length(V_COUNTLINELESS.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTLINELESS.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  amount,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTLINELESS.dept_pay,
                  V_COUNTLINELESS.area_code,
                  COUNTYEAR,
                  '410000',
                  V_COUNTLINELESS.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTLINELESS.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTLINELESS;

  */

  --船舶电台（吨位小于1600吨）计费'620000'
  V_FLAG := 'N';
  OPEN C_COUNTSHIP1;
  LOOP
    FETCH C_COUNTSHIP1 INTO V_COUNTSHIP1;
    EXIT WHEN C_COUNTSHIP1%NOTFOUND;

    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTSHIP1.begin_date,'YYYY'),substr(V_COUNTSHIP1.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTSHIP1.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='620000';
      V_FLAG := 'Y';
    end if;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTSHIP1.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTSHIP1.APPLY_CODE,0,length(V_COUNTSHIP1.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTSHIP1.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTSHIP1.dept_pay,
                  V_COUNTSHIP1.area_code,
                  COUNTYEAR,
                  '620000',
                  V_COUNTSHIP1.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTSHIP1.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTSHIP1;
  --船舶电台（吨位大于1600吨）计费'610000'
  V_FLAG := 'N';
  OPEN C_COUNTSHIP2;
  LOOP
    FETCH C_COUNTSHIP2 INTO V_COUNTSHIP2;
    EXIT WHEN C_COUNTSHIP2%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTSHIP2.begin_date,'YYYY'),substr(V_COUNTSHIP2.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTSHIP2.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='610000';
      V_FLAG := 'Y';
    end if;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTSHIP2.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTSHIP2.APPLY_CODE,0,length(V_COUNTSHIP2.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTSHIP2.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTSHIP2.dept_pay,
                  V_COUNTSHIP2.area_code,
                  COUNTYEAR,
                  '610000',
                  V_COUNTSHIP2.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTSHIP2.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTSHIP2;
  --船舶电台（渔船，功率>=20马力）计费'630000'
  V_FLAG := 'N';
  OPEN C_COUNTSHIP3;
  LOOP
    FETCH C_COUNTSHIP3 INTO V_COUNTSHIP3;
    EXIT WHEN C_COUNTSHIP3%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTSHIP3.begin_date,'YYYY'),substr(V_COUNTSHIP3.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTSHIP3.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='630000';
      V_FLAG := 'Y';
    end if;
     --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTSHIP3.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTSHIP3.APPLY_CODE,0,length(V_COUNTSHIP3.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTSHIP3.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTSHIP3.dept_pay,
                  V_COUNTSHIP3.area_code,
                  COUNTYEAR,
                  '630000',
                  V_COUNTSHIP3.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTSHIP3.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTSHIP3;
  --航空器电台(固定翼飞机27吨以上)
  V_FLAG := 'N';
  OPEN C_COUNTAERO1;
  LOOP
    FETCH C_COUNTAERO1 INTO V_COUNTAERO1;
    EXIT WHEN C_COUNTAERO1%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTAERO1.begin_date,'YYYY'),substr(V_COUNTAERO1.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTAERO1.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='710000';
      V_FLAG := 'Y';
    end if;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTAERO1.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTAERO1.APPLY_CODE,0,length(V_COUNTAERO1.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTAERO1.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTAERO1.dept_pay,
                  V_COUNTAERO1.area_code,
                  COUNTYEAR,
                  '710000',
                  V_COUNTAERO1.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTAERO1.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTAERO1;
  --航空器电台(固定翼飞机5.7吨至27吨以下(含))
  V_FLAG := 'N';
  OPEN C_COUNTAERO2;
  LOOP
    FETCH C_COUNTAERO2 INTO V_COUNTAERO2;
    EXIT WHEN C_COUNTAERO2%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTAERO2.begin_date,'YYYY'),substr(V_COUNTAERO2.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTAERO2.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='720000';
      V_FLAG := 'Y';
    end if;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTAERO2.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTAERO2.APPLY_CODE,0,length(V_COUNTAERO2.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTAERO2.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTAERO2.dept_pay,
                  V_COUNTAERO2.area_code,
                  COUNTYEAR,
                  '720000',
                  V_COUNTAERO2.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTAERO2.DERATE)/100,
                  ApplyType_Temp);

  END LOOP;
  CLOSE C_COUNTAERO2;
  --航空器电台(固定翼飞机5.7吨(含)以下)
  V_FLAG := 'N';
  OPEN C_COUNTAERO3;
  LOOP
    FETCH C_COUNTAERO3 INTO V_COUNTAERO3;
    EXIT WHEN C_COUNTAERO3%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTAERO3.begin_date,'YYYY'),substr(V_COUNTAERO3.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTAERO3.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='730000';
      V_FLAG := 'Y';
    end if;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTAERO3.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTAERO3.APPLY_CODE,0,length(V_COUNTAERO3.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTAERO3.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTAERO3.dept_pay,
                  V_COUNTAERO3.area_code,
                  COUNTYEAR,
                  '730000',
                  V_COUNTAERO3.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTAERO3.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTAERO3;

  --航空器电台(旋翼飞机)
  V_FLAG := 'N';
  OPEN C_COUNTAERO4;
  LOOP
    FETCH C_COUNTAERO4 INTO V_COUNTAERO4;
    EXIT WHEN C_COUNTAERO4%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTAERO4.begin_date,'YYYY'),substr(V_COUNTAERO4.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTAERO4.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='740000';
      V_FLAG := 'Y';
    end if;
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNTAERO4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNTAERO4.APPLY_CODE,0,length(V_COUNTAERO4.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNTAERO4.DECL_CODE;---技术资料表编号
    ----新增明细记录表
    INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                  decl_code,
                  dept_pay,
                  area_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  pay_rate,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (ApplyCode_Temp,
                  DECL_CODE_Temp,
                  V_COUNTAERO4.dept_pay,
                  V_COUNTAERO4.area_code,
                  COUNTYEAR,
                  '740000',
                  V_COUNTAERO4.DERATE,
                  V_PART,
                  1,
                  V_FEE,
                  V_FEE*(V_PART/100.0)*(100-V_COUNTAERO4.DERATE)/100,
                  ApplyType_Temp);
  END LOOP;
  CLOSE C_COUNTAERO4;

  --无线数据频段计费'140100'
  V_FLAG := 'N';
  OPEN C_COUNTDATA;
  LOOP
    FETCH C_COUNTDATA INTO V_COUNTDATA;
    EXIT WHEN C_COUNTDATA%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTDATA.begin_date,'YYYY'),substr(V_COUNTDATA.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTDATA.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    ---
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='140100';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_Data FROM V_RIM_RSM_FEE_data_Apply
              WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND (freq_emit>0 or freq_rece>0) ;
      --第一条记录
      V_AMOUNT := 0;
      X_Count_Data :=0;
      X_Count_Data := X_Count_Data+1;
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算技术资料表编号是否相同
      ----台站相同，继续累加
      --计算发射频点
      IF  V_DECLCODE=V_COUNTDATA.decl_code AND V_APPLYCODE=V_COUNTDATA.APPLY_CODE THEN
        if V_COUNTDATA.freq_emit>0 then
           V_AMOUNT := V_AMOUNT+1;
        end if;
        --计算接收频点
        if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
          V_AMOUNT := V_AMOUNT+1;
        end if;
      END IF;
      --
      --记录累加
      V_APPLYCODE := V_COUNTDATA.APPLY_CODE;
      V_DERATE := V_COUNTDATA.DERATE;
      V_DECLCODE := V_COUNTDATA.decl_code;
       --取出减免比例
      v_deptpay:= V_COUNTDATA.dept_pay;
      v_areacode:= V_COUNTDATA.area_code;
      V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      V_PARTMID:=V_PART;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTDATA.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTDATA.APPLY_CODE,0,length(V_COUNTDATA.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTDATA.DECL_CODE;---技术资料表编号
      V_FLAG := 'Y';
    ELSIF v_applycode=V_COUNTDATA.apply_code and v_declcode=V_COUNTDATA.decl_code THEN
      X_Count_Data := X_Count_Data+1;
      --台站相同，继续累加
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 and V_FREQEMIT <> V_COUNTDATA.FREQ_EMIT then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_FREQRECE <> V_COUNTDATA.FREQ_RECE and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      end if;
    ELSE
      ----新增明细记录表
      INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ----第二次初始数据
      --记录累加
      V_APPLYCODE := V_COUNTDATA.APPLY_CODE;
      V_DERATE := V_COUNTDATA.DERATE;
      V_DECLCODE := V_COUNTDATA.decl_code;
       --取出减免比例
      v_deptpay:= V_COUNTDATA.dept_pay;
      v_areacode:= V_COUNTDATA.area_code;
      V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      V_PARTMID:=V_PART;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTDATA.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTDATA.APPLY_CODE,0,length(V_COUNTDATA.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTDATA.DECL_CODE;---技术资料表编号
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_Data := X_Count_Data+1;
      --如果执行最后条记录
      IF V_Count_Data=X_Count_Data THEN
         --
         --计算发射频点
          if V_COUNTDATA.freq_emit>0 then
            V_AMOUNT := V_AMOUNT+1;
          end if;
          --计算接收频点
          if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
            V_AMOUNT := V_AMOUNT+1;
          end if;
         ----新增明细记录表
         INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
         --新增明细记录表
      END IF;
      --
    END IF;
    --
  END LOOP;
  CLOSE C_COUNTDATA;
  ---
  IF V_FLAG = 'Y' THEN
      ----新增明细记录表
      INSERT INTO T_RIM_RSM_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
  END IF;


  --无线接入450MHZ频段计费'120100'
  V_FLAG := 'N';
  OPEN C_COUNT450M;
  LOOP
    FETCH C_COUNT450M INTO V_COUNT450M;
    EXIT WHEN C_COUNT450M%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT450M.begin_date,'YYYY'),substr(V_COUNT450M.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT450M.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120100';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_FEE_450m FROM V_RIM_RSM_FEE_450m_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                and (freq_emit>0 or freq_rece>0);
      --第一条记录
      V_AMOUNT := 0;
      X_Count_FEE_450m :=0;
      X_Count_FEE_450m := X_Count_FEE_450m+1;
      --计算发射频点
      if V_COUNT450M.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
       --计算技术资料表编号是否相同
      ----台站相同，继续累加
      --计算发射频点
      IF  V_DECLCODE=V_COUNT450M.decl_code AND V_APPLYCODE=V_COUNT450M.APPLY_CODE THEN
        if V_COUNT450M.freq_emit>0 then
           V_AMOUNT := V_AMOUNT+1;
        end if;
        --计算接收频点
        if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
          V_AMOUNT := V_AMOUNT+1;
        end if;
      END IF;
      --记录累加
      V_APPLYCODE := V_COUNT450M.APPLY_CODE;
      V_DERATE := V_COUNT450M.DERATE;
      V_DECLCODE := V_COUNT450M.decl_code;
      --取出减免比例
      v_deptpay:= V_COUNT450M.dept_pay;
      v_areacode:= V_COUNT450M.area_code;
      V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      V_PARTMID:=V_PART;
       --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT450M.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT450M.APPLY_CODE,0,length(V_COUNT450M.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNT450M.DECL_CODE;---技术资料表编号
      V_FLAG := 'Y';

    ELSIF V_APPLYCODE=V_COUNT450M.apply_code and V_DECLCODE=V_COUNT450M.decl_code THEN
      X_Count_FEE_450m := X_Count_FEE_450m+1;
     --台站相同，继续累加
      --计算发射频点
      if V_COUNT450M.freq_emit>0 and V_FREQEMIT <> V_COUNT450M.FREQ_EMIT then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_FREQRECE <> V_COUNT450M.FREQ_RECE and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT450M.DERATE;
    ELSE
      INSERT INTO T_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120100',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ----第二次初始数据
      --记录累加
      --记录累加
      V_APPLYCODE := V_COUNT450M.APPLY_CODE;
      V_DERATE := V_COUNT450M.DERATE;
      V_DECLCODE := V_COUNT450M.decl_code;
      --取出减免比例
      v_deptpay:= V_COUNT450M.dept_pay;
      v_areacode:= V_COUNT450M.area_code;
      V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      V_PARTMID:=V_PART;
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT450M.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT450M.APPLY_CODE,0,length(V_COUNT450M.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNT450M.DECL_CODE;---技术资料表编号
       V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_FEE_450m := X_Count_FEE_450m+1;
      --如果执行最后条记录
      IF V_Count_FEE_450m=X_Count_FEE_450m THEN
           --计算发射频点
          if V_COUNT450M.freq_emit>0 then
            V_AMOUNT := V_AMOUNT+1;
          end if;
          --计算接收频点
          if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
            V_AMOUNT := V_AMOUNT+1;
          end if;
          --
          INSERT INTO T_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120100',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          --
      END IF;
      --
    END IF;
  END LOOP;
  CLOSE C_COUNT450M;
  --
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      DECL_CODE_Temp,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120100',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --
  --其它V表固定站计费'810000'
  OPEN C_COUNTOTHER;
  LOOP
    FETCH C_COUNTOTHER INTO V_COUNTOTHER;
    EXIT WHEN C_COUNTOTHER%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTOTHER.begin_date,'YYYY'),substr(V_COUNTOTHER.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTOTHER.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    --查询该缴费单位在本申请表之前的其它申请表中是否已经使用此频点，V_RIM_RSM_FEE_OTHER_Apply
    SELECT COUNT(*) INTO V_AMOUNT FROM V_RIM_RSM_FEE_OTHER_Apply
      WHERE dept_pay=V_COUNTOTHER.dept_pay AND area_code=V_COUNTOTHER.area_code
         AND freq=V_COUNTOTHER.freq AND net_guid=V_COUNTOTHER.net_guid AND begin_date<V_COUNTOTHER.begin_date;
    --没有使用的频率才计费
    IF V_AMOUNT=0 THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='810000';
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTOTHER.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTOTHER.APPLY_CODE,0,length(V_COUNTOTHER.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTOTHER.DECL_CODE;---技术资料表编号
      --
     INSERT INTO t_rim_rsm_pay_applynetitem(apply_code,
                      dept_pay,
                      area_code,
                      count_year,
                      item_code,
                      freq_note,
                      derate,
                      pay_rate,
                      sum_count,
                      sum_pay,
                      applytype,
                      decl_code)
                  VALUES (ApplyCode_Temp,
                      V_COUNTOTHER.dept_pay,
                      V_COUNTOTHER.area_code,
                      COUNTYEAR,
                      '810000',
                      V_COUNTOTHER.freq_note,
                      V_COUNTOTHER.DERATE,
                      V_PART,
                      V_FEE,
                      V_FEE*(V_PART/100.0)*(100-V_COUNTOTHER.DERATE)/100,
                      ApplyType_Temp,
                      DECL_CODE_Temp);
    END IF;
  END LOOP;
  CLOSE C_COUNTOTHER;
  --移动台计费'820000'
  V_FLAG := 'N';
  OPEN C_COUNTMOBILE;
  LOOP
    FETCH C_COUNTMOBILE INTO V_COUNTMOBILE;
    EXIT WHEN C_COUNTMOBILE%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTMOBILE.begin_date,'YYYY'),substr(V_COUNTMOBILE.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTMOBILE.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='820000';
       ----数据记录合计数量
      SELECT count(*) INTO V_Count_mobile FROM V_RIM_RSM_FEE_mobile_Apply
                WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY decl_code;
      --第一条记录
      V_AMOUNT := 1;
      X_Count_mobile :=0;
      X_Count_mobile :=X_Count_mobile+1;
       --记录累加
      V_DERATE := V_COUNTMOBILE.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNTMOBILE.decl_code;
      v_deptpay:= V_COUNTMOBILE.dept_pay;
      v_areacode:= V_COUNTMOBILE.area_code;
      V_PARTMID:=V_PART;
      V_FLAG := 'Y';
      -----获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTMOBILE.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTMOBILE.APPLY_CODE,0,length(V_COUNTMOBILE.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTMOBILE.DECL_CODE;---技术资料表编号
      ---
    ELSIF V_DECLCODE=V_COUNTMOBILE.decl_code THEN
      X_Count_mobile :=X_Count_mobile+1;
     --台站相同，继续累加
      V_AMOUNT := V_AMOUNT+1;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTMOBILE.DERATE;
    ELSE
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNTMOBILE.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNTMOBILE.APPLY_CODE,0,length(V_COUNTMOBILE.APPLY_CODE)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTMOBILE.DECL_CODE;---技术资料表编号
      --
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '820000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_AMOUNT := 1;
      V_DECLCODE := V_COUNTMOBILE.decl_code;
      v_deptpay:= V_COUNTMOBILE.dept_pay;
      v_areacode:= V_COUNTMOBILE.area_code;
      V_DERATE := V_COUNTMOBILE.DERATE;
      --
      X_Count_mobile :=X_Count_mobile+1;
       --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE;
  ---
  IF   V_FLAG = 'Y' AND V_Count_mobile= X_Count_mobile THEN
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '820000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
  END IF;


  --有线电视传输（MMDS）计费'930000'
  V_FLAG := 'N';
  OPEN C_COUNTMMDS;
  LOOP
    FETCH C_COUNTMMDS INTO V_COUNTMMDS;
    EXIT WHEN C_COUNTMMDS%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTMMDS.begin_date,'YYYY'),substr(V_COUNTMMDS.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTMMDS.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_DECLCODE := V_COUNTMMDS.DECL_CODE;
      V_BANDWIDTH := nvl(V_COUNTMMDS.CHAN_DIST,1);
      v_deptpay:= V_COUNTMMDS.dept_pay;
      v_areacode:= V_COUNTMMDS.area_code;
      V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
      V_PARTMID := V_PART;
      --空值则默认为一个单位
      V_DERATE := V_COUNTMMDS.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='930000';
      --取出收费标准
    ELSIF V_DECLCODE = V_COUNTMMDS.DECL_CODE THEN
     --台站相同，继续累加
      if V_FREQEMIT <> V_COUNTMMDS.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+nvl(V_COUNTMMDS.CHAN_DIST,1);
        V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTMMDS.DERATE;
    ELSE
    --台站不同,保存计算结果
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '930000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH := nvl(V_COUNTMMDS.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNTMMDS.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNTMMDS.DECL_CODE;
      v_deptpay:= V_COUNTMMDS.dept_pay;
      v_areacode:= V_COUNTMMDS.area_code;
      V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE C_COUNTMMDS;
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
    END IF;
    INSERT INTO t_rim_rsm_PAY_APPLYITEM  (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '930000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --无线接入1.8G '120200'
  V_FLAG := 'N';
  OPEN C_COUNT1G8;
  LOOP
    FETCH C_COUNT1G8 INTO V_COUNT1G8;
    EXIT WHEN C_COUNT1G8%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT1G8.begin_date,'YYYY'),substr(V_COUNT1G8.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT1G8.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;

    --取出收费标准
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120200';
    --第一条记录
    V_AMOUNT := 1;
     --记录累加
    V_DERATE := V_COUNT1G8.DERATE;
     --取出减免比例
    V_DECLCODE := V_COUNT1G8.DECL_CODE;
    v_deptpay:= V_COUNT1G8.dept_pay;
    v_areacode:= V_COUNT1G8.area_code;
    V_PARTMID:=V_PART;

    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := Substr(V_COUNT1G8.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := substr(V_COUNT1G8.APPLY_CODE,0,length(V_COUNT1G8.APPLY_CODE)-12);----申请表类型T或PA
    DECL_CODE_Temp := V_COUNT1G8.DECL_CODE;---技术资料表编号
    ---
    INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      DECL_CODE_Temp,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120200',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
    V_AMOUNT := 1;
    V_DECLCODE := V_COUNT1G8.DECL_CODE;
    v_deptpay:= V_COUNT1G8.dept_pay;
    v_areacode:= V_COUNT1G8.area_code;
    V_DERATE := V_COUNT1G8.DERATE;
    --取出减免比例
  END LOOP;
  CLOSE C_COUNT1G8;
  --扩频系统2.4G计费'130100'
  V_FLAG := 'N';
  OPEN C_COUNT2G4;
  LOOP
    FETCH C_COUNT2G4 INTO V_COUNT2G4;
    EXIT WHEN C_COUNT2G4%NOTFOUND;

    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT2G4.begin_date,'YYYY'),substr(V_COUNT2G4.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT2G4.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    ----
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130100';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_kp2g4 FROM V_RIM_RSM_FEE_KP2G4_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0 ;
      --第一条记录
      X_Count_kp2g4 :=0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
      ---记录累加
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
      V_PARTMID := V_PART;
      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
       --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT2G4.DECL_CODE AND V_APPLYCODE= V_COUNT2G4.APPLY_CODE THEN
      ---
      X_Count_kp2g4 :=X_Count_kp2g4+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT2G4.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
       ---记录累加
      V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_PARTMID := V_PART;
      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT2G4.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      --
      --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
     -- DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
      --
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '130100',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);

      V_BANDWIDTH := nvl(V_COUNT2G4.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
      --取出减免比例
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      --
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
       --如果执行最后条记录
      IF X_Count_kp2g4=V_Count_kp2g4 THEN
         ---记录累加
          v_deptpay:= V_COUNT2G4.dept_pay;
          v_areacode:= V_COUNT2G4.area_code;
          V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT2G4.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
          --
          INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                          decl_code,
                          dept_pay,
                          area_code,
                          COUNT_YEAR,
                          ITEM_CODE,
                          DERATE,
                          pay_rate,
                          AMOUNT,
                          SUM_COUNT,
                          SUM_PAY,
                          Applytype)
                      VALUES (ApplyCode_Temp,
                            DECL_CODE_Temp,
                          v_deptpay,
                          v_areacode,
                          COUNTYEAR,
                            '130100',
                            V_DERATE,
                            V_PARTMID,
                          V_AMOUNT,
                            V_AMOUNT*V_FEE,
                            V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                            ApplyType_Temp);
      END IF;

    END IF;
    --
    ---记录累加
    V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
    V_DECLCODE := V_COUNT2G4.DECL_CODE;
    v_deptpay:= V_COUNT2G4.dept_pay;
    v_areacode:= V_COUNT2G4.area_code;
    V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
    --
  END LOOP;
  CLOSE C_COUNT2G4;

  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '130100',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --扩频系统5.8G计费'130200'
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNT5G81;
  LOOP
    FETCH  C_COUNT5G81 INTO V_COUNT5G81;
    EXIT WHEN  C_COUNT5G81%NOTFOUND;

    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT5G81.begin_date,'YYYY'),substr(V_COUNT5G81.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT5G81.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130200';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_KP5G8 FROM V_RIM_RSM_FEE_KP5G8_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      X_Count_KP5G8 :=0;
      X_Count_KP5G8 :=X_Count_KP5G8+1;
       ---记录累加
      v_deptpay:= V_COUNT5G81.dept_pay;
      v_areacode:= V_COUNT5G81.area_code;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      V_PARTMID := V_PART;
      if (V_BANDWIDTH = 0 ) then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G81.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT5G81.DECL_CODE AND V_APPLYCODE=V_COUNT5G81.APPLY_CODE THEN
       X_Count_KP5G8 :=X_Count_KP5G8+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT5G81.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT5G81.DERATE;
       --取出减免比例
       ---记录累加
      V_APPLYCODE := V_COUNT5G81.APPLY_CODE;
      V_DECLCODE := V_COUNT5G81.DECL_CODE;
      v_deptpay:= V_COUNT5G81.dept_pay;
      v_areacode:= V_COUNT5G81.area_code;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '130200',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH := CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G81.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNT5G81.DECL_CODE;
      v_deptpay:= V_COUNT5G81.dept_pay;
      v_areacode:= V_COUNT5G81.area_code;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_KP5G8 :=X_Count_KP5G8+1;
       --如果执行最后条记录
      IF X_Count_KP5G8=V_Count_KP5G8 THEN
         ---记录累加
          v_deptpay:= V_COUNT5G81.dept_pay;
          v_areacode:= V_COUNT5G81.area_code;
          V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT5G81.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT5G81.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT5G81.APPLY_CODE,0,length(V_COUNT5G81.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT5G81.DECL_CODE;---技术资料表编号
          --
         INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '130200',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      END IF;
      --
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT5G81.APPLY_CODE;
    V_DECLCODE := V_COUNT5G81.DECL_CODE;
    v_deptpay:= V_COUNT5G81.dept_pay;
    v_areacode:= V_COUNT5G81.area_code;
    V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
  END LOOP;
  CLOSE  C_COUNT5G81;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '130200',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --无线接入系统(3.5GHZ)计费'120300'
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNT3G5;
  LOOP
    FETCH  C_COUNT3G5 INTO V_COUNT3G5;
    EXIT WHEN  C_COUNT3G5%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT3G5.begin_date,'YYYY'),substr(V_COUNT3G5.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT3G5.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120300';
      ------数据记录合计数量
      SELECT count(*) INTO V_Count_ENTER3G5 FROM V_RIM_RSM_FEE_ENTER3G5_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
       --第一条记录
      X_Count_ENTER3G5 :=0;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
       ---记录累加
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
       V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
       --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
      V_PARTMID := V_PART;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT3G5.DECL_CODE AND V_APPLYCODE = V_COUNT3G5.APPLY_CODE THEN
      --同一个台站则带宽数据累计
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --计算发射频点
      if V_FREQEMIT <> V_COUNT3G5.FREQ_EMIT then
         V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
        V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT3G5.DERATE;
       --取出减免比例
       ---记录累加
      V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH/3.5);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH :=0;
      --计算发射频点
     -- V_BANDWIDTH :=  V_BANDWIDTH+nvl(V_COUNT3G5.CHAN_DIST,3.5)*2;
      V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
       --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
      --取出减免比例
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --如果执行最后条记录
      if X_Count_ENTER3G5=V_Count_ENTER3G5 then
          ---记录累加
          v_deptpay:= V_COUNT3G5.dept_pay;
          v_areacode:= V_COUNT3G5.area_code;
          V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT3G5.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT3G5.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT3G5.DECL_CODE;---技术资料表编号
          --
          INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          --
      end if;
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
    V_DECLCODE := V_COUNT3G5.DECL_CODE;
    v_deptpay:= V_COUNT3G5.dept_pay;
    v_areacode:= V_COUNT3G5.area_code;
    V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
    ----
  END LOOP;
  CLOSE  C_COUNT3G5;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH/4);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120300',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;

  --无线接入系统(5.8GHZ)
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNT5G82;
  LOOP
    FETCH  C_COUNT5G82 INTO V_COUNT5G82;
    EXIT WHEN  C_COUNT5G82%NOTFOUND;

    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT5G82.begin_date,'YYYY'),substr(V_COUNT5G82.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT5G82.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120400';
      ----数据记录合计数量
      SELECT count(*) INTO V_Count_KP5G8 FROM V_RIM_RSM_FEE_KP5G8_Apply
               WHERE APPLY_CODE=APPLYCODE
                AND begin_YEAR=COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      X_Count_KP5G8 :=0;
      X_Count_KP5G8 :=X_Count_KP5G8+1;
       ---记录累加
      v_deptpay:= V_COUNT5G82.dept_pay;
      v_areacode:= V_COUNT5G82.area_code;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      V_PARTMID := V_PART;
      if (V_BANDWIDTH = 0 ) then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G82.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNT5G82.DECL_CODE AND V_APPLYCODE=V_COUNT5G82.APPLY_CODE THEN
       X_Count_KP5G8 :=X_Count_KP5G8+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT5G82.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT5G82.DERATE;
       --取出减免比例
       ---记录累加
      V_APPLYCODE := V_COUNT5G82.APPLY_CODE;
      V_DECLCODE := V_COUNT5G82.DECL_CODE;
      v_deptpay:= V_COUNT5G82.dept_pay;
      v_areacode:= V_COUNT5G82.area_code;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120400',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH := CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G82.DERATE;
       --取出减免比例
      V_DECLCODE := V_COUNT5G82.DECL_CODE;
      v_deptpay:= V_COUNT5G82.dept_pay;
      v_areacode:= V_COUNT5G82.area_code;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_KP5G8 :=X_Count_KP5G8+1;
       --如果执行最后条记录
      IF X_Count_KP5G8=V_Count_KP5G8 THEN
         ---记录累加
          v_deptpay:= V_COUNT5G82.dept_pay;
          v_areacode:= V_COUNT5G82.area_code;
          V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
          V_PARTMID := V_PART;
          --空值则默认为一个单位
          V_DERATE := V_COUNT5G82.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT5G82.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT5G82.APPLY_CODE,0,length(V_COUNT5G82.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT5G82.DECL_CODE;---技术资料表编号
          --
         INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '120400',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      END IF;
      --
    END IF;
    ---记录累加
    V_APPLYCODE := V_COUNT5G82.APPLY_CODE;
    V_DECLCODE := V_COUNT5G82.DECL_CODE;
    v_deptpay:= V_COUNT5G82.dept_pay;
    v_areacode:= V_COUNT5G82.area_code;
    V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
  END LOOP;
  CLOSE  C_COUNT5G82;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '120400',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;

  --雷达站10G以下计费'910000'(按照微波站收费，重庆需求)
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNTR10GDOWN;
  LOOP
    FETCH  C_COUNTR10GDOWN INTO V_COUNTR10GDOWN;
    EXIT WHEN  C_COUNTR10GDOWN%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTR10GDOWN.begin_date,'YYYY'),substr(V_COUNTR10GDOWN.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTR10GDOWN.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='910000';
      ------数据记录合计数量
      SELECT count(*) INTO V_CountR_10GDOWN FROM V_RIM_RSM_FEE_R_Apply
        WHERE APPLY_CODE=APPLYCODE
        AND begin_YEAR=COUNTYEAR
        and FREQ_EMIT<=10000 and FREQ_EMIT>0 ;
      ----
      X_CountR_10GDOWN :=0;
      X_CountR_10GDOWN :=X_CountR_10GDOWN+1;
      --第一条记录
      --V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GDOWN.dept_pay;
      v_areacode:= V_COUNTR10GDOWN.area_code;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      V_PARTMID:= V_PART;
       if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
       --空值则默认为一个单位
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNTR10GDOWN.DECL_CODE  AND V_APPLYCODE = V_COUNTR10GDOWN.APPLY_CODE THEN
      --同一个台站则带宽数据累计
      X_CountR_10GDOWN :=X_CountR_10GDOWN+1;
      ----
      if V_FREQEMIT <> V_COUNTR10GDOWN.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTR10GDOWN.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH :=0;
      V_BANDWIDTH := CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      V_APPLYCODE := V_COUNTR10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GDOWN.dept_pay;
      v_areacode:= V_COUNTR10GDOWN.area_code;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_CountR_10GDOWN :=X_CountR_10GDOWN+1;
      IF X_CountR_10GDOWN = V_CountR_10GDOWN  THEN
          V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
          v_deptpay:= V_COUNTR10GDOWN.dept_pay;
          v_areacode:= V_COUNTR10GDOWN.area_code;
          V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
          --空值则默认为一个单位
          V_DERATE := V_COUNTR10GDOWN.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          ----
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNTR10GDOWN.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNTR10GDOWN.APPLY_CODE,0,length(V_COUNTR10GDOWN.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNTR10GDOWN.DECL_CODE;---技术资料表编号
          ---
           INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          ---
      END IF;
      --如果执行最后条记录
    END IF;
    ---
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      ---记录累加
      V_APPLYCODE := V_COUNTR10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GDOWN.dept_pay;
      v_areacode:= V_COUNTR10GDOWN.area_code;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
    ----
  END LOOP;
  CLOSE  C_COUNTR10GDOWN;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '910000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----
  --雷达站10G以上计费'920000'(按照微波站收费，重庆需求)
  V_FLAG := 'N';
  V_BANDWIDTH :=0;
  OPEN  C_COUNTR10GUP;
  LOOP
    FETCH  C_COUNTR10GUP INTO V_COUNTR10GUP;
    EXIT WHEN  C_COUNTR10GUP%NOTFOUND;
    --在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNTR10GUP.begin_date,'YYYY'),substr(V_COUNTR10GUP.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNTR10GUP.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      --第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        --第四季度计收25％
        V_PART :=25;
      ELSE
        --第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
      ----取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='920000';
      ------数据记录合计数量
      SELECT count(*) INTO V_CountR_10GUP FROM V_RIM_RSM_FEE_R_Apply
          WHERE APPLY_CODE=APPLYCODE
          AND begin_YEAR=COUNTYEAR
          and FREQ_EMIT>10000;
      ----
      X_CountR_10GUP :=0;
      X_CountR_10GUP :=X_CountR_10GUP+1;
      ----第一条记录
      ----V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNTR10GUP.dept_pay;
      v_areacode:= V_COUNTR10GUP.area_code;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      V_PARTMID:= V_PART;
       if V_BANDWIDTH =0 then
         V_BANDWIDTH :=0;
      end if;
      V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
       ----空值则默认为一个单位
      V_DERATE := V_COUNTR10GUP.DERATE;
      ----取出减免比例
      V_FLAG := 'Y';
    ELSIF V_DECLCODE=V_COUNTR10GUP.DECL_CODE  AND V_APPLYCODE = V_COUNTR10GUP.APPLY_CODE THEN
      ----同一个台站则带宽数据累计
      X_CountR_10GUP :=X_CountR_10GUP+1;
      ----
      if V_FREQEMIT <> V_COUNTR10GUP.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNTR10GUP.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---
      V_BANDWIDTH :=0;
      V_BANDWIDTH := CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
      ----空值则默认为一个单位
      V_DERATE := V_COUNTR10GUP.DERATE;
      ----取出减免比例
      V_APPLYCODE := V_COUNTR10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
      v_deptpay:= V_COUNTR10GUP.dept_pay;
      v_areacode:= V_COUNTR10GUP.area_code;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
       X_CountR_10GUP :=X_CountR_10GUP+1;
      IF X_CountR_10GUP = V_CountR_10GUP  THEN
          V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
          v_deptpay:= V_COUNTR10GUP.dept_pay;
          v_areacode:= V_COUNTR10GUP.area_code;
          V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
          ----空值则默认为一个单位
          V_DERATE := V_COUNTR10GUP.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          ----
          ----获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNTR10GUP.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNTR10GUP.APPLY_CODE,0,length(V_COUNTR10GUP.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNTR10GUP.DECL_CODE;---技术资料表编号
          ----
           INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        DECL_CODE_Temp,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
          ---
      END IF;
      ----如果执行最后条记录
    END IF;
    ---
      V_DERATE := V_COUNTR10GUP.DERATE;
      ----取出减免比例
      ---记录累加
      V_APPLYCODE := V_COUNTR10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
      v_deptpay:= V_COUNTR10GUP.dept_pay;
      v_areacode:= V_COUNTR10GUP.area_code;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
    ----
  END LOOP;
  CLOSE  C_COUNTR10GUP;
  IF V_FLAG = 'Y' THEN
  ----存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '920000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----微波站10G以下计费'910000'
  V_FLAG := 'N';
  OPEN  C_COUNT10GDOWN;
  LOOP
    FETCH  C_COUNT10GDOWN INTO V_COUNT10GDOWN;
    EXIT WHEN  C_COUNT10GDOWN%NOTFOUND;
    ----在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT10GDOWN.begin_date,'YYYY'),substr(V_COUNT10GDOWN.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT10GDOWN.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      ----第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        ----第四季度计收25％
        V_PART :=25;
      ELSE
        ----第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
    ----第一条记录
      V_DECLCODE := V_COUNT10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNT10GDOWN.dept_pay;
      v_areacode:= V_COUNT10GDOWN.area_code;
      V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
      V_PARTMID:= V_PART;
      V_BANDWIDTH := nvl(V_COUNT10GDOWN.CHAN_DIST,1);
       ----空值则默认为一个单位
      V_DERATE := V_COUNT10GDOWN.DERATE;
      ----取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='910000';
      ----取出收费标准
    ELSIF V_DECLCODE=V_COUNT10GDOWN.DECL_CODE THEN
    ----同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT10GDOWN.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+nvl(V_COUNT10GDOWN.CHAN_DIST,1);
        V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
      ----带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT10GDOWN.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_PARTMID,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH := nvl(V_COUNT10GDOWN.CHAN_DIST,1);
      ----空值则默认为一个单位
      V_DERATE := V_COUNT10GDOWN.DERATE;
      ----取出减免比例
      V_DECLCODE := V_COUNT10GDOWN.DECL_CODE;
      v_deptpay:= V_COUNT10GDOWN.dept_pay;
      v_areacode:= V_COUNT10GDOWN.area_code;
      V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNT10GDOWN;
  IF V_FLAG = 'Y' THEN
  ----存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '910000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----10G以上微波站计费'920000'
  V_FLAG := 'N';
  OPEN  C_COUNT10GUP;
  LOOP
    FETCH  C_COUNT10GUP INTO V_COUNT10GUP;
    EXIT WHEN  C_COUNT10GUP%NOTFOUND;
    ----在计费年度之前的年份
    V_YEAR := to_number(nvl(to_char(V_COUNT10GUP.begin_date,'YYYY'),substr(V_COUNT10GUP.APPLY_code,5,4)));
    V_MONTH := to_number(nvl(to_char(V_COUNT10GUP.begin_date,'MM'),'1'));
    if V_YEAR < COUNTYEAR then
      V_PART :=100;
    elsif V_YEAR = COUNTYEAR then
      IF V_MONTH<7 THEN
      ----第一、二季度计收全年
        V_PART :=100;
      ELSIF V_MONTH>9 THEN
        ----第四季度计收25％
        V_PART :=25;
      ELSE
        ----第三季度计收50％
        V_PART :=50;
      END IF;
    ELSE
      V_PART :=0;
    END IF;
    IF V_FLAG = 'N' THEN
    ----第一条记录
      V_DECLCODE := V_COUNT10GUP.DECL_CODE;
      v_deptpay:= V_COUNT10GUP.dept_pay;
      v_areacode:= V_COUNT10GUP.area_code;
      V_FREQEMIT:= V_COUNT10GUP.FREQ_EMIT;
      V_PARTMID := V_PART;
      V_BANDWIDTH := CEIL(nvl(V_COUNT10GUP.CHAN_DIST,1));
      ----空值则默认为一个单位
      V_DERATE := V_COUNT10GUP.DERATE;
       ----取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='920000';
       ----取出收费标准
    ELSIF V_DECLCODE=V_COUNT10GUP.DECL_CODE THEN
    ----同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT10GUP.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT10GUP.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT10GUP.FREQ_EMIT;
      ----带宽累加，空值则默认为一个单位
      end if;
      V_PARTMID:=V_PART;
      V_DERATE := V_COUNT10GUP.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                        V_DECLCODE,
                      v_deptpay,
                      v_areacode,
                      COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_PARTMID,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH := CEIL(nvl(V_COUNT10GUP.CHAN_DIST,1));
       ----空值则默认为一个单位
      V_DERATE := V_COUNT10GUP.DERATE;
      ----取出减免比例
      V_DECLCODE := V_COUNT10GUP.DECL_CODE;
      v_deptpay:= V_COUNT10GUP.dept_pay;
      v_areacode:= V_COUNT10GUP.area_code;
      V_FREQEMIT:= V_COUNT10GUP.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNT10GUP;
  IF V_FLAG = 'Y' THEN
  ----存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF NVL(V_AMOUNT,0)<=0 THEN
        V_AMOUNT:=1;
    END IF;
    INSERT INTO  t_rim_rsm_PAY_APPLYITEM (APPLY_CODE,
                    decl_code,
                    dept_pay,
                    area_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    pay_rate,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    Applytype)
                VALUES (ApplyCode_Temp,
                      V_DECLCODE,
                    v_deptpay,
                    v_areacode,
                    COUNTYEAR,
                      '920000',
                      V_DERATE,
                      V_PARTMID,
                    V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(V_PARTMID/100.0)*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----地球站计费'100100'
  V_FLAG := 'N';
  OPEN  C_COUNTEARTH;
  LOOP
      FETCH  C_COUNTEARTH INTO V_COUNTEARTH;
      EXIT WHEN  C_COUNTEARTH%NOTFOUND;
      ----在计费年度之前的年份
      V_YEAR := to_number(nvl(to_char(V_COUNTEARTH.begin_date,'YYYY'),substr(V_COUNTEARTH.APPLY_code,5,4)));
      V_MONTH := to_number(nvl(to_char(V_COUNTEARTH.begin_date,'MM'),'1'));
      if V_YEAR < COUNTYEAR then
        V_PART :=100;
      elsif V_YEAR = COUNTYEAR then
        IF V_MONTH<7 THEN
        ----第一、二季度计收全年
          V_PART :=100;
        ELSIF V_MONTH>9 THEN
          ----第四季度计收25％
          V_PART :=25;
        ELSE
          ----第三季度计收50％
          V_PART :=50;
        END IF;
      ELSE
        V_PART :=0;
      END IF;
      ----取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='100100';
      --
      V_AMOUNT := CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0));
      --记录累加
      v_applycode1 :=V_COUNTEARTH.apply_code;
      v_declcode1 :=V_COUNTEARTH.decl_code;
      V_DERATE := V_COUNTEARTH.DERATE;
      V_FLAG := 'N';
      --
      IF V_AMOUNT<=0 THEN
         V_AMOUNT:=1;
      END IF;
      --
      ApplyCode_Temp := Substr(v_applycode1,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(v_applycode1,0,length(v_applycode1)-12);----申请表类型T或PA
      DECL_CODE_Temp := V_COUNTEARTH.DECL_CODE;---技术资料表编号
      --
      INSERT INTO t_rim_rsm_PAY_APPLYITEM(APPLY_CODE,
                      decl_code,
                      dept_pay,
                      area_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      pay_rate,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      Applytype)
                  VALUES (ApplyCode_Temp,
                      DECL_CODE_Temp,
                      V_COUNTEARTH.dept_pay,
                      V_COUNTEARTH.area_code,
                        COUNTYEAR,
                        '100100',
                        V_DERATE,
                        V_PART,
                      V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(V_PART/100.0)*(100-V_DERATE)/100,
                        ApplyType_Temp);
        ----
        V_AMOUNT :=0;
        v_applycode1 :=V_COUNTEARTH.apply_code;
        v_declcode1 :=V_COUNTEARTH.decl_code;
        V_DERATE := V_COUNTEARTH.DERATE;
        ----
  END LOOP;
  CLOSE  C_COUNTEARTH;
  /*
   -----------------------设备检测费用-----------------------------------
   --无线寻呼系统(设备检测费)'112000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTPB_EQUCHECK;
     LOOP
      FETCH C_COUNTPB_EQUCHECK INTO V_COUNTPB_EQUCHECK;
      EXIT WHEN C_COUNTPB_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='112000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTPB_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTPB_EQUCHECK.APPLY_CODE,
                    V_COUNTPB_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTPB_EQUCHECK;
   END IF;
      --集群无线调度系统(设备检测费)'113000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTJQ_EQUCHECK;
     LOOP
      FETCH C_COUNTJQ_EQUCHECK INTO V_COUNTJQ_EQUCHECK;
      EXIT WHEN C_COUNTJQ_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='113000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTJQ_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTJQ_EQUCHECK.APPLY_CODE,
                    V_COUNTJQ_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTJQ_EQUCHECK;
   END IF;
     --无绳电话(设备检测费)'114000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTLINELESS_EQUCHECK;
     LOOP
      FETCH C_COUNTLINELESS_EQUCHECK INTO V_COUNTLINELESS_EQUCHECK;
      EXIT WHEN C_COUNTLINELESS_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='114000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTLINELESS_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTLINELESS_EQUCHECK.APPLY_CODE,
                    V_COUNTLINELESS_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTLINELESS_EQUCHECK;
   END IF;
    --电视(设备检测费)'115000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   V_FLAG := 'N';
   OPEN C_COUNTBT_EQUCHECK;
     LOOP
      FETCH C_COUNTBT_EQUCHECK INTO V_COUNTBT_EQUCHECK;
      EXIT WHEN C_COUNTBT_EQUCHECK%NOTFOUND;
      IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTBT_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBT_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      V_ITEMCODE:='115000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSIF v_applycode1=V_COUNTBT_EQUCHECK.apply_code and v_declcode1=V_COUNTBT_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSE
          INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTBT_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTBT_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBT_EQUCHECK.decl_code;
    END IF;
     END LOOP;
   CLOSE C_COUNTBT_EQUCHECK;
    IF V_FLAG = 'Y' THEN
    INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
            VALUES (V_COUNTBT_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      END IF;
   END IF;
    --广播电台(设备检测费)'' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   V_FLAG := 'N';
   OPEN C_COUNTBC_EQUCHECK;
     LOOP
      FETCH C_COUNTBC_EQUCHECK INTO V_COUNTBC_EQUCHECK;
      EXIT WHEN C_COUNTBC_EQUCHECK%NOTFOUND;
      IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTBC_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBC_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      V_ITEMCODE:='116000';
       SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSIF v_applycode1=V_COUNTBC_EQUCHECK.apply_code and v_declcode1=V_COUNTBC_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSE
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTBC_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTBC_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBC_EQUCHECK.decl_code;
      END IF;
     END LOOP;
   CLOSE C_COUNTBC_EQUCHECK;
    IF V_FLAG = 'Y' THEN
      INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTBC_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
       END IF;
   END IF;
    --1000MHz以下的无线电台（固定台）'117000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTOTHER_EQUCHECK;
     LOOP
      FETCH C_COUNTOTHER_EQUCHECK INTO V_COUNTOTHER_EQUCHECK;
      EXIT WHEN C_COUNTOTHER_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='117000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTOTHER_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTOTHER_EQUCHECK.APPly_CODE,
                    V_COUNTOTHER_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);

     END LOOP;
   CLOSE C_COUNTOTHER_EQUCHECK;
   END IF;
    --1000MHz以下的无线电台（移动台）车载台LC收费代码111121，手持台或其它收费代码118000/广东省 20130125
    IF  V_AREACODE1='440300' THEN
   V_FLAG := 'N';
  OPEN C_COUNTMOBILE_EQUCHECK;
  LOOP
    FETCH C_COUNTMOBILE_EQUCHECK INTO V_COUNTMOBILE_EQUCHECK;
    EXIT WHEN C_COUNTMOBILE_EQUCHECK%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTMOBILE_EQUCHECK.decl_code;
      --V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
        --车载台或其它收费LC收费代码111121，手持台代码118000
      if V_COUNTMOBILE_EQUCHECK.Stat_Type='LC' THEN
      V_ITEMCODE:='111121';
      ELSE
      V_ITEMCODE:='118000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      --取出收费标准
    ELSIF v_applycode1=V_COUNTMOBILE_EQUCHECK.apply_code and v_declcode1=V_COUNTMOBILE_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
        if V_COUNTMOBILE_EQUCHECK.Stat_Type='LC' THEN
      V_ITEMCODE:='111121';
      ELSE
      V_ITEMCODE:='118000';
      END IF;
    ELSE
       INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTMOBILE_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTMOBILE_EQUCHECK.decl_code;
      --V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE_EQUCHECK;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
   INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTMOBILE_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                     v_applycode1,
                     v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
  END IF;
 END IF;
  --微波站计费(设备检测费)'' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   V_FLAG := 'N';
   OPEN C_COUNT10G_EQUCHECK;
     LOOP
      FETCH C_COUNT10G_EQUCHECK INTO V_COUNT10G_EQUCHECK;
      EXIT WHEN C_COUNT10G_EQUCHECK%NOTFOUND;
       IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNT10G_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNT10G_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      V_ITEMCODE:='119000';
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSIF v_applycode1=V_COUNT10G_EQUCHECK.apply_code and v_declcode1=V_COUNT10G_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
        ELSE
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNT10G_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_AMOUNT*V_FEE);
                    V_AMOUNT := 1;
      v_applycode1 :=V_COUNTBT_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBT_EQUCHECK.decl_code;
    END IF;
     END LOOP;
   CLOSE C_COUNT10G_EQUCHECK;
   IF V_FLAG = 'Y' THEN
   INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNT10G_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                   v_applycode1,
                   v_declcode1,
                    V_AMOUNT,
                    V_AMOUNT*V_FEE);
   END IF;
   END IF;
     --MMDS计费(设备检测费)'111200' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTMMDS_EQUCHECK;
     LOOP
      FETCH C_COUNTMMDS_EQUCHECK INTO V_COUNTMMDS_EQUCHECK;
      EXIT WHEN C_COUNTMMDS_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111200';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTMMDS_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTMMDS_EQUCHECK.Apply_Code,
                    V_COUNTMMDS_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTMMDS_EQUCHECK;
   END IF;
  --地球站计费(设备检测费)'' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTEARTH_EQUCHECK;
     LOOP
      FETCH C_COUNTEARTH_EQUCHECK INTO V_COUNTEARTH_EQUCHECK;
      EXIT WHEN C_COUNTEARTH_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111300';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTEARTH_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTEARTH_EQUCHECK.Apply_Code,
                    V_COUNTEARTH_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTEARTH_EQUCHECK;
   END IF;
  --无线接入系统（1.8GHz-1.9GHz）(设备检测费)'111400' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNT1G8_EQUCHECK;
     LOOP
      FETCH C_COUNT1G8_EQUCHECK INTO V_COUNT1G8_EQUCHECK;
      EXIT WHEN C_COUNT1G8_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111400';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNT1G8_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNT1G8_EQUCHECK.Apply_Code,
                    V_COUNT1G8_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNT1G8_EQUCHECK;
   END IF;
    --扩频系统（2.4GHz）(设备检测费)'111500' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNT2G4_EQUCHECK;
     LOOP
      FETCH C_COUNT2G4_EQUCHECK INTO V_COUNT2G4_EQUCHECK;
      EXIT WHEN C_COUNT2G4_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111500';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNT2G4_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNT2G4_EQUCHECK.Apply_Code,
                    V_COUNT2G4_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNT2G4_EQUCHECK;
   END IF;
     --扩频系统（5.8GHz）(设备检测费)'111600' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNT5G81_EQUCHECK;
     LOOP
      FETCH C_COUNT5G81_EQUCHECK INTO V_COUNT5G81_EQUCHECK;
      EXIT WHEN C_COUNT5G81_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111600';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNT5G81_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNT5G81_EQUCHECK.Apply_Code,
                    V_COUNT5G81_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNT5G81_EQUCHECK;
   END IF;
  --无线数据(设备检测费)'111700' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTDATA_EQUCHECK;
     LOOP
      FETCH C_COUNTDATA_EQUCHECK INTO V_COUNTDATA_EQUCHECK;
      EXIT WHEN C_COUNTDATA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111700';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTDATA_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTDATA_EQUCHECK.APPLY_CODE,
                    V_COUNTDATA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTDATA_EQUCHECK;
   END IF;
    --GSM(设备检测费)'111800' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTGSM_EQUCHECK;
     LOOP
      FETCH C_COUNTGSM_EQUCHECK INTO V_COUNTGSM_EQUCHECK;
      EXIT WHEN C_COUNTGSM_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTGSM_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTGSM_EQUCHECK.APPLY_CODE,
                    V_COUNTGSM_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);

     END LOOP;
   CLOSE C_COUNTGSM_EQUCHECK;
   END IF;
       --CDMA(设备检测费)'111800' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTCDMA_EQUCHECK;
     LOOP
      FETCH C_COUNTCDMA_EQUCHECK INTO V_COUNTCDMA_EQUCHECK;
      EXIT WHEN C_COUNTCDMA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTCDMA_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTCDMA_EQUCHECK.APPLY_CODE,
                    V_COUNTCDMA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);

     END LOOP;
   CLOSE C_COUNTCDMA_EQUCHECK;
   END IF;
          --WCDMS(设备检测费)'111800' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTWCDMA_EQUCHECK;
     LOOP
      FETCH C_COUNTWCDMA_EQUCHECK INTO V_COUNTWCDMA_EQUCHECK;
      EXIT WHEN C_COUNTWCDMA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTWCDMA_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTWCDMA_EQUCHECK.APPLY_CODE,
                    V_COUNTWCDMA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTWCDMA_EQUCHECK;
   END IF;
             --TDSCDMS(设备检测费)'111800' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTTDSCDMA_EQUCHECK;
     LOOP
      FETCH C_COUNTTDSCDMA_EQUCHECK INTO V_COUNTTDSCDMA_EQUCHECK;
      EXIT WHEN C_COUNTTDSCDMA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECK_APPITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTTDSCDMA_EQUCHECK.DEPT_PAY,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTTDSCDMA_EQUCHECK.APPLY_CODE,
                    V_COUNTTDSCDMA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTTDSCDMA_EQUCHECK;
   END IF;
  ---------------------------------------------------------------------------------------------------
  */
  COMMIT;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEEITEM_DEPT
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEEITEM_DEPT"(COUNTYEAR NUMBER,DEPTCODE varchar2,areacode varchar2)
IS
  ----年度计费
  ----集群系统
  CURSOR C_COUNTJQ IS SELECT count(distinct net_guid) net_count,freq,net_range,
  min(freq_note) freq_note,min(derate) derate,
  ----2015新增申请表编号、技术资料表编号
  max (APPLY_CODE) as APPLY_CODE, min (DECL_CODE) as DECL_CODE
   FROM V_rim_rsm_FEE_JQ
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                and freq>0
                AND begin_YEAR<COUNTYEAR
              group BY freq,net_range;
  V_COUNTJQ C_COUNTJQ%ROWTYPE;

  --寻呼系统
  CURSOR C_COUNTPB IS SELECT  count(distinct net_guid) net_count,freq_emit,net_range,
  min(freq_note) freq_note,min(derate) derate ,
  ----2015新增申请表编号、技术资料表编号
  min (APPLY_CODE) as APPLY_CODE, min (DECL_CODE) as DECL_CODE
   FROM V_rim_rsm_FEE_PB
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                and freq_emit>0
              group BY freq_emit,net_range;
  V_COUNTPB C_COUNTPB%ROWTYPE;

  --广播电台
  CURSOR C_COUNTBC IS SELECT  count(distinct net_guid) net_count,freq_emit,net_range,
  min(freq_note) freq_note,min(derate) derate,
  ----2015新增申请表编号、技术资料表编号
  min (APPLY_CODE) as APPLY_CODE, min (DECL_CODE) as DECL_CODE
  FROM V_rim_rsm_FEE_BC
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                and freq_emit>0
              group BY freq_emit,net_range;
  V_COUNTBC C_COUNTBC%ROWTYPE;

  ----电视
  CURSOR C_COUNTBT IS SELECT  count(distinct net_guid) net_count,freq_emit,net_range,
  min(freq_note) freq_note,min(derate) derate,
  ----2015新增申请表编号、技术资料表编号
  min (APPLY_CODE) as APPLY_CODE, min (DECL_CODE) as DECL_CODE
  FROM V_rim_rsm_FEE_BT
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                and freq_emit>0
              group BY freq_emit,net_range;
  V_COUNTBT C_COUNTBT%ROWTYPE;
  ----无绳电话
  ----暂时去掉
  /*
  
  CURSOR C_COUNTLINELESS IS SELECT * FROM V_RIM_RSM_FEE_LINELESS
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTLINELESS C_COUNTLINELESS%ROWTYPE;
  
  */
  ----船舶电台（吨位小于1600吨）
  CURSOR C_COUNTSHIP1 IS SELECT * FROM V_rim_rsm_FEE_S
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND SHIP_TYPE<>'PH'
                AND TONNAGE<=1600
              ORDER BY apply_code,decl_code;
  V_COUNTSHIP1 C_COUNTSHIP1%ROWTYPE;
  ----船舶电台（吨位大于1600吨）
  CURSOR C_COUNTSHIP2 IS SELECT * FROM V_rim_rsm_FEE_S
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND SHIP_TYPE<>'PH'
                AND TONNAGE>1600
              ORDER BY apply_code,decl_code;
  V_COUNTSHIP2 C_COUNTSHIP2%ROWTYPE;
  ----船舶电台（渔船，功率>=20马力）
  CURSOR C_COUNTSHIP3 IS SELECT * FROM V_rim_rsm_FEE_S
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND SHIP_TYPE='PH'
                AND POWER>=20
              ORDER BY apply_code,decl_code;
  V_COUNTSHIP3 C_COUNTSHIP3%ROWTYPE;
  CURSOR C_COUNTAERO1 IS SELECT * FROM V_rim_rsm_FEE_A
  ----航空器电台(固定翼飞机27吨以上)
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND TONNAGE>27
              ORDER BY decl_code;
  V_COUNTAERO1 C_COUNTAERO1%ROWTYPE;
  ----航空器电台航空器电台(固定翼飞机5.7吨至27吨以下(含))
  CURSOR C_COUNTAERO2 IS SELECT * FROM V_rim_rsm_FEE_A
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND TONNAGE<=27 and TONNAGE>5.7
              ORDER BY decl_code;
  V_COUNTAERO2 C_COUNTAERO2%ROWTYPE;
  ----航空器电台(固定翼飞机5.7吨(含)以下)
  CURSOR C_COUNTAERO3 IS SELECT * FROM V_rim_rsm_FEE_A
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND TONNAGE<=5.7 AND TONNAGE>0
              ORDER BY decl_code;
  V_COUNTAERO3 C_COUNTAERO3%ROWTYPE;
  ----航空器电台(旋翼飞机)
  CURSOR C_COUNTAERO4 IS SELECT * FROM V_rim_rsm_FEE_A
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND TONNAGE=0
              ORDER BY decl_code;
  V_COUNTAERO4 C_COUNTAERO4%ROWTYPE;
  ----无线数据频段-----v_rim_rsm_fee_v改为v_rim_rsm_fee_data
  CURSOR C_COUNTDATA IS SELECT * FROM v_rim_rsm_fee_data
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR 
                /*
                AND ((FREQ_EMIT>=223.025 AND FREQ_EMIT<=235) OR (FREQ_RECE>=223.025 AND FREQ_RECE<=235)
                  OR (FREQ_EMIT>821 AND FREQ_EMIT<825) OR (FREQ_RECE>821 AND FREQ_RECE<825)
                  OR (FREQ_EMIT>866 AND FREQ_EMIT<870) OR (FREQ_RECE>866 AND FREQ_RECE<870)
                  OR (FREQ_EMIT>915 AND FREQ_EMIT<917) OR (FREQ_RECE>915 AND FREQ_RECE<917))
                */
              ORDER BY apply_code,decl_code,FREQ_EMIT,FREQ_RECE;
  V_COUNTDATA C_COUNTDATA%ROWTYPE;

  ----无线接入450MHZ频段---v_rim_rsm_fee_v改为v_rim_rsm_fee_450m
  CURSOR C_COUNT450M IS SELECT * FROM v_rim_rsm_fee_450m
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR 
                /*
                AND ((FREQ_EMIT>=450.5 AND FREQ_EMIT<=451.975) OR (FREQ_RECE>=450.5 AND FREQ_RECE<=451.975)
                  OR (FREQ_EMIT>=460.5 AND FREQ_EMIT<=461.975) OR (FREQ_RECE>=460.5 AND FREQ_RECE<=461.975))
                */
              ORDER BY apply_code,decl_code,FREQ_EMIT,FREQ_RECE;
  V_COUNT450M C_COUNT450M%ROWTYPE;


  ----其它固定台(1000MHz以下的无线电台(固定电台)--'810000')
  CURSOR C_COUNTOTHER IS SELECT count(distinct net_guid) net_count,freq,
  min(freq_note) freq_note,min(derate) derate,
  ----2015【申请表编号、技术资料表编号】
  min (APPLY_CODE) as APPLY_CODE, min (DECL_CODE) as DECL_CODE
  FROM V_rim_rsm_FEE_OTHER
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                and freq>0
              group BY freq;
  V_COUNTOTHER C_COUNTOTHER%ROWTYPE;
  ----移动台(1000MHz以下的无线电台(移动电台)--'820000')---V_RIM_RSM_FEE_MOBILE改为V_RIM_RSM_FEE_U
  CURSOR C_COUNTMOBILE IS SELECT * FROM V_RIM_RSM_FEE_MOBILE
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTMOBILE C_COUNTMOBILE%ROWTYPE;
   ----MMDS台-----V_rim_rsm_FEE_MMDS改为V_RIM_RSM_FEE_M
  CURSOR C_COUNTMMDS IS SELECT * FROM V_rim_rsm_FEE_MMDS
              WHERE DECL_CODE LIKE 'TF%'
                AND DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND STAT_TYPE='MD'
                AND FREQ_EMIT>0
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNTMMDS C_COUNTMMDS%ROWTYPE;
  ----无线接入1.8G
  CURSOR C_COUNT1G8 IS SELECT * FROM V_rim_rsm_FEE_ENTER1G8
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode 
                AND begin_YEAR<COUNTYEAR 
                --AND decl_code like 'C%'
              ORDER BY apply_code,decl_code;
  V_COUNT1G8 C_COUNT1G8%ROWTYPE;
   ----扩频系统2.4G ----V_rim_rsm_FEE_KP2G4改为V_RIM_RSM_FEE_M
  CURSOR C_COUNT2G4 IS SELECT * FROM V_RIM_RSM_FEE_M
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND (FREQ_EMIT>=2400 AND FREQ_EMIT<=2483.5)
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNT2G4 C_COUNT2G4%ROWTYPE;
  --扩频系统5.8G----V_rim_rsm_FEE_KP5G8改为V_RIM_RSM_FEE_M
  CURSOR C_COUNT5G81 IS SELECT * FROM V_rim_rsm_FEE_KP5G8
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                --AND STAT_TYPE<>'XX'
							  --AND (FREQ_EMIT>=5725 AND FREQ_EMIT<=5850)
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNT5G81 C_COUNT5G81%ROWTYPE;
  ----无线接入3.5G----V_rim_rsm_FEE_ENTER3G5改为V_RIM_RSM_FEE_M
  CURSOR C_COUNT3G5 IS SELECT * FROM V_rim_rsm_FEE_ENTER3G5
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND ((FREQ_EMIT>=3399.5 AND FREQ_EMIT<=3431) OR (FREQ_EMIT>=3499.5 AND FREQ_EMIT<=3531))
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNT3G5 C_COUNT3G5%ROWTYPE;

 --无线接入5.8G
  CURSOR C_COUNT5G82 IS SELECT * FROM V_RIM_RSM_FEE_M
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND STAT_TYPE='XX'
                AND (FREQ_EMIT>=5725 AND FREQ_EMIT<=5850)
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNT5G82 C_COUNT5G82%ROWTYPE;

  --雷达站10G以下(按照微波站收费)
  CURSOR C_COUNTR10GDOWN IS SELECT * FROM V_rim_rsm_FEE_R
        WHERE DEPT_PAY=DEPTCODE
        AND area_code=areacode
        AND begin_YEAR<COUNTYEAR
        and FREQ_EMIT<=10000 and FREQ_EMIT>0
        ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNTR10GDOWN C_COUNTR10GDOWN%ROWTYPE;

  --雷达站10G以上(按照微波站收费)
  CURSOR C_COUNTR10GUP IS SELECT * FROM V_rim_rsm_FEE_R
        WHERE DEPT_PAY=DEPTCODE
        AND area_code=areacode
        AND begin_YEAR<COUNTYEAR
        and FREQ_EMIT>10000
        ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT;
  V_COUNTR10GUP C_COUNTR10GUP%ROWTYPE;
   --微波站10G以下---
  -------去除同个台站的相同频率
  CURSOR C_COUNT10GDOWN IS SELECT distinct (APPLY_CODE||DECL_CODE||FREQ_EMIT) as APPLY_CODE_TEMP ,APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate
              FROM V_rim_rsm_FEE_M
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT<=10000 and FREQ_EMIT>0
              ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate;
  V_COUNT10GDOWN C_COUNT10GDOWN%ROWTYPE;
  --微波站10G以上
  --去除同个台站的相同频率
  CURSOR C_COUNT10GUP IS SELECT distinct (APPLY_CODE||DECL_CODE||FREQ_EMIT) as APPLY_CODE_TEMP ,APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate
              FROM V_rim_rsm_FEE_M
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>10000
                ORDER BY APPLY_CODE,DECL_CODE,FREQ_EMIT,chan_dist,derate;
  V_COUNT10GUP C_COUNT10GUP%ROWTYPE;
  --地球站
  CURSOR C_COUNTEARTH IS SELECT * FROM V_rim_rsm_FEE_E
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTEARTH C_COUNTEARTH%ROWTYPE;
  /*
--------设备检测费----------------------------------------------------
 --寻呼系统(设备检测费)'112000' /广东省 20130125
  CURSOR C_COUNTPB_EQUCHECK IS SELECT  * FROM v_rim_rsm_fee_EQUCHECK_pb
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTPB_EQUCHECK C_COUNTPB_EQUCHECK%ROWTYPE;
  --集群系统(设备检测费)'113000' /广东省 20130125
  CURSOR C_COUNTJQ_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_jq
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTJQ_EQUCHECK C_COUNTJQ_EQUCHECK%ROWTYPE;
  --广播电台(设备检测费)'116000' /广东省 20130125
   CURSOR C_COUNTBC_EQUCHECK IS SELECT  *  FROM v_rim_rsm_fee_equcheck_bc
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTBC_EQUCHECK C_COUNTBC_EQUCHECK%ROWTYPE;
  --电视(设备检测费)'115000' /广东省 20130125
   CURSOR C_COUNTBT_EQUCHECK IS SELECT  *  FROM V_rim_rsm_FEE_EQUCHECK_BT
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTBT_EQUCHECK C_COUNTBT_EQUCHECK%ROWTYPE;
--无绳电话(设备检测费)'114000'/广东省 20130125
  CURSOR C_COUNTLINELESS_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_linless
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTLINELESS_EQUCHECK C_COUNTLINELESS_EQUCHECK%ROWTYPE;
   --微波站(包括10G以上和10G以下)(设备检测费)'119000' /广东省 20130125
   CURSOR C_COUNT10G_EQUCHECK IS SELECT  *  FROM v_rim_rsm_fee_equcheck_m
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNT10G_EQUCHECK C_COUNT10G_EQUCHECK%ROWTYPE;
  --无线数据频段(设备检测费)(设备检测费)'111700' /广东省 20130125
  CURSOR C_COUNTDATA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_data
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTDATA_EQUCHECK C_COUNTDATA_EQUCHECK%ROWTYPE;
    --地球站(设备检测费)'111300' /广东省 20130125
  CURSOR C_COUNTEARTH_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_e
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTEARTH_EQUCHECK  C_COUNTEARTH_EQUCHECK%ROWTYPE;
   --MMDS台 (设备检测费)'111200' /广东省 20130125
  CURSOR C_COUNTMMDS_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_mmds
              WHERE DECL_CODE LIKE 'TF%'
                AND DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTMMDS_EQUCHECK C_COUNTMMDS_EQUCHECK%ROWTYPE;
  --无线接入1.8G(设备检测费)'111400'/广东省 20130125
  CURSOR C_COUNT1G8_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_ECHECK_enter1g8
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNT1G8_EQUCHECK C_COUNT1G8_EQUCHECK%ROWTYPE;
   --扩频系统2.4G(设备检测费)'111500'/广东省 20130125
  CURSOR C_COUNT2G4_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_kp2g4
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNT2G4_EQUCHECK C_COUNT2G4_EQUCHECK%ROWTYPE;
  --扩频系统5.8G(设备检测费)'111600'/广东省 20130125
  CURSOR C_COUNT5G81_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_kp5g8
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNT5G81_EQUCHECK C_COUNT5G81_EQUCHECK%ROWTYPE;
   --其它固定台(设备检测费)'117000'/广东省 20130125
  CURSOR C_COUNTOTHER_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_other
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTOTHER_EQUCHECK C_COUNTOTHER_EQUCHECK%ROWTYPE;
   --移动台(设备检测费)'118000'/广东省 20130125
  CURSOR C_COUNTMOBILE_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_EQUCHECK_mobile
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTMOBILE_EQUCHECK C_COUNTMOBILE_EQUCHECK%ROWTYPE;
   --蜂窝公众通信基站GSM(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTGSM_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_GSM
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTGSM_EQUCHECK C_COUNTGSM_EQUCHECK%ROWTYPE;
    --蜂窝公众通信基站CDMA(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTCDMA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_CDMA
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTCDMA_EQUCHECK C_COUNTCDMA_EQUCHECK%ROWTYPE;
      --蜂窝公众通信基站WCDMA(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTWCDMA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_WCDMA
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTWCDMA_EQUCHECK C_COUNTWCDMA_EQUCHECK%ROWTYPE;
      --蜂窝公众通信基站TD-SCDMA(设备检测费)'111800'/广东省 20130125
  CURSOR C_COUNTTDSCDMA_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_TDSCDMA
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTTDSCDMA_EQUCHECK C_COUNTTDSCDMA_EQUCHECK%ROWTYPE;
------------------------------------------------------------------------
*/
  V_APPLYCODE VARCHAR2(14);
  V_APPLYCODE1 VARCHAR2(14);
  --申请表编号

  V_DECLCODE VARCHAR2(6);
  V_DECLCODE1 VARCHAR2(6);
   --技术资料表编号
  V_FREQEMIT NUMBER;
  V_FREQRECE NUMBER;
  --频率
  V_AMOUNT NUMBER;
  V_AMOUNT1 NUMBER;
  --数量
  V_BANDWIDTH NUMBER;
  --带宽
  V_DERATE NUMBER;
  --减免
  V_FEE NUMBER;
  --

  v_deptpay  VARCHAR2(36);
  v_areacode  VARCHAR2(6);

  --无绳电话的收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
  --无线数据频段记录合计数量
  V_Count_Data NUMBER;
  X_Count_Data NUMBER;----记录次数
  --无线接入450MHZ频段记录合计数量
  V_Count_FEE_450m NUMBER;
  X_Count_FEE_450m NUMBER;----记录次数
  --移动台记录合计数量
  V_Count_mobile NUMBER;
  X_Count_mobile NUMBER;----记录次数
  --扩频系统2.4G记录合计数量
  V_Count_kp2g4 NUMBER;
  X_Count_kp2g4 NUMBER;----记录次数
  --扩频系统5.8G记录合计数量
  V_Count_KP5G8 NUMBER;
  X_Count_KP5G8 NUMBER;----记录次数
  --无线接入3.5G记录合计数量
  V_Count_ENTER3G5 NUMBER;----记录合计数量
  X_Count_ENTER3G5 NUMBER;----记录次数
  --无线接入5.8G记录合计数量
  V_Count_ENTER5G8 NUMBER;----记录合计数量
  X_Count_ENTER5G8 NUMBER;----记录次数
  --雷达站10G以下--记录合计数量
  V_CountR_10GDOWN NUMBER;----记录合计数量
  X_CountR_10GDOWN NUMBER;----记录次数
  --雷达站10G以上--记录合计数量
  V_CountR_10GUP NUMBER;----记录合计数量
  X_CountR_10GUP NUMBER;----记录次数
   --
  ApplyCode_Temp varchar2(20);----申请表编号转化后的（T500020150005转化为500020150005）
  ApplyType_Temp varchar2(10); ---申请表类型T或PA
  DECL_CODE_Temp varchar2(10); ---技术资料表编号（V0001或者C0001）
  --
BEGIN
  DELETE FROM T_RIM_RSM_PAY_DEPTITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_pay_deptnetitem WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  DELETE FROM T_RIM_RSM_PAY_EQUCHECKITEM WHERE DEPT_PAY=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  --集群无线调度系统
  OPEN C_COUNTJQ;
  LOOP
    FETCH C_COUNTJQ INTO V_COUNTJQ;
    EXIT WHEN C_COUNTJQ%NOTFOUND;
    IF  V_COUNTJQ.net_range='GJ' THEN
      V_ITEMCODE:='210000';
    ELSIF V_COUNTJQ.net_range='SJ' THEN
      V_ITEMCODE:='220000';
    ELSE
      V_ITEMCODE:='230000';
    END IF;
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
    INSERT INTO T_RIM_RSM_pay_deptnetitem(dept_pay,
                    area_code,
                    APPLY_CODE,
                    decl_code,
                    count_year,
                    item_code,
                    freq_note,
                    amount,
                    derate,
                    sum_count,
                    sum_pay,
                    Applytype)
                VALUES (DEPTCODE,
                    areacode,
                    V_COUNTJQ.APPLY_CODE,
                    V_COUNTJQ.DECL_CODE,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTJQ.freq_note,
                    V_COUNTJQ.NET_COUNT,
                    V_COUNTJQ.DERATE,
                    V_FEE*V_COUNTJQ.NET_COUNT,
                    V_FEE*V_COUNTJQ.NET_COUNT*(100-V_COUNTJQ.DERATE)/100,
                    'T');
  END LOOP;
  CLOSE C_COUNTJQ;
  --寻呼系统
  OPEN C_COUNTPB;
  LOOP
    FETCH C_COUNTPB INTO V_COUNTPB;
    EXIT WHEN C_COUNTPB%NOTFOUND;
    IF  V_COUNTPB.net_range='GJ' THEN
      V_ITEMCODE:='310000';
    ELSIF V_COUNTPB.net_range='SJ' THEN
      V_ITEMCODE:='320000';
    ELSE
      V_ITEMCODE:='330000';
    END IF;
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
    INSERT INTO T_RIM_RSM_pay_deptnetitem(dept_pay,
                    area_code,
                    APPLY_CODE,
                    decl_code,
                    count_year,
                    item_code,
                    freq_note,
                    amount,
                    derate,
                    sum_count,
                    sum_pay,
                    Applytype)
                VALUES (DEPTCODE,
                    areacode,
                    V_COUNTPB.APPLY_CODE,
                    V_COUNTPB.DECL_CODE,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTPB.freq_note,
                    V_COUNTPB.NET_COUNT,
                    V_COUNTPB.DERATE,
                    V_FEE*V_COUNTPB.NET_COUNT,
                    V_FEE*V_COUNTPB.NET_COUNT*(100-V_COUNTPB.DERATE)/100,
                    'T');
  END LOOP;
  CLOSE C_COUNTPB;
  --广播电台
  OPEN C_COUNTBC;
  LOOP
    FETCH C_COUNTBC INTO V_COUNTBC;
    EXIT WHEN C_COUNTBC%NOTFOUND;
    IF  V_COUNTBC.net_range='GJ' THEN
      V_ITEMCODE:='560000';
    ELSIF V_COUNTBC.net_range='SJ' THEN
      V_ITEMCODE:='570000';
    ELSIF V_COUNTBC.net_range='CJ' THEN
      V_ITEMCODE:='580000';
    ELSE
      V_ITEMCODE:='590000';
    END IF;
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
    INSERT INTO T_RIM_RSM_pay_deptnetitem(dept_pay,
                    area_code,
                    APPLY_CODE,
                    decl_code,
                    count_year,
                    item_code,
                    freq_note,
                    amount,
                    derate,
                    sum_count,
                    sum_pay,
                    Applytype)
                VALUES (DEPTCODE,
                    areacode,
                    V_COUNTBC.APPLY_CODE,
                    V_COUNTBC.DECL_CODE,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTBC.freq_note,
                    V_COUNTBC.NET_COUNT,
                    V_COUNTBC.DERATE,
                    V_FEE*V_COUNTBC.NET_COUNT,
                    V_FEE*V_COUNTBC.NET_COUNT*(100-V_COUNTBC.DERATE)/100,
                    'T');
  END LOOP;
  CLOSE C_COUNTBC;
  --电视
  OPEN C_COUNTBT;
  LOOP
    FETCH C_COUNTBT INTO V_COUNTBT;
    EXIT WHEN C_COUNTBT%NOTFOUND;
    IF  V_COUNTBT.net_range='GJ' THEN
      V_ITEMCODE:='510000';
    ELSIF V_COUNTBT.net_range='SJ' THEN
      V_ITEMCODE:='520000';
    ELSIF V_COUNTBT.net_range='CJ' THEN
      V_ITEMCODE:='530000';
    ELSE
      V_ITEMCODE:='540000';
    END IF;
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE=V_ITEMCODE;
    INSERT INTO T_RIM_RSM_pay_deptnetitem(dept_pay,
                    area_code,
                    APPLY_CODE,
                    decl_code,
                    count_year,
                    item_code,
                    freq_note,
                    amount,
                    derate,
                    sum_count,
                    sum_pay,
                    Applytype)
                VALUES (DEPTCODE,
                    areacode,
                    V_COUNTBT.APPLY_CODE,
                    V_COUNTBT.DECL_CODE,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTBT.freq_note,
                    V_COUNTBT.NET_COUNT,
                    V_COUNTBT.DERATE,
                    V_FEE*V_COUNTBT.NET_COUNT,
                    V_FEE*V_COUNTBT.NET_COUNT*(100-V_COUNTBT.DERATE)/100,
                    'T');
  END LOOP;
  CLOSE C_COUNTBT;
  /*无无绳电话计费暂时不计费
  --无绳电话计费'410000'
  V_FLAG := 'N';
  OPEN C_COUNTLINELESS;
  LOOP
    FETCH C_COUNTLINELESS INTO V_COUNTLINELESS;
    EXIT WHEN C_COUNTLINELESS%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='410000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTLINELESS.APPLY_CODE,
                  V_COUNTLINELESS.decl_code,
                  COUNTYEAR,
                  '410000',
                  V_COUNTLINELESS.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTLINELESS.DERATE)/100);
  END LOOP;
  CLOSE C_COUNTLINELESS;
  */
  --船舶电台（吨位小于1600吨）计费'620000'
  V_FLAG := 'N';
  OPEN C_COUNTSHIP1;
  LOOP
    FETCH C_COUNTSHIP1 INTO V_COUNTSHIP1;
    EXIT WHEN C_COUNTSHIP1%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='620000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTSHIP1.APPLY_CODE,
                  V_COUNTSHIP1.decl_code,
                  COUNTYEAR,
                  '620000',
                  V_COUNTSHIP1.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTSHIP1.DERATE)/100,
                  'T');
  END LOOP;
  CLOSE C_COUNTSHIP1;
  --船舶电台（吨位大于1600吨）计费'610000'
  V_FLAG := 'N';
  OPEN C_COUNTSHIP2;
  LOOP
    FETCH C_COUNTSHIP2 INTO V_COUNTSHIP2;
    EXIT WHEN C_COUNTSHIP2%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='610000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTSHIP2.APPLY_CODE,
                  V_COUNTSHIP2.decl_code,
                  COUNTYEAR,
                  '610000',
                  V_COUNTSHIP2.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTSHIP2.DERATE)/100,
                  'T');
  END LOOP;
  CLOSE C_COUNTSHIP2;
  --船舶电台（渔船，功率>=20马力）计费'630000'
  V_FLAG := 'N';
  OPEN C_COUNTSHIP3;
  LOOP
    FETCH C_COUNTSHIP3 INTO V_COUNTSHIP3;
    EXIT WHEN C_COUNTSHIP3%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='630000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTSHIP3.APPLY_CODE,
                  V_COUNTSHIP3.decl_code,
                  COUNTYEAR,
                  '630000',
                  V_COUNTSHIP3.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTSHIP3.DERATE)/100,
                  'T');
  END LOOP;
  CLOSE C_COUNTSHIP3;
  --航空器电台(固定翼飞机27吨以上)
  V_FLAG := 'N';
  OPEN C_COUNTAERO1;
  LOOP
    FETCH C_COUNTAERO1 INTO V_COUNTAERO1;
    EXIT WHEN C_COUNTAERO1%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='710000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTAERO1.APPLY_CODE,
                  V_COUNTAERO1.decl_code,
                  COUNTYEAR,
                  '710000',
                  V_COUNTAERO1.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTAERO1.DERATE)/100,
                  'T');

  END LOOP;
  CLOSE C_COUNTAERO1;
  --航空器电台(固定翼飞机5.7吨至27吨以下(含))
  V_FLAG := 'N';
  OPEN C_COUNTAERO2;
  LOOP
    FETCH C_COUNTAERO2 INTO V_COUNTAERO2;
    EXIT WHEN C_COUNTAERO2%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='720000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTAERO2.APPLY_CODE,
                  V_COUNTAERO2.decl_code,
                  COUNTYEAR,
                  '720000',
                  V_COUNTAERO2.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTAERO2.DERATE)/100,
                  'T');
  END LOOP;
  CLOSE C_COUNTAERO2;
  --航空器电台(固定翼飞机5.7吨(含)以下)
  V_FLAG := 'N';
  OPEN C_COUNTAERO3;
  LOOP
    FETCH C_COUNTAERO3 INTO V_COUNTAERO3;
    EXIT WHEN C_COUNTAERO3%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='730000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTAERO3.APPLY_CODE,
                  V_COUNTAERO3.decl_code,
                  COUNTYEAR,
                  '730000',
                  V_COUNTAERO3.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTAERO3.DERATE)/100,
                  'T');
  END LOOP;
  CLOSE C_COUNTAERO3;
  --航空器电台(旋翼飞机)
  V_FLAG := 'N';
  OPEN C_COUNTAERO4;
  LOOP
    FETCH C_COUNTAERO4 INTO V_COUNTAERO4;
    EXIT WHEN C_COUNTAERO4%NOTFOUND;
    IF V_FLAG = 'N' THEN
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='740000';
      V_FLAG := 'Y';
    end if;
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                  AREA_CODE,
                  APPLY_CODE,
                  decl_code,
                  COUNT_YEAR,
                  ITEM_CODE,
                  DERATE,
                  AMOUNT,
                  SUM_COUNT,
                  SUM_PAY,
                  APPLYTYPE)
              VALUES (DEPTCODE,
                  areacode,
                  V_COUNTAERO4.APPLY_CODE,
                  V_COUNTAERO4.decl_code,
                  COUNTYEAR,
                  '740000',
                  V_COUNTAERO4.DERATE,
                  1,
                  V_FEE,
                  V_FEE*(100-V_COUNTAERO4.DERATE)/100,
                  'T');

  END LOOP;
  CLOSE C_COUNTAERO4;
  --无线数据频段计费'140100'
  V_FLAG := 'N';
  OPEN C_COUNTDATA;
  LOOP
    FETCH C_COUNTDATA INTO V_COUNTDATA;
    EXIT WHEN C_COUNTDATA%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 0;
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --记录累加
      v_applycode :=V_COUNTDATA.apply_code;
      v_declcode :=V_COUNTDATA.decl_code;
      V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      V_DERATE := V_COUNTDATA.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='140100';
      --取出收费标准
    ELSIF v_applycode=V_COUNTDATA.apply_code and v_declcode=V_COUNTDATA.decl_code THEN
     --台站相同，继续累加
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 and V_FREQEMIT <> V_COUNTDATA.FREQ_EMIT then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_FREQRECE <> V_COUNTDATA.FREQ_RECE and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      end if;
    ELSE
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '140100',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_AMOUNT := 0;
      --计算发射频点
      if V_COUNTDATA.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNTDATA.freq_rece>0 and V_COUNTDATA.freq_rece<>V_COUNTDATA.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      v_applycode :=V_COUNTDATA.apply_code;
      v_declcode :=V_COUNTDATA.decl_code;
      V_DERATE := V_COUNTDATA.DERATE;
      V_FREQEMIT:= V_COUNTDATA.FREQ_EMIT;
      V_FREQRECE:= V_COUNTDATA.FREQ_RECE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTDATA;
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '140100',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --无线接入450MHZ频段计费'120100'
  V_FLAG := 'N';
  OPEN C_COUNT450M;
  LOOP
    FETCH C_COUNT450M INTO V_COUNT450M;
    EXIT WHEN C_COUNT450M%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 0;
      --计算发射频点
      if V_COUNT450M.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --记录累加
      v_applycode :=V_COUNT450M.apply_code;
      v_declcode :=V_COUNT450M.decl_code;
      V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      V_DERATE := V_COUNT450M.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120100';
      --取出收费标准
    ELSIF v_applycode=V_COUNT450M.apply_code and v_declcode=V_COUNT450M.decl_code THEN
      --计算发射频点
      if V_COUNT450M.freq_emit>0 and V_FREQEMIT <> V_COUNT450M.FREQ_EMIT then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_FREQRECE <> V_COUNT450M.FREQ_RECE and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
        V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      end if;
    ELSE
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '120100',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_AMOUNT := 0;
      --计算发射频点
      if V_COUNT450M.freq_emit>0 then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      --计算接收频点
      if V_COUNT450M.freq_rece>0 and V_COUNT450M.freq_rece<>V_COUNT450M.freq_emit then
        V_AMOUNT := V_AMOUNT+1;
      end if;
      v_applycode :=V_COUNT450M.apply_code;
      v_declcode :=V_COUNT450M.decl_code;
      V_DERATE := V_COUNT450M.DERATE;
      V_FREQEMIT:= V_COUNT450M.FREQ_EMIT;
      V_FREQRECE:= V_COUNT450M.FREQ_RECE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNT450M;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '120100',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --其它V表固定站计费'810000'【1000MHz以下的无线电台(固定电台)】
  OPEN C_COUNTOTHER;
  LOOP
    FETCH C_COUNTOTHER INTO V_COUNTOTHER;
    EXIT WHEN C_COUNTOTHER%NOTFOUND;
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='810000';
    INSERT INTO T_RIM_RSM_pay_deptnetitem(dept_pay,
                    area_code,
                    APPLY_CODE,
                    DECL_CODE,
                    count_year,
                    item_code,
                    freq_note,
                    amount,
                    derate,
                    sum_count,
                    sum_pay,
                    Applytype)
                VALUES (DEPTCODE,
                    areacode,
                    V_COUNTOTHER.APPLY_CODE,
                    V_COUNTOTHER.DECL_CODE,
                    COUNTYEAR,
                    '810000',
                    V_COUNTOTHER.freq_note,
                    V_COUNTOTHER.NET_COUNT,
                    V_COUNTOTHER.DERATE,
                    V_FEE*V_COUNTOTHER.NET_COUNT,
                    V_FEE*V_COUNTOTHER.NET_COUNT*(100-V_COUNTOTHER.DERATE)/100,
                    'T');
  END LOOP;
  CLOSE C_COUNTOTHER;
  --移动台计费'820000'【1000MHz以下的无线电台(移动电台)】
  V_FLAG := 'N';
  OPEN C_COUNTMOBILE;
  LOOP
    FETCH C_COUNTMOBILE INTO V_COUNTMOBILE;
    EXIT WHEN C_COUNTMOBILE%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode :=V_COUNTMOBILE.apply_code;
      v_declcode :=V_COUNTMOBILE.decl_code;
      V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='820000';
      --取出收费标准
    ELSIF v_applycode=V_COUNTMOBILE.apply_code and v_declcode=V_COUNTMOBILE.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
    ELSE
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '820000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_AMOUNT := 1;
      v_applycode :=V_COUNTMOBILE.apply_code;
      v_declcode :=V_COUNTMOBILE.decl_code;
      V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '820000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --有线电视传输（MMDS）计费'930000'
  V_FLAG := 'N';
  OPEN C_COUNTMMDS;
  LOOP
    FETCH C_COUNTMMDS INTO V_COUNTMMDS;
    EXIT WHEN C_COUNTMMDS%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNTMMDS.APPLY_CODE;
      V_DECLCODE := V_COUNTMMDS.DECL_CODE;
      V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
      V_BANDWIDTH := nvl(V_COUNTMMDS.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNTMMDS.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='930000';
      --取出收费标准
    ELSIF V_APPLYCODE = V_COUNTMMDS.APPLY_CODE and V_DECLCODE = V_COUNTMMDS.DECL_CODE THEN
    --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNTMMDS.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+nvl(V_COUNTMMDS.CHAN_DIST,1);
        V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
      end if;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '930000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_BANDWIDTH := nvl(V_COUNTMMDS.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNTMMDS.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNTMMDS.APPLY_CODE;
      V_DECLCODE := V_COUNTMMDS.DECL_CODE;
      V_FREQEMIT:= V_COUNTMMDS.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE C_COUNTMMDS;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '930000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --无线接入1.8G '120200'
  V_FLAG := 'N';
  OPEN C_COUNT1G8;
  LOOP
    FETCH C_COUNT1G8 INTO V_COUNT1G8;
    EXIT WHEN C_COUNT1G8%NOTFOUND;
    --
    --取出收费标准
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120200';
    --第一条记录
    V_AMOUNT := 1;
    --记录累加
    V_APPLYCODE:= V_COUNT1G8.APPLY_CODE;
    V_DECLCODE := V_COUNT1G8.DECL_CODE;
    V_DERATE := V_COUNT1G8.DERATE;
    --取出减免比例
    --
    --获取申请表编号和技术资料表编号
    ApplyCode_Temp := V_COUNT1G8.APPLY_CODE;----申请表编号转化后的（T500020150005转化为500020150005）
    ApplyType_Temp := 'T';----申请表类型T或PA
    DECL_CODE_Temp := V_COUNT1G8.DECL_CODE;---技术资料表编号
    ---
    --
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '120200',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_AMOUNT := 1;
      V_APPLYCODE:= V_COUNT1G8.APPLY_CODE;
      V_DECLCODE := V_COUNT1G8.DECL_CODE;
      V_DERATE := V_COUNT1G8.DERATE;
      --取出减免比例
    --
    /*
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120200';
      --第一条记录
      V_AMOUNT := 1;
      --记录累加
      V_APPLYCODE:= V_COUNT1G8.APPLY_CODE;
      V_DECLCODE := V_COUNT1G8.DECL_CODE;
      V_DERATE := V_COUNT1G8.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_APPLYCODE = V_COUNT1G8.APPLY_CODE and V_DECLCODE = V_COUNT1G8.DECL_CODE THEN
      V_AMOUNT := V_AMOUNT+1;
    ELSE
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '120200',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100);
      V_AMOUNT := 1;
      V_APPLYCODE:= V_COUNT1G8.APPLY_CODE;
      V_DECLCODE := V_COUNT1G8.DECL_CODE;
      V_DERATE := V_COUNT1G8.DERATE;
      --取出减免比例
    END IF;
    */
  END LOOP;
  CLOSE C_COUNT1G8;
  /*
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    INSERT INTO   T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '120200',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100);
  END IF;
  */
  --扩频系统2.4G计费'130100'
  V_FLAG := 'N';
  OPEN C_COUNT2G4;
  LOOP
    FETCH C_COUNT2G4 INTO V_COUNT2G4;
    EXIT WHEN C_COUNT2G4%NOTFOUND;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130100';
       ----数据记录合计数量
      SELECT count(*) INTO V_Count_kp2g4 FROM V_rim_rsm_FEE_KP2G4
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      X_Count_kp2g4 :=0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
      --
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
        --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_APPLYCODE = V_COUNT2G4.APPLY_CODE AND V_DECLCODE = V_COUNT2G4.DECL_CODE THEN
       X_Count_kp2g4 :=X_Count_kp2g4+1;
      --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT2G4.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
        --带宽累加，空值则默认为一个单位
      end if;
       ---记录累加
      V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      v_deptpay:= V_COUNT2G4.dept_pay;
      v_areacode:= V_COUNT2G4.area_code;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;

      --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;

      V_DERATE := V_COUNT2G4.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
       --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
     -- DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '130100',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      ---

      V_BANDWIDTH := nvl(V_COUNT2G4.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNT2G4.DERATE;
       --取出减免比例
      V_APPLYCODE:= V_COUNT2G4.APPLY_CODE;
      V_DECLCODE := V_COUNT2G4.DECL_CODE;
      V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_kp2g4 :=X_Count_kp2g4+1;
       --如果执行最后条记录
      IF X_Count_kp2g4=V_Count_kp2g4 THEN
         ---记录累加
          v_deptpay:= V_COUNT2G4.dept_pay;
          v_areacode:= V_COUNT2G4.area_code;
          V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT2G4.CHAN_DIST,1));

          --空值则默认为一个单位
          V_DERATE := V_COUNT2G4.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT2G4.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := substr(V_COUNT2G4.APPLY_CODE,0,length(V_COUNT2G4.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT2G4.DECL_CODE;---技术资料表编号
          --
          INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        ApplyCode_Temp,
                        DECL_CODE_Temp,
                        COUNTYEAR,
                        '130100',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      END IF;
    END IF;
     ---记录累加
    V_APPLYCODE := V_COUNT2G4.APPLY_CODE;
    V_DECLCODE := V_COUNT2G4.DECL_CODE;
    v_deptpay:= V_COUNT2G4.dept_pay;
    v_areacode:= V_COUNT2G4.area_code;
    V_FREQEMIT:= V_COUNT2G4.FREQ_EMIT;
    --
  END LOOP;
  CLOSE C_COUNT2G4;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '130100',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --扩频系统5.8G计费'130200'
  V_FLAG := 'N';
  OPEN  C_COUNT5G81;
  LOOP
    FETCH  C_COUNT5G81 INTO V_COUNT5G81;
    EXIT WHEN  C_COUNT5G81%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNT5G81.APPLY_CODE;
      V_DECLCODE := V_COUNT5G81.DECL_CODE;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
       --空值则默认为一个单位
      V_DERATE := V_COUNT5G81.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='130200';
      --取出收费标准
    ELSIF V_APPLYCODE = V_COUNT5G81.APPLY_CODE AND V_DECLCODE = V_COUNT5G81.DECL_CODE THEN
    --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT5G81.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G81.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
    ELSE
       V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
       ApplyType_Temp := 'T';----申请表类型T或PA
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '130200',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH := nvl(V_COUNT5G81.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G81.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNT5G81.APPLY_CODE;
      V_DECLCODE := V_COUNT5G81.DECL_CODE;
      V_FREQEMIT:= V_COUNT5G81.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNT5G81;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    ApplyType_Temp := 'T';--substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '130200',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --无线接入系统(3.5GHZ)计费'120300'
  V_FLAG := 'N';
  X_Count_ENTER3G5 :=0;
  V_BANDWIDTH :=0;
  OPEN  C_COUNT3G5;
  LOOP
    FETCH  C_COUNT3G5 INTO V_COUNT3G5;
    EXIT WHEN  C_COUNT3G5%NOTFOUND;
    IF V_FLAG = 'N' THEN
      --取出收费标准
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120300';
        ----数据记录合计数量
      SELECT count(*) INTO V_Count_ENTER3G5 FROM V_rim_rsm_FEE_ENTER3G5
              WHERE DEPT_PAY=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
                AND FREQ_EMIT>0;
      --第一条记录
      if X_Count_ENTER3G5 = 0 then
         X_Count_ENTER3G5 :=0;
      end if;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --第一条记录
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      if V_BANDWIDTH  =0 then
         V_BANDWIDTH :=0;
      end if;
      --计算发射频点
       V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
      V_DERATE := V_COUNT3G5.DERATE;
       --取出减免比例
      V_FLAG := 'Y';
    ELSIF V_APPLYCODE = V_COUNT3G5.APPLY_CODE AND V_DECLCODE = V_COUNT3G5.DECL_CODE THEN
      --同一个台站则带宽数据累计
       X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      --计算发射频点
      if V_FREQEMIT <> V_COUNT3G5.FREQ_EMIT then
         V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
        V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
       ---记录累加
      V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      v_deptpay:= V_COUNT3G5.dept_pay;
      v_areacode:= V_COUNT3G5.area_code;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH/3.5);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
        --获取申请表编号和技术资料表编号
      ApplyCode_Temp := Substr(V_COUNT3G5.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
      ApplyType_Temp := 'T';----申请表类型T或PA
      --
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH :=0;
      --计算发射频点
      V_BANDWIDTH :=  V_BANDWIDTH+CEIL(nvl(V_COUNT3G5.CHAN_DIST,3.5));
      --空值则默认为一个单位
      V_DERATE := V_COUNT3G5.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNT3G5.APPLY_CODE;
      V_DECLCODE := V_COUNT3G5.DECL_CODE;
      V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
      V_FLAG := 'N';
      V_AMOUNT := 0;
      X_Count_ENTER3G5 :=X_Count_ENTER3G5+1;
      if  X_Count_ENTER3G5 =V_Count_ENTER3G5 then
          ---记录累加
          v_deptpay:= V_COUNT3G5.dept_pay;
          v_areacode:= V_COUNT3G5.area_code;
          V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
          V_BANDWIDTH := CEIL(nvl(V_COUNT3G5.CHAN_DIST,1));

          --空值则默认为一个单位
          V_DERATE := V_COUNT3G5.DERATE;
          V_AMOUNT := CEIL(V_BANDWIDTH);
          IF NVL(V_AMOUNT,0)<=0 THEN
            V_AMOUNT:=1;
          END IF;
          --
          --获取申请表编号和技术资料表编号
          ApplyCode_Temp := Substr(V_COUNT3G5.APPLY_CODE,-12,12);----申请表编号转化后的（T500020150005转化为500020150005）
          ApplyType_Temp := 'T';--substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
          DECL_CODE_Temp := V_COUNT3G5.DECL_CODE;---技术资料表编号
          --
          INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        ApplyCode_Temp,
                        DECL_CODE_Temp,
                        COUNTYEAR,
                        '120300',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
          --
      end if;
      --
    END IF;
     ---记录累加
    V_APPLYCODE := V_COUNT3G5.APPLY_CODE;
    V_DECLCODE := V_COUNT3G5.DECL_CODE;
    v_deptpay:= V_COUNT3G5.dept_pay;
    v_areacode:= V_COUNT3G5.area_code;
    V_FREQEMIT:= V_COUNT3G5.FREQ_EMIT;
    --
  END LOOP;
  CLOSE  C_COUNT3G5;
  IF V_FLAG = 'Y' THEN
   --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH/4);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    ApplyType_Temp := 'T';--substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '120300',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  --无线接入系统(5.8GHZ)----暂时不计费
  --无线接入系统(5.8GHZ)计费'120400'
  V_FLAG := 'N';
  OPEN  C_COUNT5G82;
  LOOP
    FETCH  C_COUNT5G82 INTO V_COUNT5G82;
    EXIT WHEN  C_COUNT5G82%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNT5G82.APPLY_CODE;
      V_DECLCODE := V_COUNT5G82.DECL_CODE;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
       --空值则默认为一个单位
      V_DERATE := V_COUNT5G82.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='120400';
      --取出收费标准
    ELSIF V_APPLYCODE = V_COUNT5G82.APPLY_CODE AND V_DECLCODE = V_COUNT5G82.DECL_CODE THEN
    --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT5G82.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT5G82.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
    ELSE
       V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
       ApplyType_Temp := 'T';----申请表类型T或PA
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '120400',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        ApplyType_Temp);
      V_BANDWIDTH := nvl(V_COUNT5G82.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNT5G82.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNT5G82.APPLY_CODE;
      V_DECLCODE := V_COUNT5G82.DECL_CODE;
      V_FREQEMIT:= V_COUNT5G82.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNT5G82;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    ApplyType_Temp := 'T';--substr(V_COUNT3G5.APPLY_CODE,0,length(V_COUNT3G5.APPLY_CODE)-12);----申请表类型T或PA
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '120400',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      ApplyType_Temp);
  END IF;
  ----雷达站10G以下计费'910000'(按照微波站收费，重庆需求)
  V_FLAG := 'N';
  OPEN  C_COUNTR10GDOWN;
  LOOP
    FETCH  C_COUNTR10GDOWN INTO V_COUNTR10GDOWN;
    EXIT WHEN  C_COUNTR10GDOWN%NOTFOUND;

    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNTR10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
       --空值则默认为一个单位
      V_DERATE := V_COUNTR10GDOWN.DERATE;
       --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='910000';
      --取出收费标准
    ELSIF V_APPLYCODE = V_COUNTR10GDOWN.APPLY_CODE AND V_DECLCODE = V_COUNTR10GDOWN.DECL_CODE THEN
    --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNTR10GDOWN.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GDOWN.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_BANDWIDTH := nvl(V_COUNTR10GDOWN.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNTR10GDOWN.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNTR10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GDOWN.DECL_CODE;
      V_FREQEMIT:= V_COUNTR10GDOWN.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNTR10GDOWN;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '910000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  -----雷达站10G以上计费'920000'(按照微波站收费，重庆需求)
  V_FLAG := 'N';
  OPEN  C_COUNTR10GUP;
  LOOP
    FETCH  C_COUNTR10GUP INTO V_COUNTR10GUP;
    EXIT WHEN  C_COUNTR10GUP%NOTFOUND;

    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNTR10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNTR10GUP.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='920000';
       --取出收费标准
    ELSIF V_APPLYCODE = V_COUNTR10GUP.APPLY_CODE AND V_DECLCODE = V_COUNTR10GUP.DECL_CODE THEN
    --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNTR10GUP.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNTR10GUP.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_BANDWIDTH := nvl(V_COUNTR10GUP.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNTR10GUP.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNTR10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNTR10GUP.DECL_CODE;
      V_FREQEMIT:= V_COUNTR10GUP.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNTR10GUP;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '920000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --微波站10G以下计费'910000'
  V_FLAG := 'N';
  OPEN  C_COUNT10GDOWN;
  LOOP
    FETCH  C_COUNT10GDOWN INTO V_COUNT10GDOWN;
    EXIT WHEN  C_COUNT10GDOWN%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNT10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNT10GDOWN.DECL_CODE;
      V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
      --V_BANDWIDTH := nvl(V_COUNT10GDOWN.CHAN_DIST,1);
       V_BANDWIDTH := CEIL(V_COUNT10GDOWN.CHAN_DIST);
       --空值则默认为一个单位
      V_DERATE := V_COUNT10GDOWN.DERATE;
       --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='910000';
      --取出收费标准
    ELSIF V_APPLYCODE = V_COUNT10GDOWN.APPLY_CODE AND V_DECLCODE = V_COUNT10GDOWN.DECL_CODE THEN

       V_BANDWIDTH := V_BANDWIDTH+CEIL(V_COUNT10GDOWN.CHAN_DIST);
       V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
       /*
       if V_FREQEMIT <> V_COUNT10GDOWN.FREQ_EMIT then
           V_BANDWIDTH := V_BANDWIDTH+CEIL(V_COUNT10GDOWN.CHAN_DIST);
           V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
       end if;
       */

    --同一个台站则带宽数据累计

      --if V_FREQEMIT <> V_COUNT10GDOWN.FREQ_EMIT then
       -- V_BANDWIDTH := V_BANDWIDTH+nvl(V_COUNT10GDOWN.CHAN_DIST,1);
         --V_BANDWIDTH := V_BANDWIDTH+CEIL(V_COUNT10GDOWN.CHAN_DIST);
        --V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
     -- end if;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '910000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_BANDWIDTH := nvl(V_COUNT10GDOWN.CHAN_DIST,1);
       --空值则默认为一个单位
      V_DERATE := V_COUNT10GDOWN.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNT10GDOWN.APPLY_CODE;
      V_DECLCODE := V_COUNT10GDOWN.DECL_CODE;
      V_FREQEMIT:= V_COUNT10GDOWN.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNT10GDOWN;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '910000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  ------微波站10G以上计费'920000'
  V_FLAG := 'N';
  OPEN  C_COUNT10GUP;
  LOOP
    FETCH  C_COUNT10GUP INTO V_COUNT10GUP;
    EXIT WHEN  C_COUNT10GUP%NOTFOUND;

    IF V_FLAG = 'N' THEN
    --第一条记录
      V_APPLYCODE:= V_COUNT10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNT10GUP.DECL_CODE;
      V_FREQEMIT:= V_COUNT10GUP.FREQ_EMIT;
      V_BANDWIDTH := CEIL(nvl(V_COUNT10GUP.CHAN_DIST,1));
      --空值则默认为一个单位
      V_DERATE := V_COUNT10GUP.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='920000';
       --取出收费标准
    ELSIF V_APPLYCODE = V_COUNT10GUP.APPLY_CODE AND V_DECLCODE = V_COUNT10GUP.DECL_CODE THEN
    --同一个台站则带宽数据累计
      if V_FREQEMIT <> V_COUNT10GUP.FREQ_EMIT then
        V_BANDWIDTH := V_BANDWIDTH+CEIL(nvl(V_COUNT10GUP.CHAN_DIST,1));
        V_FREQEMIT:= V_COUNT10GUP.FREQ_EMIT;
      --带宽累加，空值则默认为一个单位
      end if;
    ELSE
      V_AMOUNT := CEIL(V_BANDWIDTH);
      IF V_AMOUNT<=0 THEN
        V_AMOUNT:=1;
      END IF;
      INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                      AREA_CODE,
                      APPLY_CODE,
                      decl_code,
                      COUNT_YEAR,
                      ITEM_CODE,
                      DERATE,
                      AMOUNT,
                      SUM_COUNT,
                      SUM_PAY,
                      APPLYTYPE)
                  VALUES (DEPTCODE,
                        areacode,
                        v_applycode,
                        v_declcode,
                        COUNTYEAR,
                        '920000',
                        V_DERATE,
                        V_AMOUNT,
                        V_AMOUNT*V_FEE,
                        V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                        'T');
      V_BANDWIDTH := nvl(V_COUNT10GUP.CHAN_DIST,1);
      --空值则默认为一个单位
      V_DERATE := V_COUNT10GUP.DERATE;
      --取出减免比例
      V_APPLYCODE:= V_COUNT10GUP.APPLY_CODE;
      V_DECLCODE := V_COUNT10GUP.DECL_CODE;
      V_FREQEMIT:= V_COUNT10GUP.FREQ_EMIT;
    END IF;
  END LOOP;
  CLOSE  C_COUNT10GUP;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
    V_AMOUNT := CEIL(V_BANDWIDTH);
    IF V_AMOUNT<=0 THEN
      V_AMOUNT:=1;
    END IF;
    INSERT INTO  T_RIM_RSM_PAY_DEPTITEM  (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode,
                      v_declcode,
                      COUNTYEAR,
                      '920000',
                      V_DERATE,
                      V_AMOUNT,
                      V_AMOUNT*V_FEE,
                      V_AMOUNT*V_FEE*(100-V_DERATE)/100,
                      'T');
  END IF;
  --地球站计费'100100'
  V_FLAG := 'N';
  OPEN  C_COUNTEARTH;
  LOOP
    FETCH  C_COUNTEARTH INTO V_COUNTEARTH;
    EXIT WHEN  C_COUNTEARTH%NOTFOUND;
    IF V_FLAG = 'N' THEN
    V_AMOUNT := CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0));
    V_AMOUNT1:= CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0));
    --记录累加
      v_applycode1 :=V_COUNTEARTH.apply_code;
      v_declcode1 :=V_COUNTEARTH.decl_code;
      V_DERATE := V_COUNTEARTH.DERATE;
      V_FLAG := 'Y';
      SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='100100';
    ELSIF v_applycode1=V_COUNTEARTH.apply_code and v_declcode1=V_COUNTEARTH.decl_code THEN
        --深圳地球站缴费按照发射必要带宽计费，如必要带宽0.8MHz，数量就是0.8
     V_AMOUNT := CEIL( NVL(V_COUNTEARTH.ASSI_BAND,0));
     V_AMOUNT1:=V_AMOUNT1+V_AMOUNT;
    SELECT FEE_PAY INTO V_FEE FROM rsbt_FEESTANDERD WHERE ITEM_CODE='100100';
   -- V_AMOUNT := CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0)); --2013年以前计费的版本 地球站是以发射总带宽计费，且按取最大整数来算数量，函数CEIL
    IF V_AMOUNT<=0 THEN
       V_AMOUNT:=1;
       --V_AMOUNT:=0;
    END IF;
     ELSE
    INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode1,
                      v_declcode1,
                      COUNTYEAR,
                      '100100',
                      V_DERATE,
                      V_AMOUNT1,
                      V_AMOUNT1*V_FEE,
                      V_AMOUNT1*V_FEE*(100-V_DERATE)/100,
                      'T');
      V_AMOUNT :=  CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0));
      V_AMOUNT1:=  CEIL(NVL(V_COUNTEARTH.ASSI_BAND,0));
      v_applycode1 :=V_COUNTEARTH.apply_code;
      v_declcode1 :=V_COUNTEARTH.decl_code;
       V_DERATE := V_COUNTEARTH.DERATE;
 end if;
  END LOOP;
  CLOSE  C_COUNTEARTH;
  IF V_FLAG = 'Y' THEN
  INSERT INTO T_RIM_RSM_PAY_DEPTITEM (DEPT_PAY,
                    AREA_CODE,
                    APPLY_CODE,
                    decl_code,
                    COUNT_YEAR,
                    ITEM_CODE,
                    DERATE,
                    AMOUNT,
                    SUM_COUNT,
                    SUM_PAY,
                    APPLYTYPE)
                VALUES (DEPTCODE,
                      areacode,
                      v_applycode1,
                      v_declcode1,
                      COUNTYEAR,
                      '100100',
                     V_DERATE,
                      V_AMOUNT1,
                      V_AMOUNT1*V_FEE,
                      V_AMOUNT1*V_FEE*(100-V_DERATE)/100,
                      'T');
  end if;
/*
  -----------------------设备检测费用-----------------------------------
   --无线寻呼系统(设备检测费)'112000' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTPB_EQUCHECK;
     LOOP
      FETCH C_COUNTPB_EQUCHECK INTO V_COUNTPB_EQUCHECK;
      EXIT WHEN C_COUNTPB_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='112000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTPB_EQUCHECK.APPLY_CODE,
                    V_COUNTPB_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTPB_EQUCHECK;
   END IF;
      --集群无线调度系统(设备检测费)'113000' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTJQ_EQUCHECK;
     LOOP
      FETCH C_COUNTJQ_EQUCHECK INTO V_COUNTJQ_EQUCHECK;
      EXIT WHEN C_COUNTJQ_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='113000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTJQ_EQUCHECK.APPLY_CODE,
                    V_COUNTJQ_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTJQ_EQUCHECK;
   END IF;
     --无绳电话(设备检测费)'114000' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTLINELESS_EQUCHECK;
     LOOP
      FETCH C_COUNTLINELESS_EQUCHECK INTO V_COUNTLINELESS_EQUCHECK;
      EXIT WHEN C_COUNTLINELESS_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='114000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTLINELESS_EQUCHECK.APPLY_CODE,
                    V_COUNTLINELESS_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);

     END LOOP;
   CLOSE C_COUNTLINELESS_EQUCHECK;
   END IF;
  --电视(设备检测费)'115000' /广东省 20130125
  IF  areacode='440300' THEN
   V_FLAG := 'N';
   OPEN C_COUNTBT_EQUCHECK;
     LOOP
      FETCH C_COUNTBT_EQUCHECK INTO V_COUNTBT_EQUCHECK;
      EXIT WHEN C_COUNTBT_EQUCHECK%NOTFOUND;
      IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTBT_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBT_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      V_ITEMCODE:='115000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSIF v_applycode1=V_COUNTBT_EQUCHECK.apply_code and v_declcode1=V_COUNTBT_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSE
          INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTBT_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBT_EQUCHECK.decl_code;
    END IF;
     END LOOP;
   CLOSE C_COUNTBT_EQUCHECK;
    IF V_FLAG = 'Y' THEN
    INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      END IF;
   END IF;
    --广播电台(设备检测费)'' /广东省 20130125
  IF  areacode='440300' THEN
   V_FLAG := 'N';
   OPEN C_COUNTBC_EQUCHECK;
     LOOP
      FETCH C_COUNTBC_EQUCHECK INTO V_COUNTBC_EQUCHECK;
      EXIT WHEN C_COUNTBC_EQUCHECK%NOTFOUND;
      IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTBC_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBC_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      V_ITEMCODE:='116000';
       SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSIF v_applycode1=V_COUNTBC_EQUCHECK.apply_code and v_declcode1=V_COUNTBC_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSE
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTBC_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTBC_EQUCHECK.decl_code;
      END IF;
     END LOOP;
   CLOSE C_COUNTBC_EQUCHECK;
    IF V_FLAG = 'Y' THEN
      INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
       END IF;
   END IF;
    --1000MHz以下的无线电台（固定台）'117000' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTOTHER_EQUCHECK;
     LOOP
      FETCH C_COUNTOTHER_EQUCHECK INTO V_COUNTOTHER_EQUCHECK;
      EXIT WHEN C_COUNTOTHER_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='117000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTOTHER_EQUCHECK.APPly_CODE,
                    V_COUNTOTHER_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTOTHER_EQUCHECK;
   END IF;
    --1000MHz以下的无线电台（移动台）'118000' /广东省 20130125
    IF  areacode='440300' THEN
   V_FLAG := 'N';
  OPEN C_COUNTMOBILE_EQUCHECK;
  LOOP
    FETCH C_COUNTMOBILE_EQUCHECK INTO V_COUNTMOBILE_EQUCHECK;
    EXIT WHEN C_COUNTMOBILE_EQUCHECK%NOTFOUND;
    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTMOBILE_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      --车载台收费代码111121，手持台或其它收费LS代码118000
      if V_COUNTMOBILE_EQUCHECK.Stat_Type='LC' THEN
      V_ITEMCODE:='111121';
      ELSE
      V_ITEMCODE:='118000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      --取出收费标准
    ELSIF v_applycode1=V_COUNTMOBILE_EQUCHECK.apply_code and v_declcode1=V_COUNTMOBILE_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
        if V_COUNTMOBILE_EQUCHECK.Stat_Type='LC' THEN
      V_ITEMCODE:='111121';
      ELSE
      V_ITEMCODE:='118000';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
    ELSE
       INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNTMOBILE_EQUCHECK.decl_code;
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE_EQUCHECK;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
   INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
  END IF;
 END IF;
  --微波站计费(设备检测费)'' /广东省 20130125
  IF  areacode='440300' THEN
  V_FLAG := 'N';
   OPEN C_COUNT10G_EQUCHECK;
     LOOP
      FETCH C_COUNT10G_EQUCHECK INTO V_COUNT10G_EQUCHECK;
      EXIT WHEN C_COUNT10G_EQUCHECK%NOTFOUND;
       IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNT10G_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNT10G_EQUCHECK.decl_code;
      V_FLAG := 'Y';
      V_ITEMCODE:='119000';
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      ELSIF v_applycode1=V_COUNT10G_EQUCHECK.apply_code and v_declcode1=V_COUNT10G_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
        ELSE
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                   v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_AMOUNT*V_FEE);
                     V_AMOUNT := 1;
      v_applycode1 :=V_COUNT10G_EQUCHECK.apply_code;
      v_declcode1 :=V_COUNT10G_EQUCHECK.decl_code;
      END IF;
     END LOOP;
   CLOSE C_COUNT10G_EQUCHECK;
    IF V_FLAG = 'Y' THEN
      INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                   v_applycode1,
                    v_declcode1,
                    V_AMOUNT,
                    V_AMOUNT*V_FEE);
    END IF;
   END IF;
     --MMDS计费(设备检测费)'111200' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTMMDS_EQUCHECK;
     LOOP
      FETCH C_COUNTMMDS_EQUCHECK INTO V_COUNTMMDS_EQUCHECK;
      EXIT WHEN C_COUNTMMDS_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111200';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTMMDS_EQUCHECK.Apply_Code,
                    V_COUNTMMDS_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTMMDS_EQUCHECK;
   END IF;
  --地球站计费(设备检测费)'' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTEARTH_EQUCHECK;
     LOOP
      FETCH C_COUNTEARTH_EQUCHECK INTO V_COUNTEARTH_EQUCHECK;
      EXIT WHEN C_COUNTEARTH_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111300';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTEARTH_EQUCHECK.Apply_Code,
                    V_COUNTEARTH_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTEARTH_EQUCHECK;
   END IF;
  --无线接入系统（1.8GHz-1.9GHz）(设备检测费)'111400' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNT1G8_EQUCHECK;
     LOOP
      FETCH C_COUNT1G8_EQUCHECK INTO V_COUNT1G8_EQUCHECK;
      EXIT WHEN C_COUNT1G8_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111400';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNT1G8_EQUCHECK.Apply_Code,
                    V_COUNT1G8_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNT1G8_EQUCHECK;
   END IF;
    --扩频系统（2.4GHz）(设备检测费)'111500' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNT2G4_EQUCHECK;
     LOOP
      FETCH C_COUNT2G4_EQUCHECK INTO V_COUNT2G4_EQUCHECK;
      EXIT WHEN C_COUNT2G4_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111500';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNT2G4_EQUCHECK.Apply_Code,
                    V_COUNT2G4_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNT2G4_EQUCHECK;
   END IF;
     --扩频系统（5.8GHz）(设备检测费)'111600' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNT5G81_EQUCHECK;
     LOOP
      FETCH C_COUNT5G81_EQUCHECK INTO V_COUNT5G81_EQUCHECK;
      EXIT WHEN C_COUNT5G81_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111600';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNT5G81_EQUCHECK.Apply_Code,
                    V_COUNT5G81_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNT5G81_EQUCHECK;
   END IF;
  --无线数据(设备检测费)'111700' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTDATA_EQUCHECK;
     LOOP
      FETCH C_COUNTDATA_EQUCHECK INTO V_COUNTDATA_EQUCHECK;
      EXIT WHEN C_COUNTDATA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111700';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTDATA_EQUCHECK.APPLY_CODE,
                    V_COUNTDATA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTDATA_EQUCHECK;
   END IF;
    --GSM(设备检测费)'111800' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTGSM_EQUCHECK;
     LOOP
      FETCH C_COUNTGSM_EQUCHECK INTO V_COUNTGSM_EQUCHECK;
      EXIT WHEN C_COUNTGSM_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTGSM_EQUCHECK.APPLY_CODE,
                    V_COUNTGSM_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTGSM_EQUCHECK;
   END IF;
       --CDMA(设备检测费)'111800' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTCDMA_EQUCHECK;
     LOOP
      FETCH C_COUNTCDMA_EQUCHECK INTO V_COUNTCDMA_EQUCHECK;
      EXIT WHEN C_COUNTCDMA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTCDMA_EQUCHECK.APPLY_CODE,
                    V_COUNTCDMA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTCDMA_EQUCHECK;
   END IF;
          --WCDMS(设备检测费)'111800' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTWCDMA_EQUCHECK;
     LOOP
      FETCH C_COUNTWCDMA_EQUCHECK INTO V_COUNTWCDMA_EQUCHECK;
      EXIT WHEN C_COUNTWCDMA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTWCDMA_EQUCHECK.APPLY_CODE,
                    V_COUNTWCDMA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTWCDMA_EQUCHECK;
   END IF;
             --TDSCDMS(设备检测费)'111800' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTTDSCDMA_EQUCHECK;
     LOOP
      FETCH C_COUNTTDSCDMA_EQUCHECK INTO V_COUNTTDSCDMA_EQUCHECK;
      EXIT WHEN C_COUNTTDSCDMA_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111800';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUCHECKITEM(dept_pay,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTTDSCDMA_EQUCHECK.APPLY_CODE,
                    V_COUNTTDSCDMA_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTTDSCDMA_EQUCHECK;
   END IF;
  --------------------------------------------------------------------
  */
  COMMIT;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEEITEM_EQUAPP_PA
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEEITEM_EQUAPP_PA"(COUNTYEAR NUMBER,APPLYCODE varchar2)
IS
--------设备检测费----------------------------------------------------

 --寻呼系统(设备检测费)'112000' /广东省 20130125
  CURSOR C_COUNTPB_EQUCHECK IS SELECT  * FROM v_rim_rsm_fee_EQUCHECK_pb_PA
              WHERE apply_code=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTPB_EQUCHECK C_COUNTPB_EQUCHECK%ROWTYPE;
    --地球站(设备检测费)'111300' /广东省 20130125
  CURSOR C_COUNTEARTH_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_e_PA
              WHERE apply_code=APPLYCODE
                AND begin_YEAR=COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTEARTH_EQUCHECK  C_COUNTEARTH_EQUCHECK%ROWTYPE;
   --其它固定台(设备检测费)'117000'/广东省 20130125
  CURSOR C_COUNTOTHER_EQUCHECK IS SELECT * FROM V_RIM_RSM_FEE_EQUC_OTHER_PA
              WHERE apply_code=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTOTHER_EQUCHECK C_COUNTOTHER_EQUCHECK%ROWTYPE;
   --移动台(设备检测费)'118000'/广东省 20130125
  CURSOR C_COUNTMOBILE_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equc_mobile_PA
                WHERE apply_code=APPLYCODE
                AND begin_YEAR=COUNTYEAR;
  V_COUNTMOBILE_EQUCHECK C_COUNTMOBILE_EQUCHECK%ROWTYPE;

------------------------------------------------------------------------

   V_AREACODE1 VARCHAR2(6);
  V_APPLYCODE1 VARCHAR2(14);
  --申请表编号
  V_DECLCODE VARCHAR2(6);
   --技术资料表编号
  V_AMOUNT NUMBER;
  --数量
  V_FEE NUMBER;
   --无绳电话的收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
BEGIN
  DELETE FROM T_RIM_RSM_PAY_EQUPA_APPLYITEM WHERE apply_code=APPLYCODE  AND COUNT_YEAR=COUNTYEAR;
 V_AREACODE1:=SUBSTR(substr(substr(APPLYCODE,-12,12),0,4),1,4)||'00';
  -----------------------设备检测费用-----------------------------------
   --无线寻呼系统(设备检测费)'112000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTPB_EQUCHECK;
     LOOP
      FETCH C_COUNTPB_EQUCHECK INTO V_COUNTPB_EQUCHECK;
      EXIT WHEN C_COUNTPB_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='112000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTPB_EQUCHECK.Id_Card,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTPB_EQUCHECK.APPLY_CODE,
                    V_COUNTPB_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTPB_EQUCHECK;
   END IF;
    --1000MHz以下的无线电台（固定台）'117000' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTOTHER_EQUCHECK;
     LOOP
      FETCH C_COUNTOTHER_EQUCHECK INTO V_COUNTOTHER_EQUCHECK;
      EXIT WHEN C_COUNTOTHER_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='117000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTOTHER_EQUCHECK.Id_Card,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTOTHER_EQUCHECK.APPly_CODE,
                    V_COUNTOTHER_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTOTHER_EQUCHECK;
   END IF;
    --1000MHz以下的无线电台（移动台）'118000' /广东省 20130125
    IF  V_AREACODE1='440300' THEN
   V_FLAG := 'N';
  OPEN C_COUNTMOBILE_EQUCHECK;
  LOOP
    FETCH C_COUNTMOBILE_EQUCHECK INTO V_COUNTMOBILE_EQUCHECK;
    EXIT WHEN C_COUNTMOBILE_EQUCHECK%NOTFOUND;

    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode :=V_COUNTMOBILE_EQUCHECK.decl_code;
      --V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
       --车载台或其它收费LC收费代码111121，手持台LS代码118000
      if V_COUNTMOBILE_EQUCHECK.Stat_Type='LS' THEN
      V_ITEMCODE:='118000';
      ELSE
      V_ITEMCODE:='111121';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      --取出收费标准
    ELSIF v_applycode1=V_COUNTMOBILE_EQUCHECK.apply_code and v_declcode=V_COUNTMOBILE_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
       if V_COUNTMOBILE_EQUCHECK.Stat_Type='LS' THEN
      V_ITEMCODE:='118000';
      ELSE
      V_ITEMCODE:='111121';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
    ELSE
       INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTMOBILE_EQUCHECK.Id_Card,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                   v_declcode,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode :=V_COUNTMOBILE_EQUCHECK.decl_code;
      --V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE_EQUCHECK;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
   INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTMOBILE_EQUCHECK.Id_Card,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                     v_applycode1,
                   v_declcode,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
  END IF;
 END IF;
  --地球站计费(设备检测费)'' /广东省 20130125
  IF  V_AREACODE1='440300' THEN
   OPEN C_COUNTEARTH_EQUCHECK;
     LOOP
      FETCH C_COUNTEARTH_EQUCHECK INTO V_COUNTEARTH_EQUCHECK;
      EXIT WHEN C_COUNTEARTH_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111300';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUPA_APPLYITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (V_COUNTEARTH_EQUCHECK.Id_Card,
                    V_AREACODE1,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTEARTH_EQUCHECK.Apply_Code,
                    V_COUNTEARTH_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTEARTH_EQUCHECK;
   END IF;
----------------------------------------------------------
  COMMIT;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_FEEITEM_EQUDEPT_PA
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_FEEITEM_EQUDEPT_PA"(COUNTYEAR NUMBER,DEPTCODE varchar2,areacode varchar2)
IS
--------设备检测费----------------------------------------------------

 --寻呼系统(设备检测费)'112000' /广东省 20130125
  CURSOR C_COUNTPB_EQUCHECK IS SELECT  * FROM v_rim_rsm_fee_EQUCHECK_pb_PA
              WHERE id_card=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTPB_EQUCHECK C_COUNTPB_EQUCHECK%ROWTYPE;
    --地球站(设备检测费)'111300' /广东省 20130125
  CURSOR C_COUNTEARTH_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equcheck_e_PA
              WHERE id_card=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTEARTH_EQUCHECK  C_COUNTEARTH_EQUCHECK%ROWTYPE;
   --其它固定台(设备检测费)'117000'/广东省 20130125
  CURSOR C_COUNTOTHER_EQUCHECK IS SELECT * FROM V_RIM_RSM_FEE_EQUC_OTHER_PA
              WHERE id_card=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR;
  V_COUNTOTHER_EQUCHECK C_COUNTOTHER_EQUCHECK%ROWTYPE;
   --移动台(设备检测费)'118000'/广东省 20130125
  CURSOR C_COUNTMOBILE_EQUCHECK IS SELECT * FROM v_rim_rsm_fee_equc_mobile_PA
              WHERE id_card=DEPTCODE
                AND area_code=areacode
                AND begin_YEAR<COUNTYEAR
              ORDER BY apply_code,decl_code;
  V_COUNTMOBILE_EQUCHECK C_COUNTMOBILE_EQUCHECK%ROWTYPE;
-----------------------------------------------------------------------
  V_APPLYCODE1 VARCHAR2(14);
  --申请表编号
  V_DECLCODE VARCHAR2(6);
   --技术资料表编号
  V_AMOUNT NUMBER;
  --数量
  V_FEE NUMBER;
   --无绳电话的收费标准
  V_ITEMCODE VARCHAR2(10);
  V_FLAG VARCHAR2(1);
BEGIN
  DELETE FROM T_RIM_RSM_PAY_EQUPADEPTITEM WHERE IDENTIFICATION_CARD=DEPTCODE and area_code=areacode AND COUNT_YEAR=COUNTYEAR;
  -----------------------设备检测费用-----------------------------------
   --无线寻呼系统(设备检测费)'112000' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTPB_EQUCHECK;
     LOOP
      FETCH C_COUNTPB_EQUCHECK INTO V_COUNTPB_EQUCHECK;
      EXIT WHEN C_COUNTPB_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='112000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUPADEPTITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTPB_EQUCHECK.APPLY_CODE,
                    V_COUNTPB_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTPB_EQUCHECK;
   END IF;
    --1000MHz以下的无线电台（固定台）'117000' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTOTHER_EQUCHECK;
     LOOP
      FETCH C_COUNTOTHER_EQUCHECK INTO V_COUNTOTHER_EQUCHECK;
      EXIT WHEN C_COUNTOTHER_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='117000';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUPADEPTITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTOTHER_EQUCHECK.APPly_CODE,
                    V_COUNTOTHER_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTOTHER_EQUCHECK;
   END IF;
    --1000MHz以下的无线电台（移动台）'118000' /广东省 20130125
    IF  areacode='440300' THEN
   V_FLAG := 'N';
  OPEN C_COUNTMOBILE_EQUCHECK;
  LOOP
    FETCH C_COUNTMOBILE_EQUCHECK INTO V_COUNTMOBILE_EQUCHECK;
    EXIT WHEN C_COUNTMOBILE_EQUCHECK%NOTFOUND;

    IF V_FLAG = 'N' THEN
    --第一条记录
      V_AMOUNT := 1;
       --记录累加
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode :=V_COUNTMOBILE_EQUCHECK.decl_code;
      --V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
      V_FLAG := 'Y';
       --车载台或其它收费LC收费代码111121，手持台LS代码118000
      if V_COUNTMOBILE_EQUCHECK.Stat_Type='LS' THEN
      V_ITEMCODE:='118000';
      ELSE
      V_ITEMCODE:='111121';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
      --取出收费标准
    ELSIF v_applycode1=V_COUNTMOBILE_EQUCHECK.apply_code and v_declcode=V_COUNTMOBILE_EQUCHECK.decl_code THEN
      V_AMOUNT := V_AMOUNT+1;
      if V_COUNTMOBILE_EQUCHECK.Stat_Type='LS' THEN
      V_ITEMCODE:='118000';
      ELSE
      V_ITEMCODE:='111121';
      END IF;
      SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
    ELSE
       INSERT INTO T_RIM_RSM_PAY_EQUPADEPTITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                   v_applycode1,
                   v_declcode,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
      V_AMOUNT := 1;
      v_applycode1 :=V_COUNTMOBILE_EQUCHECK.apply_code;
      v_declcode :=V_COUNTMOBILE_EQUCHECK.decl_code;
      --V_DERATE := V_COUNTMOBILE.DERATE;
      --取出减免比例
    END IF;
  END LOOP;
  CLOSE C_COUNTMOBILE_EQUCHECK;
  IF V_FLAG = 'Y' THEN
  --存在需要添加的记录结果
   INSERT INTO T_RIM_RSM_PAY_EQUPADEPTITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    v_applycode1,
                   v_declcode,
                    V_AMOUNT,
                    V_FEE*V_AMOUNT);
  END IF;
 END IF;
  --地球站计费(设备检测费)'' /广东省 20130125
  IF  areacode='440300' THEN
   OPEN C_COUNTEARTH_EQUCHECK;
     LOOP
      FETCH C_COUNTEARTH_EQUCHECK INTO V_COUNTEARTH_EQUCHECK;
      EXIT WHEN C_COUNTEARTH_EQUCHECK%NOTFOUND;
      V_ITEMCODE:='111300';
        SELECT FEE_PAY INTO V_FEE FROM t_rim_rsm_pay_equcheckstandard WHERE ITEM_CODE=V_ITEMCODE;
           INSERT INTO T_RIM_RSM_PAY_EQUPADEPTITEM(IDENTIFICATION_CARD,
                    area_code,
                    count_year,
                    item_code,
                    APPLY_CODE,
                    DECL_CODE,
                    amount,
                    sum_pay)
                VALUES (DEPTCODE,
                    areacode,
                    COUNTYEAR,
                    V_ITEMCODE,
                    V_COUNTEARTH_EQUCHECK.Apply_Code,
                    V_COUNTEARTH_EQUCHECK.DECL_CODE,
                    1,
                    V_FEE);
     END LOOP;
   CLOSE C_COUNTEARTH_EQUCHECK;
   END IF;
----------------------------------------------------------
  COMMIT;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_MVIEW_REFRESH
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_MVIEW_REFRESH"(ASSESSOR varchar)
IS
v_guid varchar2(36);
BEGIN
   v_guid:=sys_guid();
   insert into T_RIM_RSM_MVIEW_REFRESH_LOG (guid,Status,START_DATE,END_DATE,ASSESSOR) values(v_guid,'0',sysdate,sysdate,ASSESSOR);
   commit;
   dbms_mview.refresh('mv_rim_rsm_stat_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_freq_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_equ_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_ant_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_freq_equ_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_freq_ant_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_equ_ant_view','C');
   dbms_mview.refresh('mv_rim_rsm_stat_efa_view','C');
   update T_RIM_RSM_MVIEW_REFRESH_LOG set Status='1',end_date=sysdate where guid=v_guid;
   commit;
   exception when others then
   update T_RIM_RSM_MVIEW_REFRESH_LOG set Status='1',end_date=sysdate where guid=v_guid;
   commit;
END;

/

-- ----------------------------
-- Procedure structure for P_RIM_RSM_RECREATELINK
-- ----------------------------
CREATE OR REPLACE PROCEDURE "500000_FREQDB"."P_RIM_RSM_RECREATELINK"
IS
   v_tf_code varchar2(100);
   v_to_tf_code varchar2(100);
   v_net_guid varchar2(36);
   v_stat_guid_a varchar2(36);
   v_stat_guid_b varchar2(36);
   v_eaf_guid_a varchar2(36);
   v_eaf_guid_b varchar2(36);
   v_ant_guid varchar2(36);
   v_eaf_a_count number;
   v_eaf_b_count number;

   v_max_link number;
   v_min_link number;
   v_cLink number;
   v_linkIndex number;
   v_to_linkIndex number;

   v_freq_a  number;
   v_freq_b number;

   v_ant_count number;
   loopCount number;
   v_temp varchar2(36);

   CURSOR c_stat IS
          select guid,stat_app_type from rsbt_station t
          where --t.app_code='T500020120061' and stat_tdi='0049' and --t.guid='10188a40-6afd-4e03-95d8-8e013360c3f6' and --stat_tdi='0001' and
          t.stat_app_type ='TF' ;
   v_stat c_stat%ROWTYPE;
BEGIN
  OPEN c_stat;
  LOOP
    FETCH  c_stat INTO v_stat;
    EXIT WHEN c_stat%NOTFOUND;
       delete from rsbt_link l where l.station_guid_a=v_stat.guid or l.station_guid_b=v_stat.guid; --删除原链路
       select st.st_tf_code into v_tf_code from rsbt_station_t st where st.guid=v_stat.guid; --查找台站的站代号
       select s.guid into v_net_guid from rsbt_station s where s.guid=v_stat.guid;--查找通信网guid

       select count(0) into v_ant_count from rsbt_antfeed ant where ant.station_guid=v_stat.guid; --获取天线总数
       loopCount:=1;
       while loopCount<=v_ant_count loop
              select guid,at_ant_tfcode  into v_ant_guid, v_to_tf_code from (select rownum num,a.guid,ant.at_ant_tfcode from rsbt_antfeed a,rsbt_antfeed_t ant
                where a.guid=ant.guid and a.station_guid=v_stat.guid order by num)  where num=loopCount;
              --台站本身的索引数据
              select count(0) into v_eaf_a_count from rsbt_eaf eaf where eaf.ant_guid= v_ant_guid;

              --与通信对象通信的索引总数
              select count(a.guid) into v_eaf_b_count from rsbt_eaf a,rsbt_station b ,rsbt_freq c ,rsbt_freq_t d ,rsbt_station_t e
                     where a.station_guid=b.guid and a.freq_guid=c.guid and c.station_guid=b.guid and c.guid=d.guid and b.guid=e.guid
                           and d.ft_freq_tfcode is not null
                           and instr(','||trim(both ',' from d.ft_freq_tfcode)||',',','||v_tf_code||',')>0
                           and instr(','||v_to_tf_code||',',','||trim(both ',' from e.st_tf_code)||',')>0;

               EXIT WHEN v_eaf_b_count=0;--没有就找通信对象的索引数据就退出

               v_max_link:= v_eaf_a_count;
               if v_eaf_b_count>v_max_link then
                  v_max_link:=v_eaf_b_count;
               end if;
               v_min_link :=v_eaf_a_count;
               if v_eaf_b_count<v_min_link then
                  v_min_link:=v_eaf_b_count;
               end if;
               v_cLink:=1;
               v_linkIndex:=1;
               v_to_linkIndex:=1;
               while v_cLink<=v_max_link loop
                  if v_cLink <= v_min_link then
                        v_linkIndex := v_cLink;
                        v_to_linkIndex := v_cLink;
                    else
                        if v_eaf_a_count > v_eaf_b_count then
                            v_linkIndex := v_cLink;
                        else
                            v_to_linkIndex := v_cLink;
                        end if;
                    end if;
                    --台站本身的索引数据
                    select  guid ,station_guid,freq_efb into v_eaf_guid_a, v_stat_guid_a,v_freq_a  from (
                     select rownum num,eaf.guid,eaf.station_guid ,decode(f.freq_type,'0',f.freq_uc,'1',f.freq_efb) freq_efb from rsbt_eaf eaf ,rsbt_freq f
                            where eaf.freq_guid=f.guid and  eaf.ant_guid= v_ant_guid
                             order by rownum ) where num=v_linkIndex;

                    --与通信对象通信的索引数据
                    select guid ,station_guid , freq_efb into v_eaf_guid_b,v_stat_guid_b,v_freq_b   from (
                       select rownum num,a.guid ,a.station_guid,decode(c.freq_type,'0',c.freq_uc,'1',c.freq_efb)  freq_efb from rsbt_eaf a,rsbt_station b ,rsbt_freq c ,rsbt_freq_t d ,rsbt_station_t e
                          where a.station_guid=b.guid and a.freq_guid=c.guid and c.station_guid=b.guid and c.guid=d.guid and b.guid=e.guid
                            and d.ft_freq_tfcode is not null
                            and instr(','||trim(both ',' from d.ft_freq_tfcode)||',',','||v_tf_code||',')>0
                            and instr(','||v_to_tf_code||',',','||trim(both ',' from e.st_tf_code)||',')>0
                            order by rownum ) where num=v_to_linkIndex;

                    --如果频率B大于频率A，则台站A和台站B互换
                    if (v_freq_a < v_freq_b) then
                        v_temp:=v_stat_guid_a;
                        v_stat_guid_a:=  v_stat_guid_b;
                        v_stat_guid_b:=v_temp;

                        v_temp :=v_eaf_guid_a;
                        v_eaf_guid_a:=v_eaf_guid_b;
                        v_eaf_guid_b:=v_temp;
                    end if;
                    --插入到链路表
                    insert into rsbt_link (guid,net_guid_a,station_guid_a,guid_eaf_a,net_guid_b,station_guid_b,guid_eaf_b)
                           values(get_guid,v_net_guid,v_stat_guid_a,v_eaf_guid_a,v_net_guid,v_stat_guid_b,v_eaf_guid_b);

                     v_cLink:=v_cLink+1;
               end loop;

             loopCount:=loopCount+1;
       end loop;

    end loop;
    commit;
  CLOSE c_stat;
  exception when others then
            insert into recreateLink_errorlog values(v_stat.guid);
            commit;
END;
/

-- ----------------------------
-- Function structure for F_AILDM_GET_GUID
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_AILDM_GET_GUID"
    RETURN CHAR
IS
    v_guid              CHAR (36);
    v_guid_part_one     CHAR (8);
    v_guid_part_two     CHAR (4);
    v_guid_part_three   CHAR (4);
    v_guid_part_four    CHAR (4);
    v_guid_part_five    CHAR (12);
    --在Oracle中使用Guid
BEGIN
    SELECT SYS_GUID () INTO v_guid FROM DUAL;

    v_guid_part_one := SUBSTR (v_guid, 0, 8);
    v_guid_part_two := SUBSTR (v_guid, 8, 4);
    v_guid_part_three := SUBSTR (v_guid, 12, 4);
    v_guid_part_four := SUBSTR (v_guid, 16, 4);
    v_guid_part_five := SUBSTR (v_guid, 20, 12);
    v_guid :=
    CONCAT
    (CONCAT
     (CONCAT
      (CONCAT (CONCAT (CONCAT (CONCAT (CONCAT (v_guid_part_one,
                 '-'),
               v_guid_part_two
              ),
             '-'
            ),
           v_guid_part_three
          ),
         '-'
        ),
       v_guid_part_four
      ),
      '-'
     ),
     v_guid_part_five
    );
    RETURN (v_guid);
END F_AILDM_GET_GUID;
/

-- ----------------------------
-- Function structure for F_ANGLE2RADIAN
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_ANGLE2RADIAN"(d in number) return number is
 PI number :=3.141592653589793;
begin
return  d* PI/180.0;
end;
/

-- ----------------------------
-- Function structure for F_CONVERTDEFAULTDATE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_CONVERTDEFAULTDATE"(p_name in date) return date is
  v_Result date;
begin
  v_Result := p_name;
  if p_name = to_date('0001/01/01', 'yyyy/mm/dd') then
    v_Result := null;
  end if;
  return(v_Result);
end;
/

-- ----------------------------
-- Function structure for F_FORMATTOLONGTHDATE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_FORMATTOLONGTHDATE"(inDate in date) return varchar2 is
  OutDate varchar2(20);
begin
  OutDate := to_char(inDate, 'YYYY-MM-DD HH24:MI:SS');
  return(OutDate);
end;
/

-- ----------------------------
-- Function structure for F_FORMATTOSHORTDATE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_FORMATTOSHORTDATE"(inDate in date) return varchar2 is
  OutDate varchar2(20);
begin
  OutDate := to_char(inDate, 'YYYY-MM-DD');
  return(OutDate);
end;
/

-- ----------------------------
-- Function structure for F_GETDISTANCE
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_GETDISTANCE" (
   lat1 in  NUMBER,
   lng1  in NUMBER,
   lat2  in NUMBER,
   lng2  in NUMBER
)
   RETURN NUMBER
is
   earth_padius   NUMBER := 6378.137;
   radlat1        NUMBER := f_angle2Radian (lat1);
   radlat2        NUMBER := f_angle2Radian (lat2);
   a              NUMBER := radlat1 - radlat2;
   b              NUMBER := f_angle2Radian (lng1) - f_angle2Radian (lng2);
   s              NUMBER := 0;
BEGIN
   s :=
        2
      * ASIN (SQRT (  POWER (SIN (a / 2), 2)
                    + COS (radlat1) * COS (radlat2) * POWER (SIN (b / 2), 2)
                   )
             );
   s := s * earth_padius;
   s := ROUND (s * 10000) / 10000;
   RETURN s;
END;
/

-- ----------------------------
-- Function structure for F_GETFREQ
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_GETFREQ"(statGuid  VARCHAR2) return varchar2
is
 V_RET_CODE VARCHAR2(1000);
 v_freq_e varchar2(400);
 v_freq_r varchar2(400);
 CURSOR C_code IS select t.freq_type,t.freq_uc,t.freq_efb,t.freq_efe,
  t.freq_lc,t.freq_rfb,t.freq_rfe
   from RSBT_FREQ t where t.Station_Guid=statGuid;

  V_CODE C_code%ROWTYPE;
BEGIN
  V_RET_CODE:='';
  OPEN C_code;
     LOOP
       FETCH C_code INTO V_CODE;
       EXIT WHEN C_code%NOTFOUND;
         if V_CODE.FREQ_TYPE=0 then
            if nvl(V_CODE.FREQ_UC,'0')<>'0'and instr(','||v_freq_e||',',','||to_char(V_CODE.FREQ_UC,'FM999999990.0999')||',')<=0 then
               v_freq_e:=v_freq_e||','||to_char(V_CODE.FREQ_UC,'FM999999990.0999');
            end if;
            if nvl(V_CODE.FREQ_LC,'0')<>'0'and instr(','||v_freq_r||',',','||to_char(V_CODE.FREQ_LC,'FM999999990.0999')||',')<=0 then
               v_freq_r:=v_freq_r||','||to_char(V_CODE.FREQ_LC,'FM999999990.0999');
            end if;
         else
            if nvl(V_CODE.Freq_Efb,'0')<>'0'and instr(','||v_freq_e||',',','||to_char(V_CODE.Freq_Efb,'FM999999990.0999')||'-'||to_char(V_CODE.Freq_Efe,'FM999999990.0999')||',')<=0 then
               v_freq_e:=v_freq_e||','||to_char(V_CODE.Freq_Efb,'FM999999990.0999')||'-'||to_char(V_CODE.Freq_Efe,'FM999999990.0999');
            end if;
            if nvl(V_CODE.Freq_Rfb,'0')<>'0'and instr(','||v_freq_r||',',','||to_char(V_CODE.Freq_Rfb,'FM999999990.0999')||'-'||to_char(V_CODE.Freq_Rfe,'FM999999990.0999')||',')<=0 then
               v_freq_r:=v_freq_r||','||to_char(V_CODE.Freq_Rfb,'FM999999990.0999')||'-'||to_char(V_CODE.Freq_Rfe,'FM999999990.0999');
            end if;
         end if;
     END LOOP;
   CLOSE C_code;
   v_freq_e:=trim(leading ',' from v_freq_e);
    v_freq_r:=trim(leading ',' from v_freq_r);
   V_RET_CODE:='发射：'|| v_freq_e||';接收：'||v_freq_r;
   V_RET_CODE:=replace(V_RET_CODE,' ','');
   RETURN (V_RET_CODE);
END F_GetFreq;
/

-- ----------------------------
-- Function structure for F_GETMEMBER_CODE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_GETMEMBER_CODE"(appGuid  VARCHAR2) return varchar2
is
 V_RET_CODE VARCHAR2(400);

 CURSOR C_code IS select t.app_clubs_member_code from rsbt_appclubs t where t.app_guid=appGuid;

  V_CODE C_code%ROWTYPE;
BEGIN
  V_RET_CODE:='';
  OPEN C_code;
     LOOP
       FETCH C_code INTO V_CODE;
       EXIT WHEN C_code%NOTFOUND;
          V_RET_CODE:=V_RET_CODE||','||V_CODE.app_clubs_member_code;
     END LOOP;
   CLOSE C_code;
   V_RET_CODE:=trim(leading ',' from V_RET_CODE);
   RETURN (V_RET_CODE);
END F_GetMember_CODE;
/

-- ----------------------------
-- Function structure for F_GETPAYCOUNTYEAR_STRINGKM
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_GETPAYCOUNTYEAR_STRINGKM"(orgGuid  VARCHAR2) return varchar2
is
 V_RET_CODE VARCHAR2(400);

 CURSOR C_code IS     select distinct a.count_year from v_rim_rsm_pay_deptprint a,t_rim_rsm_pay_deptcount b where a.dept_pay=b.dept_pay and a.dept_pay=orgGuid;

  V_CODE C_code%ROWTYPE;
BEGIN
  V_RET_CODE:='';
  OPEN C_code;
     LOOP
       FETCH C_code INTO V_CODE;
       EXIT WHEN C_code%NOTFOUND;
          V_RET_CODE:=V_RET_CODE||','||V_CODE.count_year;
     END LOOP;
   CLOSE C_code;
   V_RET_CODE:=trim(leading ',' from V_RET_CODE);
   RETURN (V_RET_CODE);
END F_GetPayCountYear_stringkm;
/

-- ----------------------------
-- Function structure for F_GETROLENAME
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_GETROLENAME"(roleNum in varchar2)
return varchar2 is  roleName varchar2(100);

begin
   roleName := '';
   IF roleNum = '1' THEN
     roleName := '单位领导';
   END IF;
   IF
     roleNum = '2' THEN
     roleName := '部门负责人';
   END IF;
   IF
     roleNum = '3' THEN
     roleName := '收发员';
  END IF;
   IF
     roleNum = '4' THEN
     roleName := '审核人';
  END IF;
   IF
     roleNum = '5' THEN
     roleName := '经办人';
  END IF;
   IF
     roleNum = '6' THEN
     roleName := '委办公室文秘';
  END IF;
   IF
     roleNum = '8' THEN
     roleName := '委办公室主任';
  END IF;
   IF
     roleNum = '9' THEN
     roleName := '委文印室和保密室';
  END IF;
   IF
     roleNum = '10' THEN
     roleName := '委保密室';
  END IF;

  return roleName;
end F_GetRoleName;
/

-- ----------------------------
-- Function structure for F_GETROLENAMEBYUSERID
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_GETROLENAMEBYUSERID"(user_id in varchar2)
return varchar2 is
 V_RET_CODE VARCHAR2(200);
begin
    for z in (select a.role,a.secondrole
              from t_rim_comm_employee a,t_rim_comm_user  d
              where  a.empno = d.empno(+) and d.userid=user_id)
    loop
       V_RET_CODE:=F_GetRoleName(z.role)||'&'||F_GetRoleName(z.secondrole);

       IF (z.secondrole is null or z.secondrole ='') THEN
              V_RET_CODE:=F_GetRoleName(z.role);
       END IF;

       exit;
    end loop;

    return V_RET_CODE;
end F_GetRoleNameByUserID;
/

-- ----------------------------
-- Function structure for F_IFNULL
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_IFNULL"(valueIn in varchar2) return varchar2 is
  valueOut varchar2(4000);
begin
  if (valueIn is null) then
    valueOut :=  ' ';
  else
    valueOut := valueIn;
  end if ;
  return(valueOut);
end;
/

-- ----------------------------
-- Function structure for F_IFNULL2
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_IFNULL2"(valueIn in varchar2,defaultValue in varchar2) return varchar2 is
  valueOut varchar2(4000);
begin
  if (valueIn is null) then
    valueOut :=  defaultValue;
  else
    valueOut := valueIn;
  end if ;
  return(valueOut);
end;
/

-- ----------------------------
-- Function structure for F_RIM_OA_ARCHIVENAME
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_OA_ARCHIVENAME"(ItemID_P in varchar2,TypeID_P in varchar2) return varchar2  is
  Result  varchar2(30);
  V_Temp  varchar2(30);
   CURSOR c_types is
   select ITEMNAME  from T_RIM_OA_TYPE
		where itemid=ItemID_P and TYPEID=TypeID_P;
    v_type c_types%rowtype;
begin
  ----根据类型ID"TypeID_P"，类型项目ID"ItemID_P"，获取[类型项目名称]
  OPEN c_types;
  loop
    fetch c_types into v_type;
    exit when c_types%notfound;
    V_Temp := v_type.itemname;
  end loop;
  close c_types;
  Result :=V_Temp;
  return(Result);
end F_RIM_OA_ARCHIVEName;
/

-- ----------------------------
-- Function structure for F_RIM_OA_GETDEFVALID
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_OA_GETDEFVALID"(startdt date,operatedt date) return varchar2 is
  retType varchar2(10);
begin
  retType := '有效';
  if startdt < sysdate then
  retType := '无效';
  end if;
  if operatedt < (sysdate - 2 / 24) then
  retType := '无效';
  end if;
  return(retType);
end f_rim_oa_getdefvalid;
/

-- ----------------------------
-- Function structure for F_RIM_OA_STRLIST
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_OA_STRLIST"(str_in in varchar2) return varchar2 is
  returnStr varchar2(4000) default null;--连接后字符串
  mStr varchar2(20) default null;--连接字符
begin
  for x in (select b.username from t_rim_wf_delegatemissivelist a,t_rim_comm_user b where a.delegateuserid=b.userid and workid=str_in and (a.delflag=0 or a.delflag is null))
  loop
      returnStr := returnStr || mStr || x.username;
      mStr :=',';
  end loop;
  return returnStr;
end F_RIM_OA_STRLIST;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_APP_GUID_BYDEPT_PAY
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_APP_GUID_BYDEPT_PAY"(Dept_Pay_Temp in varchar2) return varchar2 is
  Result varchar2(80);
  AppCode_Temp varchar2(80);
  cursor PT is select B.GUID as App_GUID from Rsbt_Apply B where b.org_guid in (select ORG_GUID from RSBT_NET A where A.FEE_GUID=Dept_Pay_Temp);
  V_SF PT%ROWTYPE;
  --历史库
  cursor PT_H is select B.GUID as App_GUID from Rsbt_Apply_H B where b.org_guid in (select ORG_GUID from RSBT_NET_H A where A.FEE_GUID=Dept_Pay_Temp);
  V_SF_H PT_H%ROWTYPE;
begin
  ----根据缴费单位Guid编码Dept_Pay，获取申请表编号的App_GUID
  open PT;
  loop
     FETCH PT INTO V_SF;
        EXIT WHEN PT%notfound;
     AppCode_Temp := V_SF.App_GUID;
     Exit;
  end loop;
  close PT;
  ----查询历史库（如果AppCode_Temp is null）
  if AppCode_Temp is null then
    open PT_H;
    loop
       FETCH PT_H INTO V_SF_H;
          EXIT WHEN PT_H%notfound;
         AppCode_Temp := V_SF_H.App_GUID;
       Exit;
     end loop;
     close PT_H;
  end if;
  --
  Result := AppCode_Temp;
  return(Result);

end F_rim_rsm_App_GUID_ByDept_Pay;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_APPCODE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_APPCODE"(Apply_codeTemp in varchar2,decl_codeTemp in varchar2) return varchar2 is
  Result varchar2(80);
  AppCode_Temp varchar2(80);
  cursor PT is select APP_CODE from  rsbt_station A where substr(A.app_code,-12,12)=Apply_codeTemp and A.STAT_APP_Type||A.STAT_TDI=decl_codeTemp;
  V_SF PT%ROWTYPE;
  --历史库
  cursor PT_H is select APP_CODE from  Rsbt_Station_H A where substr(A.app_code,-12,12)=Apply_codeTemp and A.STAT_APP_Type||A.STAT_TDI=decl_codeTemp;
  V_SF_H PT_H%ROWTYPE;
begin
  ----根据申请编号500020070245、技术资料表编号LM0005，获取申请表编号T500020070245或PA500020070245
  open PT;
  loop
     FETCH PT INTO V_SF;
        EXIT WHEN PT%notfound;
     AppCode_Temp := V_SF.APP_CODE;
     Exit;
  end loop;
  close PT;
  ----查询历史库（如果AppCode_Temp is null）
  if AppCode_Temp is null then
    open PT_H;
    loop
       FETCH PT_H INTO V_SF_H;
          EXIT WHEN PT_H%notfound;
         AppCode_Temp := V_SF_H.APP_CODE;
       Exit;
     end loop;
     close PT_H;
  end if;
  --
  Result := AppCode_Temp;
  return(Result);

end F_rim_rsm_AppCode;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_APPCODE_BYDEPT_PAY
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_APPCODE_BYDEPT_PAY"(Dept_Pay_Temp in varchar2) return varchar2 is
  Result varchar2(80);
  AppCode_Temp varchar2(80);
  cursor PT is select B.APP_CODE from Rsbt_Apply B where b.org_guid in (select ORG_GUID from RSBT_NET A where A.FEE_GUID=Dept_Pay_Temp);
  V_SF PT%ROWTYPE;
  --历史库
  cursor PT_H is select B.APP_CODE from Rsbt_Apply_H B where b.org_guid in (select ORG_GUID from RSBT_NET_H A where A.FEE_GUID=Dept_Pay_Temp);
  V_SF_H PT_H%ROWTYPE;
begin
  ----根据缴费单位Guid编码Dept_Pay，获取申请表编号T500020070245或PA500020070245
  open PT;
  loop
     FETCH PT INTO V_SF;
        EXIT WHEN PT%notfound;
     AppCode_Temp := V_SF.APP_CODE;
     Exit;
  end loop;
  close PT;
  ----查询历史库（如果AppCode_Temp is null）
  if AppCode_Temp is null then
    open PT_H;
    loop
       FETCH PT_H INTO V_SF_H;
          EXIT WHEN PT_H%notfound;
         AppCode_Temp := V_SF_H.APP_CODE;
       Exit;
     end loop;
     close PT_H;
  end if;
  --
  Result := AppCode_Temp;
  return(Result);

end F_rim_rsm_AppCode_ByDept_Pay;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_CHANGEDEGREE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_CHANGEDEGREE"(deg IN NUMBER) return varchar2
is
    v_num number;
    v_d number;
    v_m number;
    v_s number;
    b_rtn varchar2(30) := '';
begin
     if deg is NULL OR deg = 0 then
	      return b_rtn;
	   end if;
     v_d := floor(deg);
     v_num := (deg - v_d) * 60;
     v_m := floor(v_num);
     v_num := (v_num - v_m) * 60;
     v_s := v_num;
     b_rtn := to_char(v_d) || '°' || to_char(v_m) || '′' || round(v_s,2) || '″';
	   return b_rtn;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_AS
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_AS" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station
		where  STAT_APP_Type='A' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T' AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station
		where STAT_APP_Type='A' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T' AND org_code=areacode AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_AS_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_AS_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem a,rsbt_station b
		where count_year=pyear and (item_code='710000' or item_code='720000' or item_code='730000' or item_code='740000')
		and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
  if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applyitem a,rsbt_station b
		where count_year=pyear and (item_code='710000' or item_code='720000' or item_code='730000' or item_code='740000')
		and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
    if nvl(V_Temp,0)<>0 then
			V_Result := V_Result + V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem a,rsbt_station b
		where area_code=areacode AND count_year=pyear and (item_code='710000' or item_code='720000' or item_code='730000' or item_code='740000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem a,rsbt_station b
    where area_code=areacode AND count_year=pyear and (item_code='710000' or item_code='720000' or item_code='730000' or item_code='740000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_AS_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_AS_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station_r
		where  STAT_APP_Type='A'  and substr(app_code,1,length(app_code)-12)='T' AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station_r
		where STAT_APP_Type='A'  and substr(app_code,1,length(app_code)-12)='T' AND org_code=areacode AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BC
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BC" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where STAT_Status='1' AND a.guid=b.guid AND STAT_APP_Type='B' AND nvl(ST_B_TYPE1,'0')='0'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and nvl(ST_B_IC,'0')='0'
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where STAT_Status='1' AND a.guid=b.guid AND STAT_APP_Type='B' AND nvl(ST_B_TYPE1,'0')='0'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and nvl(ST_B_IC,'0')='0'
			 and substr(app_code,1,length(app_code)-12)='T'
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BC_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BC_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
		where count_year=pyear and (item_code='560000' or item_code='570000' or item_code='580000' or item_code='590000');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
    where count_year=pyear and (item_code='560000' or item_code='570000' or item_code='580000' or item_code='590000');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
    where area_code=areacode AND count_year=pyear and (item_code='560000' or item_code='570000' or item_code='580000' or item_code='590000');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
    where area_code=areacode AND count_year=pyear and (item_code='560000' or item_code='570000' or item_code='580000' or item_code='590000');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BC_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BC_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_station_t_r b
		where  a.guid=b.guid AND STAT_APP_Type='B' AND nvl(ST_B_TYPE1,'0')='0'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and nvl(ST_B_IC,'0')='0'
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_station_t_r b
		where a.guid=b.guid AND STAT_APP_Type='B' AND nvl(ST_B_TYPE1,'0')='0'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and nvl(ST_B_IC,'0')='0'
			 and substr(app_code,1,length(app_code)-12)='T'
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BT
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BT" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where STAT_Status='1' AND a.guid=b.guid AND ST_B_TYPE1='1' AND STAT_APP_Type='B'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and nvl(ST_B_IC,'0')='0'
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where STAT_Status='1' AND a.guid=b.guid  AND STAT_APP_Type='B' AND ST_B_TYPE1='1'  and nvl(ST_B_IC,'0')='0'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and substr(app_code,1,length(app_code)-12)='T'
			 AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BT_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BT_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
 	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
		where count_year=pyear and (item_code='510000' or item_code='520000' or item_code='530000' or item_code='540000');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
		where count_year=pyear and (item_code='510000' or item_code='520000' or item_code='530000' or item_code='540000');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
		where area_code=areacode AND count_year=pyear and (item_code='510000' or item_code='520000' or item_code='530000' or item_code='540000');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;

    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
    where area_code=areacode AND count_year=pyear and (item_code='510000' or item_code='520000' or item_code='530000' or item_code='540000');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BT_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BT_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_station_t_r b
		where a.guid=b.guid AND ST_B_TYPE1='1' AND STAT_APP_Type='B'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and nvl(ST_B_IC,'0')='0'
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where a.guid=b.guid  AND STAT_APP_Type='B' AND ST_B_TYPE1='1'  and nvl(ST_B_IC,'0')='0'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and substr(app_code,1,length(app_code)-12)='T'
			 AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BW
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BW" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where STAT_Status='1' AND a.guid=b.guid AND STAT_APP_Type='B' and ST_B_IC='1'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station a,rsbt_station_t b
		where STAT_Status='1' AND a.guid=b.guid AND STAT_APP_Type='B' and ST_B_IC='1' AND a.org_code=areacode
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_BW_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_BW_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_station_t_r b
		where a.guid=b.guid AND STAT_APP_Type='B' and ST_B_IC='1'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_station_t_r b
		where a.guid=b.guid AND STAT_APP_Type='B' and ST_B_IC='1' AND a.org_code=areacode
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			 and substr(app_code,1,length(app_code)-12)='T';
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_CDMA
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_CDMA" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
        --and c.net_ts='LY0102' --CDMA系统
        and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
            and ((FREQ_TYPE='0' and (FREQ_UC>=870 and FREQ_UC<=880) or (FREQ_UC>=2110 and FREQ_UC<=2125))
                or (FREQ_TYPE='1' and (FREQ_EFE>=870 and FREQ_EFB<=880) or (FREQ_EFE>=2110 and FREQ_EFB<=2125))) );
    V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
      and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
        AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
        --and c.net_ts='LY0102' --CDMA系统
         and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
            and ((FREQ_TYPE='0' and (FREQ_UC>=870 and FREQ_UC<=880) or (FREQ_UC>=2110 and FREQ_UC<=2125))
                or (FREQ_TYPE='1' and (FREQ_EFE>=870 and FREQ_EFB<=880) or (FREQ_EFE>=2110 and FREQ_EFB<=2125))) );
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_CDMA_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_CDMA_P" (areacode varchar2,pyear number) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d,rsbt_freq e
        where substr(app_code,1,length(app_code)-12)='T' and e.station_guid=c.guid and c.net_guid=d.guid
     AND ((STAT_APP_Type='C' AND ((FREQ_TYPE='0' AND ((FREQ_UC>=870 AND FREQ_UC<=880 ) OR (FREQ_UC>=2110 AND FREQ_UC<=2125 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=870 AND FREQ_EFB<=880 ) OR (FREQ_EFE>=2110 AND FREQ_EFB<=2125 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0102'))) b
    where count_year=pyear and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and (item_code='110000' or item_code='120000');
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d,rsbt_freq e
        where substr(app_code,1,length(app_code)-12)='T' and e.station_guid=c.guid and c.net_guid=d.guid
     AND ((STAT_APP_Type='C' AND ((FREQ_TYPE='0' AND ((FREQ_UC>=870 AND FREQ_UC<=880 ) OR (FREQ_UC>=2110 AND FREQ_UC<=2125 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=870 AND FREQ_EFB<=880 ) OR (FREQ_EFE>=2110 AND FREQ_EFB<=2125 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0102'))) b
    where count_year=pyear  and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and (item_code='110000' or item_code='120000');
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  else
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d,rsbt_freq e
        where substr(app_code,1,length(app_code)-12)='T' and e.station_guid=c.guid and c.net_guid=d.guid
     AND ((STAT_APP_Type='C' AND ((FREQ_TYPE='0' AND ((FREQ_UC>=870 AND FREQ_UC<=880 ) OR (FREQ_UC>=2110 AND FREQ_UC<=2125 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=870 AND FREQ_EFB<=880 ) OR (FREQ_EFE>=2110 AND FREQ_EFB<=2125 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0102'))) b
    where area_code=areacode AND count_year=pyear and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and (item_code='110000' or item_code='120000');
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d,rsbt_freq e
        where substr(app_code,1,length(app_code)-12)='T' and e.station_guid=c.guid and c.net_guid=d.guid
      AND ((STAT_APP_Type='C' AND ((FREQ_TYPE='0' AND ((FREQ_UC>=870 AND FREQ_UC<=880 ) OR (FREQ_UC>=2110 AND FREQ_UC<=2125 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=870 AND FREQ_EFB<=880 ) OR (FREQ_EFE>=2110 AND FREQ_EFB<=2125 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0102'))) b
    where area_code=areacode AND count_year=pyear  and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and (item_code='110000' or item_code='120000');
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_CDMA_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_CDMA_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
        --and c.net_ts='LY0102' --CDMA系统
        and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
            and ((FREQ_TYPE='0' and (FREQ_UC>=870 and FREQ_UC<=880) or (FREQ_UC>=2110 and FREQ_UC<=2125))
                or (FREQ_TYPE='1' and (FREQ_EFE>=870 and FREQ_EFB<=880) or (FREQ_EFE>=2110 and FREQ_EFB<=2125))) );
    V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
      and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
        AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
        --and c.net_ts='LY0102' --CDMA系统
         and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
            and ((FREQ_TYPE='0' and (FREQ_UC>=870 and FREQ_UC<=880) or (FREQ_UC>=2110 and FREQ_UC<=2125))
                or (FREQ_TYPE='1' and (FREQ_EFE>=870 and FREQ_EFB<=880) or (FREQ_EFE>=2110 and FREQ_EFB<=2125))) );
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GD
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_GD" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS')  and substr(app_code,1,length(app_code)-12)='T'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		 V_Result :=V_Temp;
	else
		select count(a.guid) into V_Temp
		from rsbt_station a,rsbt_net c
		where a.net_guid=c.guid and STAT_Status='1' AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS') and substr(app_code,1,length(app_code)-12)='T'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode;
		 V_Result :=V_Temp;
	end if;
	return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GD_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_GD_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120200' or item_code='120300' or item_code='130100' or item_code='130200')
			and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
				where a.net_guid=c.guid  AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS') and substr(app_code,1,length(app_code)-12)='T');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120200' or item_code='120300' or item_code='130100' or item_code='130200')
      and count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
        where a.net_guid=c.guid  AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS') and substr(app_code,1,length(app_code)-12)='T');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
    where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120200' or item_code='120300' or item_code='130100' or item_code='130200')
      and area_code=areacode AND count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
        where a.net_guid=c.guid  AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS') and substr(app_code,1,length(app_code)-12)='T');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120200' or item_code='120300' or item_code='130100' or item_code='130200')
      and area_code=areacode AND count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
       where a.net_guid=c.guid  AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS') and substr(app_code,1,length(app_code)-12)='T');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
    return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GD_R
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_GD_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS')  and substr(app_code,1,length(app_code)-12)='T'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		 V_Result :=V_Temp;
	else
		select count(a.guid) into V_Temp
		from rsbt_station_r a,rsbt_net_r c
		where a.net_guid=c.guid  AND (STAT_APP_Type='TF' and nvl(stat_type,' ')='TS') and substr(app_code,1,length(app_code)-12)='T'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode;
		 V_Result :=V_Temp;
	end if;
	return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GSM
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_GSM" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1'and substr(app_code,1,length(app_code)-12)='T'
        and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
            AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
            --and c.net_ts='LY0101' --GSM/GPRS 系统
            and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
                and ((FREQ_TYPE='0' and (FREQ_UC>=935 and FREQ_UC<=960) or (FREQ_UC>=1805 and FREQ_UC<=1850))
                    or (FREQ_TYPE='1' and (FREQ_EFE>=935 and FREQ_EFB<=960) or (FREQ_EFE>=1805 and FREQ_EFB<=1850))) );
    V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
      AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
            --and c.net_ts='LY0101' --GSM/GPRS 系统
            and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
                and ((FREQ_TYPE='0' and (FREQ_UC>=935 and FREQ_UC<=960) or (FREQ_UC>=1805 and FREQ_UC<=1850))
                    or (FREQ_TYPE='1' and (FREQ_EFE>=935 and FREQ_EFB<=960) or (FREQ_EFE>=1805 and FREQ_EFB<=1850))) );
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GSM_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_GSM_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem a,rsbt_station b
		where count_year=pyear and (item_code='110000' or item_code='120000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applyitem a,rsbt_station b
		where count_year=pyear  and (item_code='110000' or item_code='120000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
		V_Result := V_Result + V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem  a,rsbt_station b
		where area_code=areacode AND count_year=pyear and (item_code='110000' or item_code='120000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
	  if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
	  end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applyitem a,rsbt_station b
		where area_code=areacode AND count_year=pyear and (item_code='110000' or item_code='120000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
		V_Result := V_Result + V_Temp;
		end if;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GSM_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_GSM_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
        and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
            AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
            --and c.net_ts='LY0101' --GSM/GPRS 系统
            and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
                and ((FREQ_TYPE='0' and (FREQ_UC>=935 and FREQ_UC<=960) or (FREQ_UC>=1805 and FREQ_UC<=1850))
                    or (FREQ_TYPE='1' and (FREQ_EFE>=935 and FREQ_EFB<=960) or (FREQ_EFE>=1805 and FREQ_EFB<=1850))) );
    V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
      AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
            --and c.net_ts='LY0101' --GSM/GPRS 系统
            and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
                and ((FREQ_TYPE='0' and (FREQ_UC>=935 and FREQ_UC<=960) or (FREQ_UC>=1805 and FREQ_UC<=1850))
                    or (FREQ_TYPE='1' and (FREQ_EFE>=935 and FREQ_EFB<=960) or (FREQ_EFE>=1805 and FREQ_EFB<=1850))) );
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GX
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_GX" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
	--全部数据计算
		select count(a.guid) into V_Temp
		from rsbt_station a,rsbt_net c
		where a.net_guid=c.guid and STAT_Status='1' AND (STAT_APP_Type='TF' and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		 V_Result :=V_Temp;
	else
		select count(a.guid) into V_Temp
		from rsbt_station a,rsbt_net c
		where a.net_guid=c.guid and STAT_Status='1' AND (STAT_APP_Type='TF'  and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T'
			 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode;
		 V_Result :=V_Temp;
	end if;
	return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GX_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_GX_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
			and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
				where a.net_guid=c.guid  AND (STAT_APP_Type='TF'  and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
			and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
				where a.net_guid=c.guid  AND (STAT_APP_Type='TF'  and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
			and area_code=areacode AND count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
				where a.net_guid=c.guid  AND (STAT_APP_Type='TF'  and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
			and area_code=areacode AND count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET c
				where a.net_guid=c.guid  AND (STAT_APP_Type='TF'  and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
        return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_GX_R
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_GX_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  AND (STAT_APP_Type='TF' and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
     V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  AND (STAT_APP_Type='TF'  and nvl(stat_type,'null')='CS') and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode;
     V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HA
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HA" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(distinct a.guid) into V_Temp
		from rsbt_station a,rsbt_antfeed c
		where a.guid=c.station_guid and STAT_Status='1' AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(distinct a.guid) into V_Temp
		from rsbt_station a,rsbt_antfeed c
		where a.guid=c.station_guid and STAT_Status='1' AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HA_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HA_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where item_code='100100' and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
				where a.guid=c.station_guid AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5);
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where item_code='100100' and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
				where a.guid=c.station_guid AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5);
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where area_code=areacode AND  item_code='100100' and count_year=pyear
			and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
        where a.guid=c.station_guid AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5);
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where area_code=areacode AND  item_code='100100' and count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
       where a.guid=c.station_guid AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5);
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HA_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HA_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(distinct a.guid) into V_Temp
		from rsbt_station_r a,rsbt_antfeed_r c
		where a.guid=c.station_guid AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(distinct a.guid) into V_Temp
		from rsbt_station_r a,rsbt_antfeed_r c
		where a.guid=c.station_guid  AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)>4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HF
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HF" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' AND STAT_APP_Type='V' and a.stat_type<>'RA' AND a.stat_type<>'AT'
          --and  nvl(NET_SVN,' ')<>'GD04' and nvl(NET_SVN,' ')<>'LY05' and nvl(NET_SVN,' ')<>'LY06' and nvl(NET_SVN,' ')<>'WA' and substr(app_code,1,length(app_code)-12)='T'
          and substr(app_code,1,length(app_code)-12)='T' and nvl(c.NET_SVN,'null')<>'LY06'
           and exists (select station_guid from rsbt_freq f where a.guid=f.station_guid and decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC)>30 )
          and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
     V_Result :=V_Temp;
     else
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' AND STAT_APP_Type='V' and  a.stat_type<>'RA' AND a.stat_type<>'AT'
         --and  nvl(NET_SVN,' ')<>'GD04' and nvl(NET_SVN,' ')<>'LY05' and nvl(NET_SVN,' ')<>'LY06' and nvl(NET_SVN,' ')<>'WA'
         and substr(app_code,1,length(app_code)-12)='T' and nvl(c.NET_SVN,'null')<>'LY06'
         and exists (select station_guid from rsbt_freq f where a.guid=f.station_guid and decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC)>30 )
         and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode;
     V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HF_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HF_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
		where item_code='810000' and count_year=pyear
			   and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) >30;
    if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
		where item_code='810000' and count_year=pyear
			   and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) >30;
   if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
		where area_code=areacode AND item_code='810000' and count_year=pyear
			   and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) >30;
   if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
		where area_code=areacode AND item_code='810000' and count_year=pyear
			   and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) >30;
   if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
               end if;
  return V_Result;

end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HF_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HF_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  AND STAT_APP_Type='V' and a.stat_type<>'RA' AND a.stat_type<>'AT'
          --and  nvl(NET_SVN,' ')<>'GD04' and nvl(NET_SVN,' ')<>'LY05' and nvl(NET_SVN,' ')<>'LY06' and nvl(NET_SVN,' ')<>'WA' and substr(app_code,1,length(app_code)-12)='T'
          and substr(app_code,1,length(app_code)-12)='T' and nvl(c.NET_SVN,'null')<>'LY06'
           and exists (select station_guid from rsbt_freq_r f where a.guid=f.station_guid and decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC)>30 )
          and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
     V_Result :=V_Temp;
     else
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid AND STAT_APP_Type='V' and  a.stat_type<>'RA' AND a.stat_type<>'AT'
         --and  nvl(NET_SVN,' ')<>'GD04' and nvl(NET_SVN,' ')<>'LY05' and nvl(NET_SVN,' ')<>'LY06' and nvl(NET_SVN,' ')<>'WA'
         and substr(app_code,1,length(app_code)-12)='T' and nvl(c.NET_SVN,'null')<>'LY06'
         and exists (select station_guid from rsbt_freq_r f where a.guid=f.station_guid and decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC)>30 )
         and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode;
     V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HM
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HM" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
      from rsbt_equ a,rsbt_station b,RSBT_NET c
      where  a.station_guid=b.guid and STAT_Status='1' and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
      --  and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' AND nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate
         and  exists (select  station_guid from rsbt_freq f where b.guid = f.station_guid and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30)
         and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
      V_Result :=V_Temp;
  else
    select count(*) into V_Temp
      from rsbt_equ a,rsbt_station b,RSBT_NET c
      where a.station_guid=b.guid and STAT_Status='1' and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
        --and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' and nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate AND b.org_code=areacode
         and  exists (select  station_guid from rsbt_freq f where b.guid = f.station_guid and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30)
         and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND b.org_code=areacode;
      V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HM_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HM_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where item_code='820000' and count_year=pyear
			and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from  rsbt_equ a,rsbt_station b,RSBT_NET c
		  where a.station_guid=b.guid  and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
				--and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' and nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate AND b.org_code=areacode
				and b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30));
    if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where item_code='820000' and count_year=pyear
			and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from  rsbt_equ a,rsbt_station b,RSBT_NET c
    where a.station_guid=b.guid  and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
				--and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' and nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate AND b.org_code=areacode
				and b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30));
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
    where area_code=areacode AND item_code='820000' and count_year=pyear
      and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from  rsbt_equ a,rsbt_station b,RSBT_NET c
  	where a.station_guid=b.guid  and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
				--and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' and nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate AND b.org_code=areacode
				and b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30));
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where area_code=areacode AND item_code='820000' and count_year=pyear
      and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from  rsbt_equ a,rsbt_station b,RSBT_NET c
	where a.station_guid=b.guid  and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
				--and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' and nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate AND b.org_code=areacode
				and b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30));
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_HM_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_HM_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
      from rsbt_equ_r a,rsbt_station_r b,RSBT_NET_r c
      where  a.station_guid=b.guid and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
      --  and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' AND nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate
         and  exists (select  station_guid from rsbt_freq_r f where b.guid = f.station_guid and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30)
         and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
      V_Result :=V_Temp;
  else
    select count(*) into V_Temp
      from rsbt_equ_r a,rsbt_station_r b,RSBT_NET_r c
      where a.station_guid=b.guid and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' and b.NET_GUID=c.GUID
        --and  nvl(c.NET_SVN,' ')<>'LY02' and nvl(c.NET_SVN,' ')<>'GD02' AND nvl(c.NET_SVN,' ')<>'GD03' and nvl(NET_ts,' ')<>'GD0420' and nvl(NET_ts,' ')<>'GD0421' and nvl(NET_ts,' ')<>'GD0422' and b.STAT_Date_Start<=seldate AND b.org_code=areacode
         and  exists (select  station_guid from rsbt_freq_r f where b.guid = f.station_guid and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>30)
         and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND b.org_code=areacode;
      V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_JQ
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_JQ" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a
 where substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
       AND (STAT_APP_Type='C' OR STAT_APP_Type='D')
       and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
           AND ((FREQ_TYPE='0' AND (FREQ_UC>=361 AND FREQ_UC<=368 ) or (FREQ_UC>=382 AND FREQ_UC<=389 ) or (FREQ_UC>=851 AND FREQ_UC<=866 ))
                OR (FREQ_TYPE='1' AND (FREQ_EFE>=361 AND FREQ_EFB<=368 ) or (FREQ_EFE>=382 AND FREQ_EFB<=389 ) or (FREQ_EFE>=851 AND FREQ_EFB<=866 ))));
  V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station a
  where  substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1' AND a.org_code=areacode
           and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
           AND (STAT_APP_Type='C' OR STAT_APP_Type='D')
           and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
               AND ((FREQ_TYPE='0' AND (FREQ_UC>=361 AND FREQ_UC<=368 ) or (FREQ_UC>=382 AND FREQ_UC<=389 ) or (FREQ_UC>=851 AND FREQ_UC<=866 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=361 AND FREQ_EFB<=368 ) or (FREQ_EFE>=382 AND FREQ_EFB<=389 ) or (FREQ_EFE>=851 AND FREQ_EFB<=866 ))));
  V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_JQ_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_JQ_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptnetitem
		where count_year=pyear
		and (item_code='210000' or item_code='220000' or item_code='230000');
		if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applynetitem
		where count_year=pyear
		and (item_code='210000' or item_code='220000' or item_code='230000');
		if nvl(V_Temp,0)<>0 then
		V_Result := V_Result + V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptnetitem
		where area_code=areacode AND count_year=pyear
		and (item_code='210000' or item_code='220000' or item_code='230000');
		if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;

		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applynetitem
		where area_code=areacode AND count_year=pyear
		and (item_code='210000' or item_code='220000' or item_code='230000');
		if nvl(V_Temp,0)<>0 then
		V_Result := V_Result + V_Temp;
		end if;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_JQ_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_JQ_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a
 where substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
       AND (STAT_APP_Type='C' OR STAT_APP_Type='D')
       and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
           AND ((FREQ_TYPE='0' AND (FREQ_UC>=361 AND FREQ_UC<=368 ) or (FREQ_UC>=382 AND FREQ_UC<=389 ) or (FREQ_UC>=851 AND FREQ_UC<=866 ))
                OR (FREQ_TYPE='1' AND (FREQ_EFE>=361 AND FREQ_EFB<=368 ) or (FREQ_EFE>=382 AND FREQ_EFB<=389 ) or (FREQ_EFE>=851 AND FREQ_EFB<=866 ))));
  V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station_r a
  where  substr(app_code,1,length(app_code)-12)='T' AND a.org_code=areacode
           and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
           AND (STAT_APP_Type='C' OR STAT_APP_Type='D')
           and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
               AND ((FREQ_TYPE='0' AND (FREQ_UC>=361 AND FREQ_UC<=368 ) or (FREQ_UC>=382 AND FREQ_UC<=389 ) or (FREQ_UC>=851 AND FREQ_UC<=866 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=361 AND FREQ_EFB<=368 ) or (FREQ_EFE>=382 AND FREQ_EFB<=389 ) or (FREQ_EFE>=851 AND FREQ_EFB<=866 ))));
  V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LA
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LA" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(distinct a.guid) into V_Temp
		from rsbt_station a,rsbt_antfeed c
		where a.guid=c.station_guid(+)  AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
			and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(distinct a.guid) into V_Temp
		from rsbt_station a,rsbt_antfeed c
		where a.guid=c.station_guid(+) AND STAT_APP_Type='E'  and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
			and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LA_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LA_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where item_code='100100' and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
				where  a.guid=c.station_guid(+) AND STAT_APP_Type='E'
					and substr(app_code,1,length(app_code)-12)='T'
					and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5);
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where item_code='100100' and count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
        where  a.guid=c.station_guid(+) AND STAT_APP_Type='E'
          and substr(app_code,1,length(app_code)-12)='T'
          and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5);
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
    where area_code=areacode AND  item_code='100100' and count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
        where  a.guid=c.station_guid(+) AND STAT_APP_Type='E'
          and substr(app_code,1,length(app_code)-12)='T'
          and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5);
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where area_code=areacode AND  item_code='100100' and count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,rsbt_antfeed c
        where  a.guid=c.station_guid(+) AND STAT_APP_Type='E'
          and substr(app_code,1,length(app_code)-12)='T'
          and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5);
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LA_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LA_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(distinct a.guid) into V_Temp
		from rsbt_station_r a,rsbt_antfeed_r c
		where a.guid=c.station_guid(+)  AND STAT_APP_Type='E' and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(distinct a.guid) into V_Temp
		from rsbt_station_r a,rsbt_antfeed_r c
		where a.guid=c.station_guid(+) AND STAT_APP_Type='E'  and substr(app_code,1,length(app_code)-12)='T'
			and f_rim_rsm_GETANTESIZE(ANT_Size)<=4.5 and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LF_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LF_P" (areacode varchar2,pyear number) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d
        where c.net_guid=d.guid and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND d.NET_SVN='LY01') b
    where count_year=pyear and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and item_code='820000';
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d
        where c.net_guid=d.guid and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND d.NET_SVN='LY01') b
    where count_year=pyear  and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and item_code='820000';
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  else
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d
        where c.net_guid=d.guid and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND d.NET_SVN='LY01') b
    where area_code=areacode AND count_year=pyear and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and item_code='820000';
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem a,
      (select distinct app_code,stat_app_type||stat_tdi decl_code from rsbt_station c,rsbt_net d
        where c.net_guid=d.guid and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND d.NET_SVN='LY01') b
    where area_code=areacode AND count_year=pyear  and to_char(a.apply_code)=substr(b.app_code,-12,12) and a.decl_code=b.decl_code
      and item_code='820000';
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LJ
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LJ" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_equ a,rsbt_station b,rsbt_net c
		where STAT_Status='1' AND a.station_guid=b.guid  and b.net_guid=c.guid  and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND c.NET_SVN='LY02';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_equ a,rsbt_station b,rsbt_net c
		where STAT_Status='1' AND a.station_guid=b.guid  and b.net_guid=c.guid  and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND c.NET_SVN='LY02' AND b.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LJ_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LJ_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where item_code='820000' and count_year=pyear
			and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET b where b.GUID=a.NET_GUID and nvl(NET_SVN,' ')='LY02' and substr(app_code,1,length(app_code)-12)='T' and STAT_APP_Type='LM');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where item_code='820000' and count_year=pyear
			and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET b where b.GUID=a.NET_GUID and nvl(NET_SVN,' ')='LY02' and substr(app_code,1,length(app_code)-12)='T' and STAT_APP_Type='LM');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where area_code=areacode AND item_code='820000' and count_year=pyear
			and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET b where b.GUID=a.NET_GUID and nvl(NET_SVN,' ')='LY02' and substr(app_code,1,length(app_code)-12)='T' and STAT_APP_Type='LM');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where area_code=areacode AND item_code='820000' and count_year=pyear
      and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from RSBT_STATION a,RSBT_NET b where b.GUID=a.NET_GUID and nvl(NET_SVN,' ')='LY02' and substr(app_code,1,length(app_code)-12)='T' and STAT_APP_Type='LM');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_LJ_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_LJ_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_equ_r a,rsbt_station_r b,rsbt_net_r c
		where  a.station_guid=b.guid  and b.net_guid=c.guid  and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND c.NET_SVN='LY02';
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_equ_r a,rsbt_station_r b,rsbt_net_r c
		where a.station_guid=b.guid  and b.net_guid=c.guid  and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			and STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='T' AND c.NET_SVN='LY02' AND b.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_MS
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_MS" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(distinct a.guid) into V_Temp
    from rsbt_station a,RSBT_FREQ D
    where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME') and nvl(a.STAT_Date_Start,to_date(substr(substr(a.app_code,-12,12),5,4)||'.1.1','YYYY.MM.DD'))<=seldate
      and ((FREQ_TYPE='0' AND FREQ_UC>=1000) OR (FREQ_TYPE='1' AND FREQ_EFB>=1000));
    V_Result :=V_Temp;
  else
    select count(distinct a.guid) into V_Temp
    from rsbt_station a,RSBT_FREQ D
    where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME') and nvl(a.STAT_Date_Start,to_date(substr(substr(a.app_code,-12,12),5,4)||'.1.1','YYYY.MM.DD'))<=seldate
       and ((FREQ_TYPE='0' AND FREQ_UC>=1000) OR (FREQ_TYPE='1' AND FREQ_EFB>=1000))
      AND a.org_code=areacode;
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_MS_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_MS_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
			and count_year=pyear
			and apply_code||decl_code in
				(select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from rsbt_station a,RSBT_FREQ D
			 where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME'));
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
      and count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from rsbt_station a,RSBT_FREQ D
         where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME'));
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
    where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
      and area_code=areacode AND count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from rsbt_station a,RSBT_FREQ D
         where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME'));
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where (item_code='910000' or item_code='920000' or item_code='930000' or item_code='120100' or item_code='120300' or item_code='130100' or item_code='130200')
      and area_code=areacode AND  count_year=pyear
      and apply_code||decl_code in
        (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI from rsbt_station a,RSBT_FREQ D
         where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME'));
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;

  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_MS_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_MS_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(distinct a.guid) into V_Temp
    from rsbt_station_r a,RSBT_FREQ_r D
    where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME') and nvl(a.STAT_Date_Start,to_date(substr(substr(a.app_code,-12,12),5,4)||'.1.1','YYYY.MM.DD'))<=seldate
      and ((FREQ_TYPE='0' AND FREQ_UC>=1000) OR (FREQ_TYPE='1' AND FREQ_EFB>=1000));
    V_Result :=V_Temp;
  else
    select count(distinct a.guid) into V_Temp
    from rsbt_station_r a,RSBT_FREQ_r D
    where A.GUID=D.STATION_GUID AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
       and (a.stat_type='MB' or a.stat_type='MD' or a.stat_type='MH' or a.stat_type='RS' or a.stat_type='ME') and nvl(a.STAT_Date_Start,to_date(substr(substr(a.app_code,-12,12),5,4)||'.1.1','YYYY.MM.DD'))<=seldate
       and ((FREQ_TYPE='0' AND FREQ_UC>=1000) OR (FREQ_TYPE='1' AND FREQ_EFB>=1000))
      AND a.org_code=areacode;
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_OTHER
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_OTHER"(seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from  (select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,'' et_equ_no
from rsbt_station a,(
select stat_guid from v_rim_rsm_count_as
union
    select stat_guid from v_rim_rsm_count_bc
union
    select stat_guid from v_rim_rsm_count_bt
union
    select stat_guid from v_rim_rsm_count_bw
union
    select stat_guid from v_rim_rsm_count_cdma
union
    select stat_guid from v_rim_rsm_count_gsm
union
    select stat_guid from v_rim_rsm_count_wcdma
union
    select stat_guid from v_rim_rsm_count_td_scdma
union
    select stat_guid from v_rim_rsm_count_gd
union
    select stat_guid from v_rim_rsm_count_gx
union
    select stat_guid from v_rim_rsm_count_ha
union
    select stat_guid from v_rim_rsm_count_hf
union
    select stat_guid from v_rim_rsm_count_jq
union
    select stat_guid from v_rim_rsm_count_la
union
    select stat_guid  from v_rim_rsm_count_lf
union
    select stat_guid from v_rim_rsm_count_ms
union
    select stat_guid from v_rim_rsm_count_pb
union
    select stat_guid from v_rim_rsm_count_sf
union
    select stat_guid from v_rim_rsm_count_spm
union
    select stat_guid from v_rim_rsm_count_ss
union
    select stat_guid from v_rim_rsm_count_ws
union
    select stat_guid from v_rim_rsm_count_wx
union
    select stat_guid from v_rim_rsm_count_yy where stat_app_type<>'LM') b,rsbt_code_dic c
where a.guid=b.stat_guid(+) and b.stat_guid is  null and a.stat_app_type<>'LM' and a.stat_status='1'
      and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006'
union all
select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,et_equ_no
from rsbt_equ d,rsbt_equ_t e,rsbt_station a,(
select stat_guid from v_rim_rsm_count_sm
union
    select stat_guid from v_rim_rsm_count_lj
union
    select stat_guid from v_rim_rsm_count_hm
union
    select stat_guid from v_rim_rsm_count_yy where stat_app_type='LM') b,rsbt_code_dic c
where d.guid=e.guid(+) and d.station_guid=a.guid(+) and a.guid=b.stat_guid(+) and b.stat_guid is null and
      a.stat_app_type='LM'  and a.stat_status='1' and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006')
    where
            nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
  else
    select count(*) into V_Temp
    from (select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,'' et_equ_no
from rsbt_station a,(
select stat_guid from v_rim_rsm_count_as
union
    select stat_guid from v_rim_rsm_count_bc
union
    select stat_guid from v_rim_rsm_count_bt
union
    select stat_guid from v_rim_rsm_count_bw
union
    select stat_guid from v_rim_rsm_count_cdma
union
    select stat_guid from v_rim_rsm_count_gsm
union
    select stat_guid from v_rim_rsm_count_wcdma
union
    select stat_guid from v_rim_rsm_count_td_scdma
union
    select stat_guid from v_rim_rsm_count_gd
union
    select stat_guid from v_rim_rsm_count_gx
union
    select stat_guid from v_rim_rsm_count_ha
union
    select stat_guid from v_rim_rsm_count_hf
union
    select stat_guid from v_rim_rsm_count_jq
union
    select stat_guid from v_rim_rsm_count_la
union
    select stat_guid  from v_rim_rsm_count_lf
union
    select stat_guid from v_rim_rsm_count_ms
union
    select stat_guid from v_rim_rsm_count_pb
union
    select stat_guid from v_rim_rsm_count_sf
union
    select stat_guid from v_rim_rsm_count_spm
union
    select stat_guid from v_rim_rsm_count_ss
union
    select stat_guid from v_rim_rsm_count_ws
union
    select stat_guid from v_rim_rsm_count_wx
union
    select stat_guid from v_rim_rsm_count_yy where stat_app_type<>'LM') b,rsbt_code_dic c
where a.guid=b.stat_guid(+) and b.stat_guid is  null and a.stat_app_type<>'LM' and a.stat_status='1'
      and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006'
union all
select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,et_equ_no
from rsbt_equ d,rsbt_equ_t e,rsbt_station a,(
select stat_guid from v_rim_rsm_count_sm
union
    select stat_guid from v_rim_rsm_count_lj
union
    select stat_guid from v_rim_rsm_count_hm
union
    select stat_guid from v_rim_rsm_count_yy where stat_app_type='LM') b,rsbt_code_dic c
where d.guid=e.guid(+) and d.station_guid=a.guid(+) and a.guid=b.stat_guid(+) and b.stat_guid is null and
      a.stat_app_type='LM'  and a.stat_status='1' and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006')
     where
          org_code=areacode
         and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
        V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_OTHER_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_OTHER_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from v_rim_rsm_count_other_p t where t.count_year=pyear;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp from v_rim_rsm_count_other_p t where  t.count_year=pyear and t.area_code=areacode;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_OTHER_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_OTHER_R"(seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from  (select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,'' et_equ_no
from rsbt_station_r a,(
select stat_guid from v_rim_rsm_count_as_r
union
    select stat_guid from v_rim_rsm_count_bc_r
union
    select stat_guid from v_rim_rsm_count_bt_r
union
    select stat_guid from v_rim_rsm_count_bw_r
union
    select stat_guid from v_rim_rsm_count_cdma_r
union
    select stat_guid from v_rim_rsm_count_gsm_r
union
    select stat_guid from v_rim_rsm_count_wcdma_r
union
    select stat_guid from v_rim_rsm_count_td_scdma_r
union
    select stat_guid from v_rim_rsm_count_gd_r
union
    select stat_guid from v_rim_rsm_count_gx_r
union
    select stat_guid from v_rim_rsm_count_ha_r
union
    select stat_guid from v_rim_rsm_count_hf_r
union
    select stat_guid from v_rim_rsm_count_jq_r
union
    select stat_guid from v_rim_rsm_count_la_r
union
    select stat_guid from v_rim_rsm_count_ms_r
union
    select stat_guid from v_rim_rsm_count_pb_r
union
    select stat_guid from v_rim_rsm_count_sf_r
union
    select stat_guid from v_rim_rsm_count_spm_r
union
    select stat_guid from v_rim_rsm_count_ss_r
union
    select stat_guid from v_rim_rsm_count_ws_r
union
    select stat_guid from v_rim_rsm_count_wx_r
union
    select stat_guid from v_rim_rsm_count_yy_r where stat_app_type<>'LM') b,rsbt_code_dic c
where a.guid=b.stat_guid(+) and b.stat_guid is  null and a.stat_app_type<>'LM' and a.stat_status='1'
      and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006'
union all
select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,et_equ_no
from rsbt_equ_r d,rsbt_equ_t_r e,rsbt_station_r a,(
select stat_guid from v_rim_rsm_count_sm_r
union
    select stat_guid from v_rim_rsm_count_lj_r
union
    select stat_guid from v_rim_rsm_count_hm_r
union
    select stat_guid from v_rim_rsm_count_yy_r where stat_app_type='LM') b,rsbt_code_dic c
where d.guid=e.guid(+) and d.station_guid=a.guid(+) and a.guid=b.stat_guid(+) and b.stat_guid is null and
      a.stat_app_type='LM'  and a.stat_status='1' and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006')
    where
            nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
  else
    select count(*) into V_Temp
    from (select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,'' et_equ_no
from rsbt_station_r a,(
select stat_guid from v_rim_rsm_count_as_r
union
    select stat_guid from v_rim_rsm_count_bc_r
union
    select stat_guid from v_rim_rsm_count_bt_r
union
    select stat_guid from v_rim_rsm_count_bw_r
union
    select stat_guid from v_rim_rsm_count_cdma_r
union
    select stat_guid from v_rim_rsm_count_gsm_r
union
    select stat_guid from v_rim_rsm_count_wcdma_r
union
    select stat_guid from v_rim_rsm_count_td_scdma_r
union
    select stat_guid from v_rim_rsm_count_gd_r
union
    select stat_guid from v_rim_rsm_count_gx_r
union
    select stat_guid from v_rim_rsm_count_ha_r
union
    select stat_guid from v_rim_rsm_count_hf_r
union
    select stat_guid from v_rim_rsm_count_jq_r
union
    select stat_guid from v_rim_rsm_count_la_r
union
    select stat_guid from v_rim_rsm_count_ms_r
union
    select stat_guid from v_rim_rsm_count_pb_r
union
    select stat_guid from v_rim_rsm_count_sf_r
union
    select stat_guid from v_rim_rsm_count_spm_r
union
    select stat_guid from v_rim_rsm_count_ss_r
union
    select stat_guid from v_rim_rsm_count_ws_r
union
    select stat_guid from v_rim_rsm_count_wx_r
union
    select stat_guid from v_rim_rsm_count_yy_r where stat_app_type<>'LM') b,rsbt_code_dic c
where a.guid=b.stat_guid(+) and b.stat_guid is  null and a.stat_app_type<>'LM' and a.stat_status='1'
      and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006'
union all
select a.guid Stat_guid,a.APP_Code,STAT_APP_TYPE||STAT_TDI tech_ID,a.stat_name,a.stat_addr,Stat_app_type,
            c.code_chi_name stat_type_name,substr(app_code,1,length(app_code)-12) APP_Type,STAT_Date_Start,a.org_code,et_equ_no
from rsbt_equ_r d,rsbt_equ_t_r e,rsbt_station_r a,(
select stat_guid from v_rim_rsm_count_sm_r
union
    select stat_guid from v_rim_rsm_count_lj_r
union
    select stat_guid from v_rim_rsm_count_hm_r
union
    select stat_guid from v_rim_rsm_count_yy_r where stat_app_type='LM') b,rsbt_code_dic c
where d.guid=e.guid(+) and d.station_guid=a.guid(+) and a.guid=b.stat_guid(+) and b.stat_guid is null and
      a.stat_app_type='LM'  and a.stat_status='1' and a.stat_type=c.cn(+) and c.code_data_type(+)='00052006')
     where
          org_code=areacode
         and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
        V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_PAY
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_PAY" (areacode varchar2,pyear number) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  V_Result :=0;
  if areacode='999999' then
  --全部数据计算
    select sum(sum_count) into V_Temp
    from t_rim_rsm_pay_deptcount a,rsbt_org b
    where a.dept_pay=b.guid and count_year=pyear;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_count) into V_Temp
    from t_rim_rsm_pay_applycount a,rsbt_org b
    where a.dept_pay=b.guid and count_year=pyear;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Result + V_Temp;
    end if;
  else
    select sum(sum_count) into V_Temp
    from t_rim_rsm_pay_deptcount a,rsbt_org b
    where a.dept_pay=b.guid and  area_code=areacode AND count_year=pyear;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_count) into V_Temp
    from t_rim_rsm_pay_applycount a,rsbt_org b
    where  a.dept_pay=b.guid and area_code=areacode AND count_year=pyear;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_PB
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_PB" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station a,rsbt_net c
		where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
		      AND STAT_APP_Type='V'  AND nvl(c.NET_SVN,'null')='LY06' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station a,rsbt_net c
		where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
		      AND STAT_APP_Type='V'  AND nvl(c.NET_SVN,'null')='LY06' AND a.org_code=areacode and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_PB_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_PB_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptnetitem
		where count_year=pyear
		and (item_code='310000' or item_code='320000' or item_code='330000');
		if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applynetitem
		where count_year=pyear
		and (item_code='310000' or item_code='320000' or item_code='330000');
		if nvl(V_Temp,0)<>0 then
		V_Result := V_Result + V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptnetitem
		where area_code=areacode AND count_year=pyear
		and (item_code='310000' or item_code='320000' or item_code='330000');
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applynetitem
    where area_code=areacode AND count_year=pyear
    and (item_code='310000' or item_code='320000' or item_code='330000');
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_PB_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_PB_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_net_r c
		where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
		      AND STAT_APP_Type='V'  AND nvl(c.NET_SVN,'null')='LY06' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station_r a,rsbt_net_r c
		where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
		      AND STAT_APP_Type='V'  AND nvl(c.NET_SVN,'null')='LY06' AND a.org_code=areacode and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SF
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SF" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
            AND STAT_APP_Type='H' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
     -- and a.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30);
    V_Result :=V_Temp;
  else
    select count(*) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T' and STAT_Status='1'
            AND STAT_APP_Type='H' AND a.org_code=areacode and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    --  and a.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30);
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SF_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SF_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
 	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
    where item_code='810000' and count_year=pyear and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) between 0 and 30 ;
	if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
    where item_code='810000' and count_year=pyear and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) between 0 and 30 ;
	if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptnetitem
   where item_code='810000' and area_code=areacode and count_year=pyear and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) between 0 and 30 ;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applynetitem
    where item_code='810000' and area_code=areacode and count_year=pyear and decode(substr(freq_note,-3,3),'KHz',to_number(translate(freq_note,'KMGHz',' '))/1000,'GHz',to_number(translate(freq_note,'KMGHz',' '))*1000,to_number(translate(freq_note,'KMGHz',' '))) between 0 and 30 ;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SF_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SF_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
            AND STAT_APP_Type='H' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
     -- and a.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30);
    V_Result :=V_Temp;
  else
    select count(*) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid and substr(app_code,1,length(app_code)-12)='T'
            AND STAT_APP_Type='H' AND a.org_code=areacode and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    --  and a.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30);
    V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SM
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SM" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
      from rsbt_equ a,rsbt_station b,rsbt_net c
      where b.STAT_APP_Type='LM' and a.station_guid=b.guid and STAT_Status='1'
        and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        and substr(app_code,1,length(app_code)-12)='T'
        and b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+);
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
			from rsbt_equ a,rsbt_station b,rsbt_net c
			where b.STAT_APP_Type='LM' and a.station_guid=b.guid and STAT_Status='1'
				and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
				and substr(app_code,1,length(app_code)-12)='T'
				AND b.org_code=areacode
				and  b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+);
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SM_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SM_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where item_code='820000' and count_year=pyear
			and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI  from rsbt_equ a,rsbt_station b,rsbt_net c
      where b.STAT_APP_Type='LM' and a.station_guid=b.guid
				and substr(app_code,1,length(app_code)-12)='T'
				and  b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+) and nvl(c.net_svn,' ')<>'LY02');
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where item_code='820000' and count_year=pyear
		and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI  from rsbt_equ a,rsbt_station b,rsbt_net c
      where b.STAT_APP_Type='LM' and a.station_guid=b.guid
				and substr(app_code,1,length(app_code)-12)='T'
				and  b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+) and nvl(c.net_svn,' ')<>'LY02');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  else
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
    where area_code=areacode AND item_code='820000' and count_year=pyear
     and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI  from rsbt_equ a,rsbt_station b,rsbt_net c
      where b.STAT_APP_Type='LM' and a.station_guid=b.guid
				and substr(app_code,1,length(app_code)-12)='T'
				and  b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+) and nvl(c.net_svn,' ')<>'LY02');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where area_code=areacode AND item_code='820000' and count_year=pyear
     and apply_code||decl_code in (select substr(app_code,-12,12)||STAT_APP_Type||STAT_TDI  from rsbt_equ a,rsbt_station b,rsbt_net c
      where b.STAT_APP_Type='LM' and a.station_guid=b.guid
				and substr(app_code,1,length(app_code)-12)='T'
				and  b.guid in (select distinct station_guid from rsbt_freq where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+) and nvl(c.net_svn,' ')<>'LY02');
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SM_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SM_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
      from rsbt_equ_r a,rsbt_station_r b,rsbt_net_r c
      where b.STAT_APP_Type='LM' and a.station_guid=b.guid
        and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        and substr(app_code,1,length(app_code)-12)='T'
        and b.guid in (select distinct station_guid from rsbt_freq_r where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+);
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
			from rsbt_equ_r a,rsbt_station_r b,rsbt_net_r c
			where b.STAT_APP_Type='LM' and a.station_guid=b.guid
				and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
				and substr(app_code,1,length(app_code)-12)='T'
				AND b.org_code=areacode
				and  b.guid in (select distinct station_guid from rsbt_freq_r where nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)>=0 and nvl(decode(FREQ_Type,'0',FREQ_UC,'1',FREQ_EFB,FREQ_UC),0)<=30)
				and b.net_guid=c.guid(+);
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SPM
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SPM" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station a
		where STAT_APP_Type='ME' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T' AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate ;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station a
		where STAT_APP_Type='ME' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T' AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SPM_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SPM_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem  a,rsbt_station b
		where item_code='100100' and count_year=pyear
			and decl_code like 'ME%' and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T'  and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem a,rsbt_station b
		where item_code='100100' and count_year=pyear
			and decl_code like 'ME%' and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T'  and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem  a,rsbt_station b
		where area_code=areacode AND item_code='100100' and count_year=pyear
      and decl_code like 'ME%' and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem  a,rsbt_station b
		where area_code=areacode AND item_code='100100' and count_year=pyear
			and decl_code like 'ME%' and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SPM_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SPM_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		from rsbt_station_r a
		where STAT_APP_Type='ME' and substr(app_code,1,length(app_code)-12)='T' AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate ;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station_r a
		where STAT_APP_Type='ME' and substr(app_code,1,length(app_code)-12)='T' AND nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
			AND a.org_code=areacode;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SS
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SS" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station
    where STAT_APP_Type='S' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station
		where STAT_APP_Type='S' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T' AND org_code=areacode and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SS_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SS_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem a,rsbt_station b
		where count_year=pyear and (item_code='610000' or item_code='620000' or item_code='630000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applyitem a,rsbt_station b
		where count_year=pyear and (item_code='610000' or item_code='620000' or item_code='630000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
		if nvl(V_Temp,0)<>0 then
			V_Result := V_Result + V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem a,rsbt_station b
		where area_code=areacode AND count_year=pyear and (item_code='610000' or item_code='620000' or item_code='630000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem a,rsbt_station b
    where area_code=areacode AND count_year=pyear and (item_code='610000' or item_code='620000' or item_code='630000')
    and a.apply_code= substr(b.app_code,-12,12) and substr(app_code,1,length(app_code)-12)='T' and a.decl_code = b.STAT_APP_Type||b.stat_tdi;
    if nvl(V_Temp,0)<>0 then
      V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_SS_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_SS_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station_r
    where STAT_APP_Type='S' and substr(app_code,1,length(app_code)-12)='T' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	else
		select count(*) into V_Temp
		from rsbt_station_r
		where STAT_APP_Type='S' and substr(app_code,1,length(app_code)-12)='T' AND org_code=areacode and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_STAT
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_STAT" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  V_Result :=0;
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station
    where  STAT_Status='1' AND STAT_APP_Type<>'LM' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
    select count(*) into V_Temp
    from rsbt_equ a,rsbt_station b
    where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM' and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  else
    select count(*) into V_Temp
    from rsbt_station
    where STAT_Status='1' and ORG_Code=areacode  AND STAT_APP_Type<>'LM' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;

    select count(*) into V_Temp
    from rsbt_equ a,rsbt_station b
    where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM' and  b.ORG_Code=areacode and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_STAT_NET
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_STAT_NET" (netSvn varchar2,seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  V_Result :=0;
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station a,rsbt_net b
    where  a.STAT_Status='1' AND a.STAT_APP_Type<>'LM' and a.net_guid=b.guid and b.net_svn=netSvn and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
    select count(*) into V_Temp
    from rsbt_equ a,rsbt_station b,rsbt_net c
    where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM'  and b.net_guid=c.guid and c.net_svn=netSvn and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;

  else
    select count(*) into V_Temp
    from rsbt_station a,rsbt_net b
    where a.STAT_Status='1' and a.ORG_Code=areacode  AND a.STAT_APP_Type<>'LM' and a.net_guid=b.guid and b.net_svn=netSvn  and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
    select count(*) into V_Temp
    from rsbt_equ a,rsbt_station b,rsbt_net c
    where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM' and  b.ORG_Code=areacode and b.net_guid=c.guid and c.net_svn=netSvn and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_STAT_ORG
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_STAT_ORG" (orgGuid varchar2,seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  V_Result :=0;
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station a,rsbt_net b,rsbt_org c
    where  a.STAT_Status='1' AND a.STAT_APP_Type<>'LM' and a.net_guid=b.guid(+) and b.org_guid=c.guid(+) and c.guid=orgGuid and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
    select count(*) into V_Temp
    from rsbt_equ a,rsbt_station b,rsbt_net c,rsbt_org d
    where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM'  and b.net_guid=c.guid(+) and c.org_guid=d.guid(+) and d.guid=orgGuid and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  else
    select count(*) into V_Temp
    from rsbt_station a,rsbt_net b,rsbt_org c
    where a.STAT_Status='1' and a.ORG_Code=areacode  AND a.STAT_APP_Type<>'LM' and  a.net_guid=b.guid(+) and b.org_guid=c.guid(+) and c.guid=orgGuid   and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
    select count(*) into V_Temp
    from rsbt_equ a,rsbt_station b,rsbt_net c,rsbt_org d
    where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM' and  b.ORG_Code=areacode and b.net_guid=c.guid(+)  and c.org_guid=d.guid(+) and d.guid=orgGuid and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_STAT_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_STAT_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  V_Result :=0;
  if areacode='999999' then
  --全部数据计算
    select count(*) into V_Temp
    from rsbt_station_r
    where  STAT_APP_Type<>'LM' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;
    select count(*) into V_Temp
    from rsbt_equ_r a,rsbt_station_r b
    where  a.station_guid=b.guid and b.STAT_APP_Type='LM' and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  else
    select count(*) into V_Temp
    from rsbt_station_r
    where   ORG_Code=areacode  AND STAT_APP_Type<>'LM' and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Temp;

    select count(*) into V_Temp
    from rsbt_equ_r a,rsbt_station_r b
    where  a.station_guid=b.guid and b.STAT_APP_Type='LM' and  b.ORG_Code=areacode and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
    V_Result :=V_Result + V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_STAT_TYPE
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_STAT_TYPE" (stattype varchar2,seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  V_Result :=0;
  if areacode='999999' then
  --全部数据计算
    if(stattype<>'LM') then
      select count(*) into V_Temp
      from rsbt_station
      where  STAT_Status='1' AND STAT_APP_Type=stattype and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
      V_Result :=V_Temp;
   else
      select count(*) into V_Temp
      from rsbt_equ a,rsbt_station b
      where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM' and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
      V_Result :=V_Temp;
    end if;
 else
    if(stattype<>'LM') then
      select count(*) into V_Temp
      from rsbt_station
      where STAT_Status='1' and ORG_Code=areacode  AND STAT_APP_Type=stattype and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
      V_Result :=V_Temp;
    else
      select count(*) into V_Temp
      from rsbt_equ a,rsbt_station b
      where STAT_Status='1' AND a.station_guid=b.guid and b.STAT_APP_Type='LM' and  b.ORG_Code=areacode and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
      V_Result :=V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_TDCDMA
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_TDCDMA" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
       and (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       and c.net_ts='LY0104' --TD-SCDMA系统
       and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
          and ((FREQ_TYPE='0' and (FREQ_UC>=1880 and FREQ_UC<=1900) or (FREQ_UC>=2010 and FREQ_UC<=2025) or(FREQ_UC>=2320 and FREQ_UC<=2370) or (FREQ_UC>=2570 and FREQ_UC<=2620))
                or (FREQ_TYPE='1' and (FREQ_EFE>=1880 and FREQ_EFB<=1900) or (FREQ_EFE>=2010 and FREQ_EFB<=2025) or (FREQ_EFE>=2320 and FREQ_EFB<=2370) or (FREQ_EFE>=2570 and FREQ_EFB<=2620))));
   V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
       and (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       and c.net_ts='LY0104' --TD-SCDMA系统
       and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
          and ((FREQ_TYPE='0' and (FREQ_UC>=1880 and FREQ_UC<=1900) or (FREQ_UC>=2010 and FREQ_UC<=2025) or(FREQ_UC>=2320 and FREQ_UC<=2370) or (FREQ_UC>=2570 and FREQ_UC<=2620))
                or (FREQ_TYPE='1' and (FREQ_EFE>=1880 and FREQ_EFB<=1900) or (FREQ_EFE>=2010 and FREQ_EFB<=2025) or (FREQ_EFE>=2320 and FREQ_EFB<=2370) or (FREQ_EFE>=2570 and FREQ_EFB<=2620))));
   V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_TDCDMA_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_TDCDMA_P" (areacode varchar2,pyear number) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
   select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
       AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND ((FREQ_UC>=1880 AND FREQ_UC<=1900 ) OR (FREQ_UC>=2010 AND FREQ_UC<=2025 )OR (FREQ_UC>=2320 AND FREQ_UC<=2370 )OR (FREQ_UC>=2570 AND FREQ_UC<=2620 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=1880 AND FREQ_EFB<=1900 ) OR (FREQ_EFE>=2010 AND FREQ_EFB<=2025 )OR (FREQ_EFE>=2320 AND FREQ_EFB<=2370 )OR (FREQ_EFE>=2570 AND FREQ_EFB<=2620 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0104'))) n
      where count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
       AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND ((FREQ_UC>=1880 AND FREQ_UC<=1900 ) OR (FREQ_UC>=2010 AND FREQ_UC<=2025 )OR (FREQ_UC>=2320 AND FREQ_UC<=2370 )OR (FREQ_UC>=2570 AND FREQ_UC<=2620 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=1880 AND FREQ_EFB<=1900 ) OR (FREQ_EFE>=2010 AND FREQ_EFB<=2025 )OR (FREQ_EFE>=2320 AND FREQ_EFB<=2370 )OR (FREQ_EFE>=2570 AND FREQ_EFB<=2620 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0104'))) n
      where count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
      V_Result := V_Result + V_Temp;
    end if;
  else
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
       AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND ((FREQ_UC>=1880 AND FREQ_UC<=1900 ) OR (FREQ_UC>=2010 AND FREQ_UC<=2025 )OR (FREQ_UC>=2320 AND FREQ_UC<=2370 )OR (FREQ_UC>=2570 AND FREQ_UC<=2620 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=1880 AND FREQ_EFB<=1900 ) OR (FREQ_EFE>=2010 AND FREQ_EFB<=2025 )OR (FREQ_EFE>=2320 AND FREQ_EFB<=2370 )OR (FREQ_EFE>=2570 AND FREQ_EFB<=2620 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0104'))) n
       where count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
      V_Result := V_Result + V_Temp;
    end if;
       select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
      AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND ((FREQ_UC>=1880 AND FREQ_UC<=1900 ) OR (FREQ_UC>=2010 AND FREQ_UC<=2025 )OR (FREQ_UC>=2320 AND FREQ_UC<=2370 )OR (FREQ_UC>=2570 AND FREQ_UC<=2620 )))
                   OR (FREQ_TYPE='1' AND ((FREQ_EFE>=1880 AND FREQ_EFB<=1900 ) OR (FREQ_EFE>=2010 AND FREQ_EFB<=2025 )OR (FREQ_EFE>=2320 AND FREQ_EFB<=2370 )OR (FREQ_EFE>=2570 AND FREQ_EFB<=2620 ))))) or (STAT_APP_Type='D' AND NET_ts='LY0104'))) n
      where count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
      V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_TDCDMA_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_TDCDMA_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
       and (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       and c.net_ts='LY0104' --TD-SCDMA系统
       and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
          and ((FREQ_TYPE='0' and (FREQ_UC>=1880 and FREQ_UC<=1900) or (FREQ_UC>=2010 and FREQ_UC<=2025) or(FREQ_UC>=2320 and FREQ_UC<=2370) or (FREQ_UC>=2570 and FREQ_UC<=2620))
                or (FREQ_TYPE='1' and (FREQ_EFE>=1880 and FREQ_EFB<=1900) or (FREQ_EFE>=2010 and FREQ_EFB<=2025) or (FREQ_EFE>=2320 and FREQ_EFB<=2370) or (FREQ_EFE>=2570 and FREQ_EFB<=2620))));
   V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
       and (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       and c.net_ts='LY0104' --TD-SCDMA系统
       and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
          and ((FREQ_TYPE='0' and (FREQ_UC>=1880 and FREQ_UC<=1900) or (FREQ_UC>=2010 and FREQ_UC<=2025) or(FREQ_UC>=2320 and FREQ_UC<=2370) or (FREQ_UC>=2570 and FREQ_UC<=2620))
                or (FREQ_TYPE='1' and (FREQ_EFE>=1880 and FREQ_EFB<=1900) or (FREQ_EFE>=2010 and FREQ_EFB<=2025) or (FREQ_EFE>=2320 and FREQ_EFB<=2370) or (FREQ_EFE>=2570 and FREQ_EFB<=2620))));
   V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WCDMA
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_WCDMA" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
       AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       --and c.net_ts='LY0103' --WCDMA系统
       and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
       AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145 ))));
   V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station a,rsbt_net c
    where a.net_guid=c.guid and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
       AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       --and c.net_ts='LY0103' --WCDMA系统
       and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
       AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145 ))));
   V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WCDMA_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_WCDMA_P" (areacode varchar2,pyear number) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
     select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
        AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145))))  or (STAT_APP_Type='D' AND NET_ts='LY0103'))) n
    where count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
    select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
       AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145)))) or (STAT_APP_Type='D' AND NET_ts='LY0103'))) n
    where count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  else
   select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_deptitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
  AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145)))) or (STAT_APP_Type='D'))) n
    where area_code=areacode AND count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
    V_Result :=V_Temp;
    end if;
      select sum(sum_pay) into V_Temp
    from t_rim_rsm_pay_applyitem m,
      (select distinct app_code,stat_app_type||stat_tdi decl_code
    from rsbt_station a,rsbt_net c,RSBT_FREQ D
    where a.net_guid=c.guid  AND A.GUID=D.STATION_GUID and substr(app_code,1,length(app_code)-12)='T'
  AND ((STAT_APP_Type='C'  AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145)))) or (STAT_APP_Type='D'))) n
    where area_code=areacode AND count_year=pyear and to_char(m.apply_code)=substr(n.app_code,-12,12) and m.decl_code=n.decl_code;
    if nvl(V_Temp,0)<>0 then
   V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WCDMA_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_WCDMA_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
 begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
       AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       --and c.net_ts='LY0103' --WCDMA系统
       and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
       AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145 ))));
   V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
    from rsbt_station_r a,rsbt_net_r c
    where a.net_guid=c.guid  and substr(app_code,1,length(app_code)-12)='T'
       and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND a.org_code=areacode
       AND (STAT_APP_Type='C' OR STAT_APP_TYPE='D')
       --and c.net_ts='LY0103' --WCDMA系统
       and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
       AND ((FREQ_TYPE='0' AND (FREQ_UC>=2130 AND FREQ_UC<=2145 ))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=2130 AND FREQ_EFB<=2145 ))));
   V_Result :=V_Temp;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WS
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_WS" (seldate date,areacode varchar2,gethistory varchar2)

return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
       from rsbt_station a,rsbt_net c
        where a.net_guid=c.guid and STAT_APP_Type='C' and substr(app_code,1,length(app_code)-12)

='T'and STAT_Status='1'
           and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-

7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
           and c.net_ts<>'LY0104' --避免与TD-SCDMA系统的台站重复
           and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
               AND ((FREQ_TYPE='0' AND (FREQ_UC>=1900 AND FREQ_UC<=1920 ))
                  OR (FREQ_TYPE='1' AND (FREQ_EFE>=1900 AND FREQ_EFB<=1920 ))));
    V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
       from rsbt_station a,rsbt_net c
        where a.net_guid=c.guid and STAT_APP_Type='C' and substr(app_code,1,length(app_code)-12)

='T'and STAT_Status='1'
           and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-

7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND

a.org_code=areacode
           and c.net_ts<>'LY0104' --避免与TD-SCDMA系统的台站重复
           and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
               AND ((FREQ_TYPE='0' AND (FREQ_UC>=1900 AND FREQ_UC<=1920 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=1900 AND FREQ_EFB<=1920 ))));
    V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WS_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_WS_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where (item_code='410000' or item_code='120200')
			and count_year=pyear;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
		where (item_code='410000' or item_code='120200')
			and count_year=pyear;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp+V_Result;
		end if;
	else
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_deptitem
		where (item_code='410000' or item_code='120200')
			and area_code=areacode AND count_year=pyear;
		if nvl(V_Temp,0)<>0 then
			V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp from t_rim_rsm_pay_applyitem
    where (item_code='410000' or item_code='120200')
      and area_code=areacode AND count_year=pyear;
    if nvl(V_Temp,0)<>0 then
      V_Result :=V_Temp+V_Result;
    end if;
  end if;
      return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WS_R
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_WS_R" (seldate date,areacode varchar2,gethistory varchar2)

return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count(a.guid) into V_Temp
       from rsbt_station_r a,rsbt_net_r c
        where a.net_guid=c.guid and STAT_APP_Type='C' and substr(app_code,1,length(app_code)-12)

='T'
           and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-

7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
           and c.net_ts<>'LY0104' --避免与TD-SCDMA系统的台站重复
           and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
               AND ((FREQ_TYPE='0' AND (FREQ_UC>=1900 AND FREQ_UC<=1920 ))
                  OR (FREQ_TYPE='1' AND (FREQ_EFE>=1900 AND FREQ_EFB<=1920 ))));
    V_Result :=V_Temp;
  else
    select count(a.guid) into V_Temp
       from rsbt_station_r a,rsbt_net_r c
        where a.net_guid=c.guid and STAT_APP_Type='C' and substr(app_code,1,length(app_code)-12)

='T'
           and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-

7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate AND

a.org_code=areacode
           and c.net_ts<>'LY0104' --避免与TD-SCDMA系统的台站重复
           and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
               AND ((FREQ_TYPE='0' AND (FREQ_UC>=1900 AND FREQ_UC<=1920 ))
                   OR (FREQ_TYPE='1' AND (FREQ_EFE>=1900 AND FREQ_EFB<=1920 ))));
    V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WX
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_WX" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count( a.guid) into V_Temp
    from rsbt_station a
    where  STAT_Status='1' AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
        and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
        AND ((FREQ_TYPE='0' AND (FREQ_UC>=223 AND FREQ_UC<=235) or (FREQ_UC>=866 AND FREQ_UC<=870))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=223 AND FREQ_EFB<=235 ) or (FREQ_EFE>=866 AND FREQ_EFB<=870 ))));
    V_Result :=V_Temp;
  else
    select count( a.guid) into V_Temp
    from rsbt_station a
     where  STAT_Status='1' AND STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T' and a.org_code=areacode
        and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        and exists (select d.station_guid from rsbt_freq d where a.guid=d.station_guid
        AND ((FREQ_TYPE='0' AND (FREQ_UC>=223 AND FREQ_UC<=235) or (FREQ_UC>=866 AND FREQ_UC<=870))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=223 AND FREQ_EFB<=235 ) or (FREQ_EFE>=866 AND FREQ_EFB<=870 ))));
    V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WX_P
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_WX_P" (areacode varchar2,pyear number) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem
		where count_year=pyear and  item_code='140100';
		if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applyitem
		where count_year=pyear and item_code='140100';
		if nvl(V_Temp,0)<>0 then
		V_Result := V_Result + V_Temp;
		end if;
	else
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_deptitem
		where area_code=areacode AND count_year=pyear and item_code='140100';
		if nvl(V_Temp,0)<>0 then
		V_Result :=V_Temp;
		end if;
		select sum(sum_pay) into V_Temp
		from t_rim_rsm_pay_applyitem
		where area_code=areacode AND count_year=pyear  and item_code='140100';
		if nvl(V_Temp,0)<>0 then
    V_Result := V_Result + V_Temp;
    end if;
  end if;
  return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_WX_R
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_COUNT_WX_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
  V_Result number:=0;
  V_Temp   number;
begin
  if areacode='999999' then
  --全部数据计算
    select count( a.guid) into V_Temp
    from rsbt_station_r a
    where  STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T'
        and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
        AND ((FREQ_TYPE='0' AND (FREQ_UC>=223 AND FREQ_UC<=235) or (FREQ_UC>=866 AND FREQ_UC<=870))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=223 AND FREQ_EFB<=235 ) or (FREQ_EFE>=866 AND FREQ_EFB<=870 ))));
    V_Result :=V_Temp;
  else
    select count( a.guid) into V_Temp
    from rsbt_station_r a
     where  STAT_APP_Type='TF' and substr(app_code,1,length(app_code)-12)='T' and a.org_code=areacode
        and nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
        and exists (select d.station_guid from rsbt_freq_r d where a.guid=d.station_guid
        AND ((FREQ_TYPE='0' AND (FREQ_UC>=223 AND FREQ_UC<=235) or (FREQ_UC>=866 AND FREQ_UC<=870))
             OR (FREQ_TYPE='1' AND (FREQ_EFE>=223 AND FREQ_EFB<=235 ) or (FREQ_EFE>=866 AND FREQ_EFB<=870 ))));
    V_Result :=V_Temp;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_YY
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_YY" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		   from rsbt_station a
		   where nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
		   		 and STAT_APP_Type<>'LM' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='PA';
		V_Result :=V_Temp;
		select count(*) into V_Temp
		  from rsbt_equ a,rsbt_station b
		   where a.station_guid=b.guid and b.STAT_APP_Type='LM' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='PA'
		    and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Result + V_Temp;
	else
		select count(*) into V_Temp
		  from rsbt_station a
		  where nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
		  	 and STAT_APP_Type<>'LM' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='PA'
				 AND a.org_code=areacode;
		V_Result :=V_Temp;
		select count(*) into V_Temp
		  from rsbt_equ a,rsbt_station b
		  where a.station_guid=b.guid and b.STAT_APP_Type='LM' and STAT_Status='1' and substr(app_code,1,length(app_code)-12)='PA'
		  	 and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
		    AND b.org_code=areacode;
		V_Result :=V_Result + V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_COUNT_YY_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_COUNT_YY_R" (seldate date,areacode varchar2,gethistory varchar2) return number
is
	V_Result number:=0;
	V_Temp   number;
 begin
	if areacode='999999' then
	--全部数据计算
		select count(*) into V_Temp
		   from rsbt_station_r a
		   where nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
		   		 and STAT_APP_Type<>'LM'  and substr(app_code,1,length(app_code)-12)='PA';
		V_Result :=V_Temp;
		select count(*) into V_Temp
		  from rsbt_equ_r a,rsbt_station_r b
		   where a.station_guid=b.guid and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='PA'
		    and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate;
		V_Result :=V_Result + V_Temp;
	else
		select count(*) into V_Temp
		  from rsbt_station_r a
		  where nvl(STAT_Date_Start,to_date( decode(substr(app_code,length(app_code)-7,4),'0000','1900',substr(app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
		  	 and STAT_APP_Type<>'LM'  and substr(app_code,1,length(app_code)-12)='PA'
				 AND a.org_code=areacode;
		V_Result :=V_Temp;
		select count(*) into V_Temp
		  from rsbt_equ_r a,rsbt_station_r b
		  where a.station_guid=b.guid and b.STAT_APP_Type='LM' and substr(app_code,1,length(app_code)-12)='PA'
		  	 and nvl(b.STAT_Date_Start,to_date( decode(substr(b.app_code,length(app_code)-7,4),'0000','1900',substr(b.app_code,length(app_code)-7,4))||'.1.1','YYYY.MM.DD'))<=seldate
		    AND b.org_code=areacode;
		V_Result :=V_Result + V_Temp;
	end if;
	return V_Result;
 end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_DATE
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_DATE"(inputdate date) return varchar2
is
  curyear number;
  curmonth number;
  curday  number;
  yearchar varchar2(20);
  midnum  number;
  midyear  varchar2(10);
  midmonth varchar2(5);
  midday  varchar2(5);
  V_Result varchar2(30);
begin
  midday:='';
  midmonth:='';
  yearchar:='0一二三四五六七八九';
  curyear:=to_number(to_char(inputdate,'YYYY'));
  curmonth:=to_number(to_char(inputdate,'MM'));
  curday:=to_number(to_char(inputdate,'dd'));
  midnum:=trunc(curyear/1000,0);
  midyear:=substr(yearchar,midnum+1,1);
  curyear:=curyear-midnum*1000;
  midnum:=trunc(curyear/100,0);
  midyear:=midyear||substr(yearchar,midnum+1,1);
  curyear:=curyear-midnum*100;
  midnum:=trunc(curyear/10,0);
  midyear:=midyear||substr(yearchar,midnum+1,1);
  curyear:=curyear-midnum*10;
  V_Result:=midyear||substr(yearchar,curyear+1,1)||'年';
  if curmonth=10 then
    midmonth:='十';
  elsif curmonth=11 then
    midmonth:='十一';
  elsif curmonth=12 then
    midmonth:='十二';
  else
    midmonth:=substr(yearchar,curmonth+1,1);
  end if;
  V_Result:=V_Result||midmonth||'月';
  midnum:=trunc(curday/10,0);
  if midnum>1 then
    midday:=substr(yearchar,midnum+1,1)||'十';
  elsif midnum=1 then
    midday:='十';
  end if;
  curday:=curday-midnum*10;
  if curday>0 then
    V_Result:=V_Result||midday||substr(yearchar,curday+1,1)||'日';
  else
    V_Result:=V_Result||midday||'日';
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_DISTANCECOUNT
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_DISTANCECOUNT"(longi1 number,lati1 number,longi2 number,lati2 number) return number is
  x1 number;
  x2 number;
  y1 number;
  y2 number;
  distance number;
  procedure LLToXY(lati in number,L in number,Num in number,X in out number,Y in out number)
  is
    B number;
    e12  number;
    c  number;
    xx  number;
    m  number;
    n  number;
    Nn  number;
    t  number;
    PI  number;
    P0  number;
  begin
    PI := 3.1415926535897932;
    P0 := 57.2957795130823210;
    B := lati/P0;
    e12 := 0.006739501819473;
    c := 6399596.6519880105;
    xx := 111133.0047*Lati - (32009.8575*sin(B) + 133.9602*power(sin(B),3) + 0.6976*power(sin(B),5) + 0.0039*power(sin(B),7))*cos(B);
    m := cos(B)*L*PI/180.;
    n := sqrt(e12) * cos(B);
    Nn := c / sqrt(1+n*n);
    t := tan(B);

    X := xx+Nn*t*( m*m/2 + (5-t*t+9*n*n+4*power(n,4))*power(m,4)/24 + (61-58*t*t+power(t,4))*power(m,6)/720);
    Y := Nn*(m + (1.-t*t+n*n)*power(m,3)/6.+(5.-18.*t*t+power(t,4)+14*n*n-58*n*n*t*t)*power(m,5)/120.);
    Y:=Y+5000000+Num*10000000;
  end LLToXY;

  procedure LLToXY66(longib in number,longie in number,longi in number,lati in number,X in out number,Y in out number)
  is
    L  number;
    Num  number;
  begin
    if floor(longi/6) = longi/6.0 then
      L := 3+longi-longib;
      Num := longib/6.0;
    else
      L := longi-floor(longib/6.0)*6+3;
      Num :=floor(longib/6.0);
    end if;
    LLToXY(lati,L,Num,X,Y);
  end LLToXY66;

  procedure LLToXY69(longib in number,longie in number,longi in number,lati in number,X in out number,Y in out number)
  is
    L  number;
    Num  number;
  begin
    if floor(longi/6) = longi/6.0 then
      L := 3;
      Num := longib/6.0;
    else
      L := longi-floor(longib/6.0)*6+3;
      Num :=floor(longib/6.0);
    end if;
    LLToXY(lati,L,Num,X,Y);
  end LLToXY69;

  procedure LLToXY96(longib in number,longie in number,longi in number,lati in number,X in out number,Y in out number)
  is
    L  number;
    Num  number;
  begin
    if floor(longi/6) = longi/6.0 then
      L := -3;
      Num := longib/6.0+1;
    else
      L := longi-floor(longib/6.0)*6-3;
      Num :=floor(longib/6.0)+1;
    end if;
    LLToXY(lati,L,Num,X,Y);
  end LLToXY96;

  procedure LLToXY93(longib in number,longie in number,longi in number,lati in number,X in out number,Y in out number)
  is
    L  number;
    Num  number;
  begin
    if floor(longi/6) = longi/6.0 then
      L := 3;
      Num := longib/6.0+1;
    else
      L := longi-floor(longib/6.0)*6-3;
      Num :=floor(longib/6.0)+1;
    end if;
    LLToXY(lati,L,Num,X,Y);
  end LLToXY93;

  procedure LLToXY36(longib in number,longie in number,longi in number,lati in number,X in out number,Y in out number)
  is
    L  number;
    Num  number;
  begin
    if floor(longi/6) = longi/6.0 then
      L := longie-longi-3;
      Num := longib/6.0+1;
    else
      L := longi-floor(longib/6.0)*6-3;
      Num :=floor(longib/6.0)+1;
    end if;
    LLToXY(lati,L,Num,X,Y);
  end LLToXY36;

  procedure LLToXY39(longib in number,longie in number,longi in number,lati in number,X in out number,Y in out number)
  is
    L  number;
    Num  number;
  begin
    if floor(longi/6) = longi/6.0 then
      L := longi-longie+3;
      Num := longib/6.0+1;
    else
      L := longi-floor(longie/6.0)*6-3;
      Num :=floor(longie/6.0)+1;
    end if;
    LLToXY(lati,L,Num,X,Y);
  end LLToXY39;

begin
  if  Longi1=floor(Longi1/6.0)*6.0 then
    if Longi2=floor(Longi2/6.0) *6.0 then
      LLToXY66(Longi1, Longi2,Longi1,Lati1,x1,y1);
      LLToXY66(Longi1, Longi2,Longi2,Lati2,x2,y2);
    else
      LLToXY69(Longi1, Longi2,Longi1,Lati1,x1,y1);
      LLToXY69(Longi1, Longi2,Longi2,Lati2,x2,y2);
    end if;
  else
     if Longi1>Longi2 then
      if Longi2=floor(Longi2/6.0)*6.0 then
        LLToXY96(Longi1, Longi2,Longi1,Lati1,x1,y1);
        LLToXY96(Longi1, Longi2,Longi2,Lati2,x2,y2);
      else
        LLToXY93(Longi1, Longi2,Longi1,Lati1,x1,y1);
        LLToXY93(Longi1, Longi2,Longi2,Lati2,x2,y2);
      end if;
    else
      if Longi2=floor(Longi2/6.0)*6.0 then
        LLToXY36(Longi1, Longi2,Longi1,Lati1,x1,y1);
        LLToXY36(Longi1, Longi2,Longi2,Lati2,x2,y2);
      else
        LLToXY39(Longi1, Longi2,Longi1,Lati1,x1,y1);
        LLToXY39(Longi1, Longi2,Longi2,Lati2,x2,y2);
			end if;
		end if;
	 end if;
	distance :=sqrt( power((x1-x2),2)+power((y1-y2),2) );
	return distance;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETANTESIZE
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETANTESIZE"(asize in varchar2) return float is
	V_Result float;
begin
  if asize is null then
     V_Result := 0;
  else
	    V_Result := to_number(asize);
  end if;
	return V_Result;
EXCEPTION
	WHEN OTHERS THEN
	V_Result := 0;
	return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETAREACODE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETAREACODE"(areacode varchar2)  return varchar2 is
   PVersion varchar2(40);
   i_count number(10);
   begin
   PVersion := areacode;
   if PVersion is null then
     SELECT   keyvalue into PVersion FROM t_rim_comm_appsettings where keyname='Area_Code' ;
   else
       select count(*) into i_count from RSBT_CODE_DIC where code_data_type='00032006' and cn=areacode;
       if i_count=0 then
          SELECT   keyvalue into PVersion FROM t_rim_comm_appsettings where keyname='Area_Code' ;
       end if;
   end if;
     return PVersion;
   end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETCHILDORGCOUNT
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETCHILDORGCOUNT"( parentGuid varchar2) return number  is
  retCount number;
begin
  select count(*) into retCount from t_rim_rsm_org_relev t where t.parent_org_guid = parentGuid;
  return(retCount);
end F_rim_rsm_GetChildOrgCount;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETCODENAME
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETCODENAME"(CODE in varchar2,code_data_type_A in varchar2) return varchar2 is
  Result varchar2(80);
  CodeName varchar2(80);
  cursor PT is select CODE_CHI_NAME from  RSBT_CODE_DIC where CN=CODE and code_data_type=code_data_type_A;
  V_SF PT%ROWTYPE;
begin
  ----根据代码编码获取----代码中文名称----报表
  open PT;
  loop
     FETCH PT INTO V_SF;
        EXIT WHEN PT%notfound;
     CodeName := V_SF.CODE_CHI_NAME;
     Exit;
  end loop;
  close PT;
  Result := CodeName;
  return(Result);

end F_rim_rsm_GetCodeName;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFEENO
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETFEENO" (year1 number) return varchar2 is
  V_Result varchar2(8);
  v_sum number;
begin
  select count(*) into v_sum from v_RIM_RSM_fee_no where item_no like to_char(year1)||'%';
  if v_sum > 0 then
    select to_char(max(to_number(item_no)+1)) into v_result from v_RIM_RSM_fee_no where item_no like to_char(year1)||'%';
  else
    V_Result:=to_char(year1)||'0001';
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_BAND_UNIT
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETFREQ_BAND_UNIT"(FREQ_Band in number) return varchar2 is
  V_RTN varchar2(2);
  fREQ_Bandtmp number;
begin
  V_RTN := '1';
  fREQ_Bandtmp := FREQ_Band;
  if FREQ_Band is null then
     RETURN   V_RTN;
  end if;
	if fREQ_Bandtmp<1 THEN
		V_RTN := '0';
	END IF;
	if fREQ_Bandtmp >= 1000 THEN
		V_RTN := '2';
	END IF;
	RETURN V_RTN;
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_E_STATGUID
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETFREQ_E_STATGUID"(statguid varchar2) return varchar2 is
  Result varchar2(800);
  CURSOR c_freqs is select t.freq_efb||'-'||t.freq_efe freq from rsbt_freq t where t.station_guid = statguid;
  v_freq c_freqs%rowtype;
begin
  result := '';
  OPEN c_freqs;
  loop
    fetch c_freqs into v_freq;
    exit when c_freqs%notfound;
    result := result ||v_freq.freq||';';
  end loop;
  close c_freqs;
  return(Result);
end f_rim_rsm_getfreq_e_statguid;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_FRE_POW_UNI
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETFREQ_FRE_POW_UNI"(freq_Pow in number) return varchar2 is
  V_RTN varchar2(2);
  fREQ_PowTmp number;
begin
  V_RTN := '4';
  fREQ_PowTmp := freq_Pow;
	if freq_Pow is null then
		fREQ_PowTmp :=0;
	end if;
	if fREQ_PowTmp<1 THEN
		V_RTN := '3';
	END IF;
	if fREQ_PowTmp >= 1000 THEN
		V_RTN := '5';
	END IF;
	RETURN V_RTN;
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_FRE_POWUNI
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETFREQ_FRE_POWUNI"(freq_Pow in number) return varchar2 is
  V_RTN varchar2(2);
  fREQ_PowTmp number;
begin
  V_RTN := '4';
  fREQ_PowTmp := freq_Pow;
	if freq_Pow is null then
		fREQ_PowTmp :=0;
	end if;
	if fREQ_PowTmp<1 THEN
		V_RTN := '3';
	END IF;
	if fREQ_PowTmp >= 1000 THEN
		V_RTN := '5';
	END IF;
	RETURN V_RTN;
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_FREQ_UNIT
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETFREQ_FREQ_UNIT"(FREQ1 in number,FREQ2 in number,FREQ3 in number,FREQ4 in number) return varchar2 is
	V_RTN varchar2(2);
  fREQ_tmp number;
begin
	V_RTN := '1';
	fREQ_tmp:=FREQ1;
	if nvl(fREQ_tmp,0)=0 then
	   fREQ_tmp:=FREQ2;
	end if;
	if nvl(fREQ_tmp,0)=0 then
	   fREQ_tmp:=FREQ3;
	end if;
	if nvl(fREQ_tmp,0)=0 then
	   fREQ_tmp:=FREQ4;
	end if;
	if nvl(fREQ_tmp,0)=0 then
		RETURN  V_RTN;
	end if;
	if fREQ_tmp<29.7 THEN
		V_RTN := '0';
	elsif fREQ_tmp >= 10000 THEN
		V_RTN := '2';
	END IF;
	RETURN V_RTN;
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_R
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETFREQ_R"(FREQ in number,UNIT IN varchar2) return NUMBER is
	V_RTN NUMBER(14,7);
begin
	V_RTN := FREQ;
	if UNIT = '2' THEN
		V_RTN := FREQ/1000;
	END IF;
	--if UNIT = '0' THEN
	--	V_RTN := FREQ*1000;
	--END IF;
	if UNIT = '0' THEN
	    IF FREQ <= 9999.9999999 THEN
	       V_RTN := FREQ*1000;
	    ELSE
	       IF NVL(FREQ,9999999.9999999)=9999999.9999999 THEN
						V_RTN := TO_NUMBER(NULL);
					ELSE
						V_RTN := 9999999.9999999;
					END IF;
	    END IF;
	END IF;

	RETURN V_RTN;
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETFREQ_R_STATGUID
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETFREQ_R_STATGUID"(statguid varchar2) return varchar2 is
  Result varchar2(800);
  CURSOR c_freqs is select t.freq_rfb||'-'||t.freq_rfe freq from rsbt_freq t where t.station_guid = statguid;
  v_freq c_freqs%rowtype;
begin
  result := '';
  OPEN c_freqs;
  loop
    fetch c_freqs into v_freq;
    exit when c_freqs%notfound;
    result := result ||v_freq.freq||';';
  end loop;
  close c_freqs;
  return(Result);
end f_rim_rsm_getfreq_r_statguid;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETGAIN_I
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETGAIN_I"(GAIN in number,UNIT IN varchar2) return NUMBER is
	V_RTN NUMBER(14,7);
begin
  V_RTN := GAIN;
	if UNIT = '1' then
		V_RTN := GAIN;
	elsif UNIT = '0' then
		V_RTN := GAIN - 2.15;
	end if;
	RETURN V_RTN;
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPAADDRBYAPPCODE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETPAADDRBYAPPCODE"(appCode in varchar2) return varchar2 is
  Result varchar2(200);
begin
  result := '';
  select pa.app_pa_contact_addr into result from RSBT_APPLY_PA pa where rownum=1 and pa.app_guid = (select guid from rsbt_apply where app_code=appCode);
  return(Result);

  exception
     when others then
      result := '';
      return(Result);
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPANAME
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETPANAME" (appCode Varchar2,isbak Varchar2) return varchar2 is
  V_Result varchar2(40);
BEGIN
    IF isbak='r' THEN
        SELECT app_pa_name INTO V_Result  FROM rsbt_apply_pa_r a,rsbt_apply_r b WHERE a.app_guid=b.guid  AND b.app_code=appCode AND rownum=1;
    ELSE
         SELECT app_pa_name INTO V_Result  FROM rsbt_apply_pa a,rsbt_apply b WHERE a.app_guid=b.guid  AND b.app_code=appCode AND rownum=1;
    END IF;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPANAME_QUERYLICE
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETPANAME_QUERYLICE" (appCode Varchar2) return varchar2 is
  V_Result varchar2(80);
  AppCode_Temp varchar2(80);
  ----查询执照数据PA的单位名称
  cursor PT is SELECT app_pa_name  FROM rsbt_apply_pa a,rsbt_apply b WHERE a.app_guid=b.guid  AND b.app_code=appCode AND rownum=1;
  V_SF PT%ROWTYPE;
  --历史库
  cursor PT_H is SELECT app_pa_name  FROM rsbt_apply_pa_r a,rsbt_apply_r b WHERE a.app_guid=b.guid  AND b.app_code=appCode AND rownum=1;
  V_SF_H PT_H%ROWTYPE;
BEGIN
  open PT;
  loop
     FETCH PT INTO V_SF;
        EXIT WHEN PT%notfound;
     AppCode_Temp := V_SF.app_pa_name;
     Exit;
  end loop;
  close PT;
  ----查询历史库（如果AppCode_Temp is null）
  if AppCode_Temp is null then
    open PT_H;
    loop
       FETCH PT_H INTO V_SF_H;
          EXIT WHEN PT_H%notfound;
         AppCode_Temp := V_SF_H.app_pa_name;
       Exit;
     end loop;
     close PT_H;
  end if;
  --
  V_Result := AppCode_Temp;
  return(V_Result);

end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPANAMEBYAPPCODE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETPANAMEBYAPPCODE"(appCode in varchar2) return varchar2 is
  Result varchar2(200);
begin
  result := '';
  select pa.app_pa_name into result from RSBT_APPLY_PA pa where rownum=1 and pa.app_guid = (select guid from rsbt_apply where app_code=appCode);
  return(Result);
  exception
     when others then
      result := '';
      return(Result);
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPANAMEBYAPPCODE_H
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETPANAMEBYAPPCODE_H"(appCode in varchar2) return varchar2 is
  Result varchar2(200);
begin
  result := '';
  select pa.app_pa_name into result from RSBT_APPLY_PA_H pa where rownum=1 and pa.app_guid = (select guid from rsbt_apply_H where app_code=appCode);
  return(Result);
  exception
     when others then
      result := '';
      return(Result);
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPARAMETERVERSION
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETPARAMETERVERSION"  return varchar2 is
   PVersion varchar2(40);
   begin
     SELECT   valuedesc into PVersion FROM t_rim_comm_appsettings where keyid='ParameterVersion' ;
     return PVersion;
   end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETPOWER_W
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETPOWER_W"(EPOWER IN NUMBER,UNIT IN VARCHAR2) RETURN NUMBER IS
V_RTN NUMBER(14,7);
V_TMP NUMBER(14,7);
V_ISZ BOOLEAN;
BEGIN
IF NVL(EPOWER,0)<>0 THEN
     V_TMP := EPOWER;
     IF EPOWER<0 THEN
        V_ISZ := FALSE;
        V_TMP := EPOWER * -1;
     END IF;
     SELECT DECODE(UNIT,'5',V_TMP/1000,'3',V_TMP*1000,
          '2',LOG(10, V_TMP) * 10,'1',(LOG(10, V_TMP)*10) + 30,
          '0',LOG(10,SQRT(50*V_TMP))*20+120,V_TMP) INTO V_RTN FROM DUAL;
END IF;
IF  EPOWER=0 THEN
    V_RTN:=0;
END IF;
IF V_ISZ=FALSE THEN
     V_RTN := V_RTN * -1;
END IF;
  RETURN ROUND(V_RTN,2);
END;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETRELEVTYPE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETRELEVTYPE"(orgGuid varchar2) return varchar2 is
  retType varchar2(10);
  itemCount number;
begin
  retType := '无';
  select count(*) into itemCount from t_rim_rsm_org_relev t where t.parent_org_guid = orgGuid;
  if itemCount > 0 then
  retType := '上级单位';
  end if;
  select count(*) into itemCount from t_rim_rsm_org_relev t where t.child_org_guid = orgGuid;
  if itemCount > 0 then
  retType := '下属单位';
  end if;
  return(retType);
end f_rim_rsm_getrelevtype;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETSTATCOUNTBYTYPEID
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETSTATCOUNTBYTYPEID"(typeguid varchar2,statguid varchar2) return number is
  Result number;
begin
  Result := 0;
      select count(*) into Result from t_rim_rsm_stat_type_relev t where t.stat_type_guid = typeguid and t.stat_guid = statguid ;
  return(Result);
end f_rim_rsm_GetStatCountByTypeID;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETSTATTYPES
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETSTATTYPES"(stat_no varchar2) return varchar2 is
  Result varchar2(800);
  CURSOR c_types is  select t.typename from rsbt_station s,t_rim_rsm_stat_type_relev r,t_rim_rsm_station_type t where s.guid = r.stat_guid and r.stat_type_guid = t.guid and s.guid = stat_no;
  v_type c_types%rowtype;
begin
  result := '';
  OPEN c_types;
  loop
    fetch c_types into v_type;
    exit when c_types%notfound;
    result := result ||v_type.typename||'; ';
  end loop;
  close c_types;
  return(Result);
end f_rim_rsm_getstattypes;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETTECHCODE
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_GETTECHCODE"(app_code_I varchar2) return varchar2
is
  V_Result varchar2(50);
  V_DECL VARCHAR2(10);
        CURSOR c_decl IS select distinct stat_app_type from rsbt_station where app_code=app_code_I order by stat_app_type;
        r_decl c_decl%ROWTYPE;
begin
      V_DECL := '#';
  OPEN c_decl;
  LOOP
      FETCH c_decl INTO r_decl;
      EXIT WHEN c_decl%NOTFOUND;
         if r_decl.stat_app_type <> V_DECL then
            V_DECL := r_decl.stat_app_type;
            V_Result:=V_Result || '/' || V_DECL;
         End if;
  end loop;
  CLOSE c_decl;
  if length(V_Result)>0 then
     return substr(V_Result,2,length(V_Result)-1);
  else
     return '';
  end if;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_GETUSERLISTBYAREA
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_GETUSERLISTBYAREA"(guid in varchar2,resultType in varchar2 default '0') return varchar2 is
  result varchar2(10000);
  v_name varchar2(100);
   nameid varchar2(100);
  i_mid number(4);
  CURSOR C_USERLIST IS SELECT RESID,PRINCIPALID,PRINCIPALTYPE,PERMISSIONVALUE FROM T_RIM_COMM_DATA_ACL WHERE RESID=guid;
  V_USERLIST C_USERLIST%ROWTYPE;
begin
  result := '';
  OPEN C_USERLIST;
  LOOP
    FETCH C_USERLIST INTO V_USERLIST;
    EXIT WHEN C_USERLIST%NOTFOUND;
      if V_USERLIST.PRINCIPALTYPE=0 then
        select count(*) into i_mid from T_RIM_comm_user where userid=V_USERLIST.PRINCIPALID;
        if i_mid>0 then
          select nvl(userName,userid),userid into v_name, nameid from T_RIM_comm_user where userid=V_USERLIST.PRINCIPALID;
        end if;
      ELSIF V_USERLIST.PRINCIPALTYPE=1 then
        select count(*) into i_mid from T_RIM_comm_role where ROLENAME=V_USERLIST.PRINCIPALID;
        if i_mid>0 then
          select nvl(ROLEDESC,ROLENAME),ROLENAME into v_name, nameid from T_RIM_comm_role where ROLENAME=V_USERLIST.PRINCIPALID;
        end if;
      else
        select count(*) into i_mid from t_rim_comm_department where DEPTID=V_USERLIST.PRINCIPALID;
        if i_mid>0 then
          select DEPTNAME,DEPTID into v_name,nameid from t_rim_comm_department where DEPTID=V_USERLIST.PRINCIPALID;
        --else  在gdims 下没有找到oa_company相对应的表
        --  select count(*) into i_mid from oa_company where DEPTID=V_USERLIST.PRINCIPALID;
        --  if i_mid>0 then
        --    select name into v_name from oa_company where DEPTID=V_USERLIST.PRINCIPALID;
        --  end if;
        end if;
      end if;
      if v_name='' then
        Result := Result;
      else
        --20111009 wangzh 只需要获取数据名称
        if resultType = '1' then
           Result := Result || ' ' || v_name || ';' ;
        else
           Result := Result || '$' || V_USERLIST.PRINCIPALTYPE || '_' || v_name || '_' || nameid;
        end if;
      end if;
  END LOOP;
  CLOSE C_USERLIST;
  if Result = '' then
    Result := Result;
  else
    Result:=substr(Result,2,length(Result)-1);
  end if;
  return(Result);
  exception
     when others then
      Result := '';
      return(Result);
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_ISALERT
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_ISALERT"(end_date DATE,isalert VARCHAR2) return varchar2 is
  retVal varchar2(1) ;
begin
  retVal:='1';
  if end_date is null or isalert is null then
     retVal:='1';
  else
     if end_date < sysdate  then
        retVal:=isalert;
      else
         retVal:='0';
      end if;
  end if;
  return(retVal);
end f_rim_rsm_isalert;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_LICEVALIDCHECK
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_LICEVALIDCHECK"(validdate date,licstatues varchar2) return varchar2
is
	V_Result varchar2(4);
	V_Tmp varchar2(24);
  V_Date date;
 begin
	if validdate is null then
		V_Result:='未发';
	else
    V_Tmp := to_char(validdate,'yyyy-mm-dd');
    V_Date := to_date(V_Tmp || ' 23:59:59','yyyy-mm-dd HH24:Mi:ss');
    if licstatues='2' then
       return '停用';
    end if;
    if licstatues='4' then
          return '注销';
    end if;
    if V_Date<sysdate then
  		V_Result:='过期';
  	else if licstatues='1' then
  		V_Result:='已发';
      end if;
       if licstatues='3' then
      V_Result:='换发';
      end if;
    end if;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_LICEVALIDCHECK1
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_LICEVALIDCHECK1"(validdate date,licstatues varchar2) return varchar2
is
	V_Result varchar2(4);
	V_Tmp varchar2(24);
  V_Date date;
 begin
	if validdate is null then
		V_Result:='未发';
	else
    V_Tmp := to_char(validdate,'yyyy-mm-dd');
    V_Date := to_date(V_Tmp || ' 23:59:59','yyyy-mm-dd HH24:Mi:ss');
    if V_Date<sysdate then
  		V_Result:='过期';
  	else
      if licstatues='1' then
  		V_Result:='已发';
      end if;
      if licstatues='2' then
      V_Result:='停用';
      end if;
    end if;
  end if;
	return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_LICEVALIDCHECKFLAG
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_LICEVALIDCHECKFLAG"(validdate date,licstatues varchar2) return varchar2
is
----执照状态标示（1：已发，2：停用，3：换发，4：注销，5：过期，6：未发）
  V_Result varchar2(4);
  V_Tmp varchar2(24);
  V_Date date;
 begin
  if validdate is null then
    --V_Result:='未发';
    V_Result:='6';
  else
    V_Tmp := to_char(validdate,'yyyy-mm-dd');
    V_Date := to_date(V_Tmp || ' 23:59:59','yyyy-mm-dd HH24:Mi:ss');
    if licstatues='2' then
       --return '停用';
       return '2';
    end if;
    if licstatues='4' then
          --return '注销';
          return '4';
    end if;
    if V_Date<sysdate then
      --V_Result:='过期';
      V_Result:='5';
    else if licstatues='1' then
       --V_Result:='已发';
       V_Result:='1';
    end if;
       if licstatues='3' then
         --V_Result:='换发';
         V_Result:='3';
       end if;
    end if;
  end if;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_MONEY
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_MONEY"(money_num number) return varchar2
is
  v_word varchar2(100);
  v_tmp varchar2(100);
  V_Result varchar2(100);
  v_num number;
  v_word1 varchar2(10);
  v_word2 varchar2(10);
begin
  v_word:='零壹贰叁肆伍陆柒捌玖分角元拾佰仟万拾佰仟亿';
  V_Result := '';
  v_tmp := to_char(floor(money_num*100));
  v_num :=length(v_tmp);
  while v_num >0  loop
    v_word1 :=substr(v_word,to_number(substr(v_tmp,Length(v_tmp)-v_num+1,1)+1),1);
    v_word2 :=substr(v_word,(10+v_num),1);
    V_Result:=V_Result||v_word1||v_word2;
    v_num :=v_num-1;
  end loop;
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_STAT_CHANGEDEGREE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_STAT_CHANGEDEGREE"(deg IN NUMBER) return varchar2
is
    v_num number;
    v_d number;
    v_m number;
    v_s number;
    b_rtn varchar2(30) := '';
begin
     if deg is NULL OR deg = 0 then
	      return b_rtn;
	   end if;
     v_d := floor(deg);
     v_num := (deg - v_d) * 60;
     v_m := floor(v_num);
     v_num := (v_num - v_m) * 60;
     v_s := v_num;
     b_rtn := to_char(v_d) || '°' || to_char(v_m) || '′' || round(v_s,2) || '″';
	   return b_rtn;
end;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_STATION_GUIDCODE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_RIM_RSM_STATION_GUIDCODE"(Apply_codeTemp in varchar2,decl_codeTemp in varchar2) return varchar2 is
  Result varchar2(80);
  AppCode_Temp varchar2(80);
  cursor PT is select guid AS Station_Guid from  rsbt_station A where substr(A.app_code,-12,12)=Apply_codeTemp and A.STAT_APP_Type||A.STAT_TDI=decl_codeTemp;
  V_SF PT%ROWTYPE;
  --历史库
  cursor PT_H is select guid AS Station_Guid from  Rsbt_Station_H A where substr(A.app_code,-12,12)=Apply_codeTemp and A.STAT_APP_Type||A.STAT_TDI=decl_codeTemp;
  V_SF_H PT_H%ROWTYPE;
begin
  ----根据申请编号500020070245、技术资料表编号LM0005，获取申请表编号T500020070245或PA500020070245
  open PT;
  loop
     FETCH PT INTO V_SF;
        EXIT WHEN PT%notfound;
     AppCode_Temp := V_SF.Station_Guid;
     Exit;
  end loop;
  close PT;
  ----查询历史库（如果AppCode_Temp is null）
  if AppCode_Temp is null then
    open PT_H;
    loop
       FETCH PT_H INTO V_SF_H;
          EXIT WHEN PT_H%notfound;
         AppCode_Temp := V_SF_H.Station_Guid;
       Exit;
     end loop;
     close PT_H;
  end if;
  --
  Result := AppCode_Temp;
  return(Result);

end F_rim_rsm_Station_GuidCode;
/

-- ----------------------------
-- Function structure for F_RIM_RSM_YEAR
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."F_RIM_RSM_YEAR"(inputyear varchar2) return varchar2
is
  curyear number;
  yearchar varchar2(20);
  midnum  number;
  midyear  varchar2(10);
  V_Result varchar2(30);
begin
  yearchar:='0一二三四五六七八九';
  curyear:=to_number(inputyear);
  midnum:=trunc(curyear/1000,0);
  midyear:=substr(yearchar,midnum+1,1);
  curyear:=curyear-midnum*1000;
  midnum:=trunc(curyear/100,0);
  midyear:=midyear||substr(yearchar,midnum+1,1);
  curyear:=curyear-midnum*100;
  midnum:=trunc(curyear/10,0);
  midyear:=midyear||substr(yearchar,midnum+1,1);
  curyear:=curyear-midnum*10;
  V_Result:=midyear||substr(yearchar,curyear+1,1)||'年';
  return V_Result;
end;
/

-- ----------------------------
-- Function structure for F_TABLEEXISTS
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_TABLEEXISTS"(tableName in varchar2) return char is
  Result char(1);
  v_count number;
begin
  select count(*) into v_count from tab where upper(tname)=upper(tableName);
  if v_count>=1 then
      Result := 'Y';
  else
      Result := 'N';
  end if;
  return(Result);
end;
/

-- ----------------------------
-- Function structure for F_TO_CHAR
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_TO_CHAR"(num number ) return varchar2 is
  Result varchar2(15);
begin
    Result := to_char(num);
  if(num < 1) then
    Result := '0' || Result;
  end if;
  return(Result);
end f_to_char;
/

-- ----------------------------
-- Function structure for F_WF_CANRETAKE
-- ----------------------------
CREATE OR REPLACE function "500000_FREQDB"."F_WF_CANRETAKE"(v_workId in char) return char is
  Result char(1);
  v_tranNo number(12);
  v_commitedCount number(6);
  v_caseId number(12);
begin
  --获取指定工作项提交时的事务编号
  select a.transactionno into v_tranNo from wf_rt_rollbackstack a where
  a.optarget=v_workId and a.optype=4;

  select a.caseid into v_caseId from wf_rt_rollbackstack a where
  a.optarget=v_workId and a.optype=4;

  --判断指定事务中所派发的工作项有多少已完成
 select count(*) into v_commitedCount from wf_rt_work a where
  a.workid in (select b.optarget from wf_rt_rollbackstack b
           where b.caseid=v_caseId and b.transactionno=v_tranNo and b.optype=3 and b.optarget<>v_workId)
  and a.iscommited='Y';

  if v_commitedCount=0 then
      Result := 'Y';
  else
      Result := 'N';
  end if;

  return(Result);
end f_wf_CanRetake;
/

-- ----------------------------
-- Function structure for GET_GUID
-- ----------------------------
CREATE OR REPLACE FUNCTION "500000_FREQDB"."GET_GUID"
   RETURN CHAR
IS
   v_guid              CHAR (36);
   v_guid_part_one     CHAR (8);
   v_guid_part_two     CHAR (4);
   v_guid_part_three   CHAR (4);
   v_guid_part_four    CHAR (4);
   v_guid_part_five    CHAR (12);
BEGIN
   SELECT SYS_GUID ()
     INTO v_guid
     FROM DUAL;

   v_guid_part_one := SUBSTR (v_guid, 0, 8);
   v_guid_part_two := SUBSTR (v_guid, 8, 4);
   v_guid_part_three := SUBSTR (v_guid, 12, 4);
   v_guid_part_four := SUBSTR (v_guid, 16, 4);
   v_guid_part_five := SUBSTR (v_guid, 20, 12);
   v_guid :=
      CONCAT
         (CONCAT
             (CONCAT
                 (CONCAT (CONCAT (CONCAT (CONCAT (CONCAT (v_guid_part_one,
                                                          '-'),
                                                  v_guid_part_two
                                                 ),
                                          '-'
                                         ),
                                  v_guid_part_three
                                 ),
                          '-'
                         ),
                  v_guid_part_four
                 ),
              '-'
             ),
          v_guid_part_five
         );
   RETURN (lower(v_guid));
END GET_GUID;

/

-- ----------------------------
-- Indexes structure for table RSBT_ANTFEED_R
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_RSBT_ANTFEED_R"
ON "500000_FREQDB"."RSBT_ANTFEED_R" ("STATION_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table RSBT_ANTFEED_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_ANTFEED_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_ANTFEED_R" ADD CHECK ("STATION_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_ANTFEED_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_ANTFEED_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_ANTFEED_T_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_ANTFEED_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_ANTFEED_T_R" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_ANTFEED_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_ANTFEED_T_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_APPCLUBS_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_APPCLUBS_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPCLUBS_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPCLUBS_R" ADD CHECK ("APP_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_APPCLUBS_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPCLUBS_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_APPFILELIST_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_APPFILELIST_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPFILELIST_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPFILELIST_R" ADD CHECK ("APP_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPFILELIST_R" ADD CHECK ("APP_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_APPFILELIST_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPFILELIST_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_APPFREQ_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_APPFREQ_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPFREQ_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPFREQ_R" ADD CHECK ("APP_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPFREQ_R" ADD CHECK ("APP_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_APPFREQ_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPFREQ_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_APPLY_PA_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_APPLY_PA_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_PA_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_PA_GENDER" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_PA_BIRTHDAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_PA_NATION" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_PA_DEGREE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD CHECK ("APP_PA_ID_CARD" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_APPLY_PA_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_PA_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_APPLY_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_APPLY_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("NET_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("ORG_MANAGER_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("APP_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("APP_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("APP_SUB_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("APP_OBJECT_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("APP_FTLB" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD CHECK ("APP_FTLE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_APPLY_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_APPLY_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_CODE_DIC
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_RSBT_CODE_DIC"
ON "500000_FREQDB"."RSBT_CODE_DIC" ("CN" ASC, "CODE_DATA_TYPE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table RSBT_CODE_DIC
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_CODE_DIC" ADD CHECK ("CO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_CODE_DIC" ADD CHECK ("CN" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_CODE_DIC" ADD CHECK ("CODE_DISCN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_CODE_DIC
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_CODE_DIC" ADD PRIMARY KEY ("CO");

-- ----------------------------
-- Indexes structure for table RSBT_E_SE_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_E_SE_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_E_SE_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_E_SE_R" ADD CHECK ("STATION_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_E_SE_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_E_SE_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_EAF_R
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_RSBT_EAF_FREQ_R"
ON "500000_FREQDB"."RSBT_EAF_R" ("FREQ_GUID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "500000_FREQDB"."I_RSBT_EAF_STATIONGUID_R"
ON "500000_FREQDB"."RSBT_EAF_R" ("STATION_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table RSBT_EAF_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_EAF_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_EAF_R" ADD CHECK ("STATION_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_EAF_R" ADD CHECK ("EQU_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_EAF_R" ADD CHECK ("ANT_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_EAF_R" ADD CHECK ("FREQ_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_EAF_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_EAF_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_EQU_R
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_RSBT_EQU_R"
ON "500000_FREQDB"."RSBT_EQU_R" ("STATION_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table RSBT_EQU_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_EQU_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_EQU_R" ADD CHECK ("STATION_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_EQU_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_EQU_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_EQU_T_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_EQU_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_EQU_T_R" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_EQU_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_EQU_T_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_FREQ_R
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_RSBT_FREQ_R"
ON "500000_FREQDB"."RSBT_FREQ_R" ("STATION_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table RSBT_FREQ_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_FREQ_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_FREQ_R" ADD CHECK ("STATION_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_FREQ_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_FREQ_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_FREQ_T_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_FREQ_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_FREQ_T_R" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_FREQ_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_FREQ_T_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table RSBT_LINK_BAK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_LINK_BAK" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_LINK_BAK" ADD CHECK ("STATION_GUID_A" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_LINK_BAK" ADD CHECK ("STATION_GUID_B" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table RSBT_LINK_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_LINK_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_LINK_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_LINK_R" ADD CHECK ("STATION_GUID_A" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_LINK_R" ADD CHECK ("STATION_GUID_B" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_LINK_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_LINK_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_NET_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_NET_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_NET_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_NET_R" ADD CHECK ("ORG_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_NET_R" ADD CHECK ("ORG_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_NET_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_NET_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_ST_COBJ_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_ST_COBJ_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_ST_COBJ_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_ST_COBJ_R" ADD CHECK ("STATION_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_ST_COBJ_R" ADD CHECK ("OBJ_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_ST_COBJ_R" ADD CHECK ("OBJ_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_ST_COBJ_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_ST_COBJ_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_STATION_R
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_RSBT_STATION_APPCODE_R"
ON "500000_FREQDB"."RSBT_STATION_R" ("APP_CODE" ASC)
LOGGING
VISIBLE;
CREATE INDEX "500000_FREQDB"."I_RSBT_STATION_NET_R"
ON "500000_FREQDB"."RSBT_STATION_R" ("NET_GUID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "500000_FREQDB"."I_RSDB_STATION_R"
ON "500000_FREQDB"."RSBT_STATION_R" ("STAT_APP_TYPE" ASC, "GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table RSBT_STATION_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_STATION_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_STATION_R" ADD CHECK ("ORG_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_STATION_R" ADD CHECK ("APP_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_STATION_R" ADD CHECK ("STAT_APP_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."RSBT_STATION_R" ADD CHECK ("STAT_TDI" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_STATION_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_STATION_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table RSBT_STATION_T_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table RSBT_STATION_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_STATION_T_R" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RSBT_STATION_T_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."RSBT_STATION_T_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_FORM_VALIDATE_STATUS
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_VALIDATE_FORMGUID"
ON "500000_FREQDB"."T_FORM_VALIDATE_STATUS" ("FORM_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_FORM_VALIDATE_STATUS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_FORM_VALIDATE_STATUS" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_FORM_VALIDATE_STATUS" ADD CHECK ("FORM_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_FORM_VALIDATE_STATUS" ADD CHECK ("APP_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_FORM_VALIDATE_STATUS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_FORM_VALIDATE_STATUS" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_APPSETTINGS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_APPSETTINGS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" ADD CHECK ("KEYID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" ADD CHECK ("KEYNAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" ADD CHECK ("MODULETYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" ADD CHECK ("ISSHOW" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" ADD CHECK ("CONTROLTYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_APPSETTINGS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_APPSETTINGS" ADD PRIMARY KEY ("KEYID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_DATA_ACL
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_DATA_ACL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL" ADD CHECK ("RESID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL" ADD CHECK ("PRINCIPALID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL" ADD CHECK ("PRINCIPALTYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_DATA_ACL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_ACL" ADD PRIMARY KEY ("RESID", "PRINCIPALID", "PRINCIPALTYPE");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_DATA_RES_KEY
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_DATA_RES_KEY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY" ADD CHECK ("RESID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY" ADD CHECK ("DATAKEY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY" ADD CHECK ("REFTABLE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_DATA_RES_KEY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DATA_RES_KEY" ADD PRIMARY KEY ("RESID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_DEPARTMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_DEPARTMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" ADD CHECK ("DEPTNAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" ADD CHECK ("DEPTLEVEL" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" ADD CHECK ("DEPTID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" ADD CHECK ("DELFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_DEPARTMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPARTMENT" ADD PRIMARY KEY ("DEPTID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_DEPT_EMP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_DEPT_EMP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" ADD CHECK ("DIRECT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" ADD CHECK ("EMPNO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" ADD CHECK ("DEPTID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" ADD CHECK ("DELFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_DEPT_EMP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_DEPT_EMP" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_EMPLOYEE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_EMPLOYEE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE" ADD CHECK ("EMPNO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE" ADD CHECK ("NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE" ADD CHECK ("DELFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_EMPLOYEE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_EMPLOYEE" ADD PRIMARY KEY ("EMPNO");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_FUNCTION_ACL
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_FUNCTION_ACL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL" ADD CHECK ("ROLENAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL" ADD CHECK ("FUNCTIONID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_FUNCTION_ACL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_FUNCTION_ACL" ADD PRIMARY KEY ("ROLENAME", "FUNCTIONID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOG" ADD CHECK ("LOGID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOG" ADD PRIMARY KEY ("LOGID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_LOGIN_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_LOGIN_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_LOG" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_LOG" ADD CHECK ("USERID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_LOGIN_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_LOGIN_MESSGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_LOGIN_MESSGE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_MESSGE" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_MESSGE" ADD CHECK ("IPADDR" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_LOGIN_MESSGE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_LOGIN_MESSGE" ADD PRIMARY KEY ("USERID", "IPADDR");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_ROLE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_ROLE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE" ADD CHECK ("ROLENAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE" ADD CHECK ("DELFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_ROLE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE" ADD PRIMARY KEY ("ROLENAME");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_ROLE_MEMBER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_ROLE_MEMBER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER" ADD CHECK ("ROLENAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER" ADD CHECK ("DELFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_ROLE_MEMBER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_ROLE_MEMBER" ADD PRIMARY KEY ("ROLENAME", "USERID");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_SEQUENCE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_SEQUENCE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_SEQUENCE" ADD CHECK ("CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_SEQUENCE" ADD CHECK ("VALUE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_SEQUENCE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_SEQUENCE" ADD PRIMARY KEY ("CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_COMM_USER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_COMM_USER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_USER" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_USER" ADD CHECK ("USERNAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_USER" ADD CHECK ("DELFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_COMM_USER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_COMM_USER" ADD PRIMARY KEY ("USERID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_ALLOCATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_ALLOCATION
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOCATION" ADD CHECK ("ALLOCATION_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_ALLOCATION
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOCATION" ADD PRIMARY KEY ("ALLOCATION_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_ALLOTMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_ALLOTMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("ALLOTMENT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("FREQ_CHANNEL_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("FREQ_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("ALLOTMENT_AREA" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("ADMINISTRATION_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("DEPTRRC_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD CHECK ("ALLOTMENT_TYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_ALLOTMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT" ADD PRIMARY KEY ("ALLOTMENT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_ALLOTMENT_COMPANY
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_ALLOTMENT_COMPANY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT_COMPANY" ADD CHECK ("COMPANY_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_ALLOTMENT_COMPANY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_ALLOTMENT_COMPANY" ADD PRIMARY KEY ("COMPANY_NAME");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_CALLLETTER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_CALLLETTER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" ADD CHECK ("CALL_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" ADD CHECK ("CALL_RANGE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" ADD CHECK ("NUM" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" ADD CHECK ("DOUBLERANGE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_CALLLETTER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLLETTER" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_CALLTYPE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_CALLTYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLTYPE" ADD CHECK ("CALL_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLTYPE" ADD CHECK ("ISAMATEUR" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_CALLTYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_CALLTYPE" ADD PRIMARY KEY ("CALL_NAME");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_DOCUMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_DOCUMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD CHECK ("DOCUMENT_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD CHECK ("DOCUMENT_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD CHECK ("DOCUMENT_TYPE_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD CHECK ("ADMINISTRATION" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD CHECK ("DOCUMENT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD CHECK ("DISTRIBUTE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_DOCUMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT" ADD PRIMARY KEY ("DOCUMENT_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_DOCUMENT_TYPE
-- ----------------------------

-- ----------------------------
-- Uniques structure for table T_RIM_FRM_DOCUMENT_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT_TYPE" ADD UNIQUE ("DOCUMENT_TYPE_NAME");

-- ----------------------------
-- Checks structure for table T_RIM_FRM_DOCUMENT_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT_TYPE" ADD CHECK ("DOCUMENT_TYPE_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT_TYPE" ADD CHECK ("DOCUMENT_TYPE_NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_DOCUMENT_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_DOCUMENT_TYPE" ADD PRIMARY KEY ("DOCUMENT_TYPE_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_EMERGENCY_FREQ
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_EMERGENCY_FREQ
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_EMERGENCY_FREQ" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_EMERGENCY_FREQ
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_EMERGENCY_FREQ" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_FOOTNOTE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_FOOTNOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FOOTNOTE" ADD CHECK ("FOOTNOTE_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FOOTNOTE" ADD CHECK ("FOOTNOTE_PROPERTY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FOOTNOTE" ADD CHECK ("FOOTNOTE_CLASS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_FOOTNOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FOOTNOTE" ADD PRIMARY KEY ("FOOTNOTE_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_FOREIGN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_FOREIGN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FOREIGN" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_FOREIGN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FOREIGN" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_FREQ_ASSIGN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_FREQ_ASSIGN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_ASSIGN" ADD CHECK ("ASSIGN_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_ASSIGN" ADD CHECK ("DEPT_ASSIGN" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_FREQ_ASSIGN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_ASSIGN" ADD PRIMARY KEY ("ASSIGN_GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_FREQ_PAY
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_FREQ_PAY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("PAY_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("ORG_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("APP_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("FREQ_APPROVE_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("FEE_DERATE_PROPORTION" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("FEE_BILL" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD CHECK ("FEE_PAYMENT" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_FREQ_PAY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_FREQ_PAY" ADD PRIMARY KEY ("PAY_GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_LAYOUT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_LAYOUT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD CHECK ("LAYOUT_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD CHECK ("FREQ_START" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD CHECK ("FREQ_END" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD CHECK ("LAYOUT_BAND" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD CHECK ("CHANNEL_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD CHECK ("LAYOUT_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_LAYOUT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT" ADD PRIMARY KEY ("LAYOUT_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_LAYOUT_CONFIG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_LAYOUT_CONFIG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_CONFIG" ADD CHECK ("CHANNEL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_CONFIG" ADD CHECK ("CONFIG_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_LAYOUT_CONFIG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_CONFIG" ADD PRIMARY KEY ("CONFIG_GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_LAYOUT_GROUP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_LAYOUT_GROUP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_GROUP" ADD CHECK ("GROUP_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_GROUP" ADD CHECK ("CHANNEL_CLASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_GROUP" ADD CHECK ("GROUP_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_LAYOUT_GROUP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_LAYOUT_GROUP" ADD PRIMARY KEY ("GROUP_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_PROTECTED_FREQ
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_PROTECTED_FREQ
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_PROTECTED_FREQ" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_PROTECTED_FREQ
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_PROTECTED_FREQ" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_REGION_LAYOUT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_REGION_LAYOUT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD CHECK ("LAYOUT_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD CHECK ("FREQ_START" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD CHECK ("FREQ_END" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD CHECK ("LAYOUT_BAND" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD CHECK ("CHANNEL_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD CHECK ("LAYOUT_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_REGION_LAYOUT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT" ADD PRIMARY KEY ("LAYOUT_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_REGION_LAYOUT_CONFIG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_REGION_LAYOUT_CONFIG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_CONFIG" ADD CHECK ("CHANNEL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_CONFIG" ADD CHECK ("CONFIG_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_REGION_LAYOUT_CONFIG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_CONFIG" ADD PRIMARY KEY ("CONFIG_GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_REGION_LAYOUT_GROUP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_REGION_LAYOUT_GROUP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_GROUP" ADD CHECK ("GROUP_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_GROUP" ADD CHECK ("CHANNEL_CLASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_GROUP" ADD CHECK ("GROUP_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_REGION_LAYOUT_GROUP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_REGION_LAYOUT_GROUP" ADD PRIMARY KEY ("GROUP_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_SERVICE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_SERVICE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_SERVICE" ADD CHECK ("SERVICE_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_SERVICE" ADD CHECK ("SERVICE_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_SERVICE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_SERVICE" ADD PRIMARY KEY ("SERVICE_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_FRM_SYSTEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_FRM_SYSTEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_SYSTEM" ADD CHECK ("SYSTEM_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_SYSTEM" ADD CHECK ("SYSTEM_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_FRM_SYSTEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_FRM_SYSTEM" ADD PRIMARY KEY ("SYSTEM_CODE");

-- ----------------------------
-- Checks structure for table T_RIM_IMS_SHORTCUT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT" ADD CHECK ("MENUORDER" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_IMS_SHORTCUT" ADD CHECK ("STATUS" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_OA_ADDRESSLIST
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_ADDRESSLIST
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ADDRESSLIST" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_ADDRESSLIST
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ADDRESSLIST" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_ARCHIVE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_ARCHIVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE" ADD CHECK ("ARCHIVEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_ARCHIVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE" ADD PRIMARY KEY ("ARCHIVEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_ARCHIVE_DELEGATE_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_ARCHIVE_DELEGATE_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_ARCHIVE_DELEGATE_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATE_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_ARCHIVE_DELEGATEUSER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_ARCHIVE_DELEGATEUSER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_ARCHIVE_DELEGATEUSER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_DELEGATEUSER" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_ARCHIVE_INFORM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_ARCHIVE_INFORM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_INFORM" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_ARCHIVE_INFORM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_ARCHIVE_INFORM" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_DOC
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_DOC
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC" ADD CHECK ("DOCID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC" ADD CHECK ("DOCLIB" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC" ADD CHECK ("DOCFOLDER" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_DOC
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC" ADD PRIMARY KEY ("DOCID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_DOC_FOLDER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_DOC_FOLDER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER" ADD CHECK ("FOLDERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER" ADD CHECK ("PARENT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER" ADD CHECK ("LIBID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_DOC_FOLDER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_FOLDER" ADD PRIMARY KEY ("FOLDERID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_DOC_LIB
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_DOC_LIB
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_LIB" ADD CHECK ("LIBID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_DOC_LIB
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_LIB" ADD PRIMARY KEY ("LIBID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_DOC_SECURITYTYPE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_DOC_SECURITYTYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE" ADD CHECK ("SECURITYTYPEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_DOC_SECURITYTYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_SECURITYTYPE" ADD PRIMARY KEY ("SECURITYTYPEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_DOC_WFNOTE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_DOC_WFNOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_DOC_WFNOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_DOC_WFNOTE" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_MEMORABILIA
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_MEMORABILIA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_MEMORABILIA" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_MEMORABILIA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_MEMORABILIA" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_NEWS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_NEWS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NEWS" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_NEWS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NEWS" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_NEWSREVIEW
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_NEWSREVIEW
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NEWSREVIEW" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_NEWSREVIEW
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NEWSREVIEW" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_NOTICE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_NOTICE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICE" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_NOTICE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICE" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_NOTICEATTACHMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_NOTICEATTACHMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICEATTACHMENT" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_NOTICEATTACHMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICEATTACHMENT" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_NOTICECLASS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_NOTICECLASS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICECLASS" ADD CHECK ("CLASSID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_NOTICECLASS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICECLASS" ADD PRIMARY KEY ("CLASSID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_NOTICEREADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_NOTICEREADER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICEREADER" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_NOTICEREADER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_NOTICEREADER" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_PROPERTYMANAGEMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_PROPERTYMANAGEMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_PROPERTYMANAGEMENT" ADD CHECK ("UNIQUEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_PROPERTYMANAGEMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_PROPERTYMANAGEMENT" ADD PRIMARY KEY ("UNIQUEID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_TYPE
-- ----------------------------
CREATE INDEX "500000_FREQDB"."T_RIM_OA_TYPE1"
ON "500000_FREQDB"."T_RIM_OA_TYPE" ("TYPEID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "500000_FREQDB"."T_RIM_OA_TYPE2"
ON "500000_FREQDB"."T_RIM_OA_TYPE" ("ITEMID" ASC, "TYPEID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_OA_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD CHECK ("TUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD CHECK ("ITEMID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD CHECK ("ITEMNAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD CHECK ("TYPEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD CHECK ("TYPENAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD CHECK ("OPTTYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_TYPE" ADD PRIMARY KEY ("TUID");

-- ----------------------------
-- Indexes structure for table T_RIM_OA_UPLOADFILE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_OA_UPLOADFILE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_UPLOADFILE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_OA_UPLOADFILE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_OA_UPLOADFILE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_ALERT_INFO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" ADD CHECK ("OBJECT_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" ADD CHECK ("OBJECT_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" ADD CHECK ("PRINT_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" ADD CHECK ("ISALERT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ALERT_INFO" ADD CHECK ("END_DATE" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_ANTE_DATA
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_ANTE_DATA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ANTE_DATA" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_ANTE_DATA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ANTE_DATA" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_APPLY_PA_WF
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_APPLY_PA_WF
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_PA_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_PA_GENDER" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_PA_BIRTHDAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_PA_NATION" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_PA_DEGREE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD CHECK ("APP_PA_ID_CARD" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_APPLY_PA_WF
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_PA_WF" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_APPLY_STATUS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_APPLY_STATUS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_STATUS" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_APPLY_STATUS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_STATUS" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_APPLY_WF
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_WF" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLY_WF" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_APPLYFILELIST_WF
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_APPLYFILELIST_WF
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF" ADD CHECK ("FILENAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_APPLYFILELIST_WF
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_APPLYFILELIST_WF" ADD PRIMARY KEY ("FILENAME");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_EQU_CHECK
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_EQU_CHECK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQU_CHECK" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQU_CHECK" ADD CHECK ("ECK_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_EQU_CHECK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQU_CHECK" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_EQU_EXPAND
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_EQU_EXPAND
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQU_EXPAND" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_EQU_EXPAND
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQU_EXPAND" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_EQUIP_APPROVE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_EQUIP_APPROVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE" ADD CHECK ("APPR_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE" ADD CHECK ("APPR_CARD_NO" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_EQUIP_APPROVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_EQUIP_APPROVE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_INCREDIBLECORP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_INCREDIBLECORP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP" ADD CHECK ("CORPORATION" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP" ADD CHECK ("INC_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP" ADD CHECK ("DESCRIPTION" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_INCREDIBLECORP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_INCREDIBLECORP" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LIC_STATUES
-- ----------------------------
CREATE INDEX "500000_FREQDB"."STATION_GU"
ON "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" ("STATION_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LIC_STATUES
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" ADD CHECK ("EQUIP_NO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" ADD CHECK ("LICE_OK" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" ADD CHECK ("LICENSE_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LIC_STATUES
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LIC_STATUES" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LICE_AUDIT
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LICE_AUDIT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT" ADD CHECK ("LICENSE_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT" ADD CHECK ("AUDIT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT" ADD CHECK ("AUDIT_PASS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LICE_AUDIT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_AUDIT" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LICE_CACHE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LICE_CACHE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" ADD CHECK ("LICE_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" ADD CHECK ("USER_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" ADD CHECK ("CACHE_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" ADD CHECK ("CACHE_DATE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LICE_CACHE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_CACHE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LICE_PN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LICE_PN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN" ADD CHECK ("AREA_CODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LICE_PN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LICE_PN_ALLOT
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_T_RIM_RSM_LICE_PN_ALLOT"
ON "500000_FREQDB"."T_RIM_RSM_LICE_PN_ALLOT" ("ORG_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LICE_PN_ALLOT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN_ALLOT" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN_ALLOT" ADD CHECK ("ORG_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LICE_PN_ALLOT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PN_ALLOT" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LICE_PRINT_LOG
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_LICE_PRINT_LOG_RQCODE"
ON "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ("RQCODE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LICE_PRINT_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("LICENSE_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("LICENSE_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("PRINT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("INPUT_STATUS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("ASSESSOR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("LOG_STATUS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD CHECK ("USE_STATUS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LICE_PRINT_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICE_PRINT_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_LICENSEPAPERGD
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_LICENSEPAPERGD
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" ADD CHECK ("LICEN_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" ADD CHECK ("LICEN_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" ADD CHECK ("LICEN_STATUS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_LICENSEPAPERGD
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_LICENSEPAPERGD" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_MVIEW_REFRESH_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_MVIEW_REFRESH_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_MVIEW_REFRESH_LOG" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_MVIEW_REFRESH_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_MVIEW_REFRESH_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_OPERATOR
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_OPERATOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_OPERATOR" ADD CHECK ("OP_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_OPERATOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_OPERATOR" ADD PRIMARY KEY ("OP_GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_ORG_RELEV
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_ORG_RELEV
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ORG_RELEV" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ORG_RELEV" ADD CHECK ("PARENT_ORG_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ORG_RELEV" ADD CHECK ("CHILD_ORG_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_ORG_RELEV
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_ORG_RELEV" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAREACODE_LOG
-- ----------------------------
CREATE INDEX "500000_FREQDB"."P_USER_AREA_CODE"
ON "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG" ("USER_AREA_CODE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAREACODE_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG" ADD CHECK ("APP_GUID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAREACODE_LOG_R
-- ----------------------------
CREATE INDEX "500000_FREQDB"."P_AREACODE_LOG_USER_AREA_CODE"
ON "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R" ("USER_AREA_CODE" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAREACODE_LOG_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R" ADD CHECK ("APP_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAREACODE_LOG_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAREACODE_LOG_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_APPLYCOUNT
-- ----------------------------

-- ----------------------------
-- Uniques structure for table T_RIM_RSM_PAY_APPLYCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD UNIQUE ("ITEM_NO");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_APPLYCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("ITEM_NO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("HANDLE_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("CONFIRM" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("PAID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD CHECK ("SUM_PAID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_APPLYCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYCOUNT" ADD PRIMARY KEY ("APPLY_CODE", "DEPT_PAY", "AREA_CODE", "COUNT_YEAR");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_APPLYITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_APPLYITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("DECL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("DERATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("PAY_RATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_APPLYITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYITEM" ADD PRIMARY KEY ("APPLY_CODE", "DECL_CODE", "COUNT_YEAR", "ITEM_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_APPLYNETITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_APPLYNETITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("FREQ_NOTE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("DERATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("PAY_RATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_APPLYNETITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYNETITEM" ADD PRIMARY KEY ("APPLY_CODE", "DEPT_PAY", "AREA_CODE", "COUNT_YEAR", "ITEM_CODE", "FREQ_NOTE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_APPLYOTHER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_APPLYOTHER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("ITEM_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("ITEM_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD CHECK ("FEE_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_APPLYOTHER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_APPLYOTHER" ADD PRIMARY KEY ("ITEM_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_DEPTCOUNT
-- ----------------------------

-- ----------------------------
-- Uniques structure for table T_RIM_RSM_PAY_DEPTCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD UNIQUE ("ITEM_NO");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_DEPTCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("ITEM_NO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("HANDLE_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("CONFIRM" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("PAID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD CHECK ("SUM_PAID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_DEPTCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTCOUNT" ADD PRIMARY KEY ("DEPT_PAY", "AREA_CODE", "COUNT_YEAR");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_DEPTITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_DEPTITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("DECL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("DERATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_DEPTITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTITEM" ADD PRIMARY KEY ("APPLY_CODE", "DECL_CODE", "COUNT_YEAR", "ITEM_CODE");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_DEPTNETITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("FREQ_NOTE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("DERATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTNETITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_DEPTOTHER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_DEPTOTHER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD CHECK ("ITEM_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD CHECK ("ITEM_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD CHECK ("FEE_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_DEPTOTHER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_DEPTOTHER" ADD PRIMARY KEY ("ITEM_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUCHECK_APPITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUCHECK_APPITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("DECL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUCHECK_APPITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECK_APPITEM" ADD PRIMARY KEY ("APPLY_CODE", "DECL_CODE", "COUNT_YEAR", "ITEM_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUCHECKITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUCHECKITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("DEPT_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("DECL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUCHECKITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKITEM" ADD PRIMARY KEY ("APPLY_CODE", "DECL_CODE", "COUNT_YEAR", "ITEM_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUCHECKSTANDARD
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUCHECKSTANDARD
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD CHECK ("ITEM_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD CHECK ("ITEM_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD CHECK ("TYPE_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD CHECK ("FEE_PAY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD CHECK ("COUNT_MODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUCHECKSTANDARD
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUCHECKSTANDARD" ADD PRIMARY KEY ("ITEM_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUPA_APPLYCOUNT
-- ----------------------------

-- ----------------------------
-- Uniques structure for table T_RIM_RSM_PAY_EQUPA_APPLYCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD UNIQUE ("ITEM_NO");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUPA_APPLYCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("ITEM_NO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("IDENTIFICATION_CARD" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("HANDLE_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("CONFIRM" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("PAID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD CHECK ("SUM_PAID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUPA_APPLYCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYCOUNT" ADD PRIMARY KEY ("APPLY_CODE", "IDENTIFICATION_CARD", "AREA_CODE", "COUNT_YEAR");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUPA_APPLYITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUPA_APPLYITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("DECL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("IDENTIFICATION_CARD" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUPA_APPLYITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPA_APPLYITEM" ADD PRIMARY KEY ("APPLY_CODE", "DECL_CODE", "COUNT_YEAR", "ITEM_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUPADEPTCOUNT
-- ----------------------------

-- ----------------------------
-- Uniques structure for table T_RIM_RSM_PAY_EQUPADEPTCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD UNIQUE ("ITEM_NO");

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUPADEPTCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("ITEM_NO" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("IDENTIFICATION_CARD" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("SUM_COUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("HANDLE_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("CONFIRM" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("PAID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD CHECK ("SUM_PAID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUPADEPTCOUNT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTCOUNT" ADD PRIMARY KEY ("IDENTIFICATION_CARD", "AREA_CODE", "COUNT_YEAR");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_PAY_EQUPADEPTITEM
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_PAY_EQUPADEPTITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("IDENTIFICATION_CARD" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("COUNT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("ITEM_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("APPLY_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("DECL_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("AMOUNT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD CHECK ("SUM_PAY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_PAY_EQUPADEPTITEM
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_PAY_EQUPADEPTITEM" ADD PRIMARY KEY ("IDENTIFICATION_CARD", "DECL_CODE", "COUNT_YEAR", "ITEM_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_RSBT_IMBACKTYPE_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_RSBT_IMBACKTYPE_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG" ADD CHECK ("FORM_GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG" ADD CHECK ("FORM_TYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_RSBT_IMBACKTYPE_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMBACKTYPE_LOG" ADD PRIMARY KEY ("FORM_GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_RSBT_IMP_DATE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_RSBT_IMP_DATE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE" ADD CHECK ("APP_TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE" ADD CHECK ("IMP_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE" ADD CHECK ("IMP_TIME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_RSBT_IMP_DATE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_DATE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_RSBT_IMP_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_RSBT_IMP_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG" ADD CHECK ("APP_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG" ADD CHECK ("AREACODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_RSBT_IMP_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_RSBT_IMP_LOG_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_RSBT_IMP_LOG_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R" ADD CHECK ("APP_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R" ADD CHECK ("AREACODE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_RSBT_IMP_LOG_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_RSBT_IMP_LOG_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STAT_DISCARD_EXPAND
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STAT_DISCARD_EXPAND
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_DISCARD_EXPAND" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_DISCARD_EXPAND" ADD CHECK ("APP_GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STAT_DISCARD_EXPAND
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_DISCARD_EXPAND" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STAT_IMPBTOA_LOG
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_STAT_IMPBTOA_LOG_2"
ON "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" ("USERID" ASC)
LOGGING
VISIBLE;
CREATE INDEX "500000_FREQDB"."I_STAT_IMPBTOA_LOG_3"
ON "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" ("STAT_TYPE_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STAT_IMPBTOA_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" ADD CHECK ("LOGTYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" ADD CHECK ("LOGDATE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STAT_IMPBTOA_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_IMPBTOA_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STAT_INFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STAT_INFO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO" ADD CHECK ("STAT_YEAR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO" ADD CHECK ("STAT_MONTH" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO" ADD CHECK ("STAT_DEPT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STAT_INFO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_INFO" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STAT_TYPE_RELEV
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STAT_TYPE_RELEV
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STAT_TYPE_RELEV
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STAT_TYPE_RELEV_R
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STAT_TYPE_RELEV_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STAT_TYPE_RELEV_R
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV_R" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STAT_TYPE_RELEV2
-- ----------------------------
CREATE INDEX "500000_FREQDB"."I_STAT_TYPE_RELEV2_STAT_GUID"
ON "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2" ("STAT_GUID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STAT_TYPE_RELEV2
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STAT_TYPE_RELEV2
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STAT_TYPE_RELEV2" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STATION_TYPE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STATION_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STATION_TYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_RSM_STATION_TYPE2
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_RSM_STATION_TYPE2
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_RSM_STATION_TYPE2
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_RSM_STATION_TYPE2" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_APPPERMISSION
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPPERMISSION" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPPERMISSION" ADD CHECK ("SXBM" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPPERMISSION" ADD CHECK ("SXMC" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPPERMISSION" ADD CHECK ("APPROVALROLE" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_APPROVE_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_APPROVE_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" ADD CHECK ("QUAL_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" ADD CHECK ("LEAD_PASS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_APPROVE_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_APPROVE_MAIN" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_BIDDOCRELA
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_BIDDOCRELA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BIDDOCRELA" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BIDDOCRELA" ADD CHECK ("MISSID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BIDDOCRELA" ADD CHECK ("SBLSH" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_BIDDOCRELA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BIDDOCRELA" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_BUSINESSDEAL
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_BUSINESSDEAL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("MISSIVEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("STEPID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("WORKID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("OPERTOR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("PSTATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD CHECK ("STATEFLAG" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_BUSINESSDEAL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSDEAL" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_BUSINESSSTEP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_BUSINESSSTEP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP" ADD CHECK ("STEPID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP" ADD CHECK ("STEPNAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP" ADD CHECK ("TYPECODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP" ADD CHECK ("NUMB" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_BUSINESSSTEP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_BUSINESSSTEP" ADD PRIMARY KEY ("STEPID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_CODE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_CODE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_CODE" ADD CHECK ("NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_CODE" ADD CHECK ("TYPE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_CODE" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_CODE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_CODE" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_COLLECTORS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_COLLECTORS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS" ADD CHECK ("MISSIVEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS" ADD CHECK ("CREATETIME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_COLLECTORS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_COLLECTORS_CLASS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_COLLECTORS_CLASS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" ADD CHECK ("CLASSCODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" ADD CHECK ("CLASSNAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" ADD CHECK ("CREATEDATE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_COLLECTORS_CLASS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_COLLECTORS_CLASS" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_DEFINEMESSAGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_DEFINEMESSAGE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEFINEMESSAGE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_DEFINEMESSAGE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEFINEMESSAGE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_DELEGATEMISSIVELIST
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST" ADD CHECK ("WORKID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST" ADD CHECK ("DELEGATEUSERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DELEGATEMISSIVELIST" ADD CHECK ("USERID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_DEVELOP_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_DEVELOP_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" ADD CHECK ("QUAL_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" ADD CHECK ("LEAD_PASS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_DEVELOP_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DEVELOP_MAIN" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_DIST_DATA
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_DIST_DATA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" ADD CHECK ("DATA_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" ADD CHECK ("SAVE_PLACE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" ADD CHECK ("DATA_DEL" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" ADD CHECK ("DEAL_DATE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_DIST_DATA
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_DATA" ADD PRIMARY KEY ("ACCEPT_ID", "SAVE_PLACE");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_DIST_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_DIST_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" ADD CHECK ("STAT_LEGAL" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" ADD CHECK ("CHECK_PASS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_DIST_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_MAIN" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_DIST_RESEARCH
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_DIST_RESEARCH
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_RESEARCH" ADD CHECK ("ACCEPT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_DIST_RESEARCH
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_DIST_RESEARCH" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_EQUIP_APPROVE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_EQUIP_APPROVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_EQUIP_APPROVE" ADD CHECK ("APPR_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_EQUIP_APPROVE" ADD CHECK ("APPR_CARD_NO" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_EQUIP_APPROVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_EQUIP_APPROVE" ADD PRIMARY KEY ("APPR_CODE");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_FORMS
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_FORMS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FORMS" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_FORMS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FORMS" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_FORMSINFO
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_FORMSINFO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FORMSINFO" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_FORMSINFO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FORMSINFO" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_FREQ_APPLY
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_FREQ_APPLY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("APP_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("ORG_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("NET_NAME" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("APP_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("APP_FTLB" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("APP_FTLE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD CHECK ("DATAURL" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_FREQ_APPLY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_FREQ_APPLY" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_IMPORT_EQUIP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_IMPORT_EQUIP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_EQUIP" ADD CHECK ("EQUIP_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_EQUIP" ADD CHECK ("ACCEPT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_IMPORT_EQUIP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_EQUIP" ADD PRIMARY KEY ("EQUIP_ID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_IMPORT_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("QUAL_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("SUPER_AUDIT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("SUPER_KEY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("SUPER_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("LEAD_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_IMPORT_MAIN" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_INTERFIXOPERATION
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_INTERFIXOPERATION
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXOPERATION" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_INTERFIXOPERATION
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXOPERATION" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_INTERFIXPROCESSOR
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_INTERFIXPROCESSOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXPROCESSOR" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_INTERFIXPROCESSOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_INTERFIXPROCESSOR" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MCONSIGNOR
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MCONSIGNOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MCONSIGNOR" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MCONSIGNOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MCONSIGNOR" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE" ADD CHECK ("MISSIVEID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE" ADD PRIMARY KEY ("MISSIVEID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVE_CODE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVE_CODE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_CODE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVE_CODE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_CODE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVE_HISTORY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY" ADD CHECK ("MISSIVEID" IS NOT NULL);

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVE_HISTORY_FILE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY_FILE" ADD CHECK ("FILEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVE_HISTORY_FILE" ADD CHECK ("MISSIVEID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVENOTE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVENOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVENOTE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVENOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVENOTE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVEREADER
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVEREADER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADER" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVEREADER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADER" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVEREADPIECES
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVEREADPIECES
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADPIECES" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVEREADPIECES
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVEREADPIECES" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVESTATE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVESTATE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVESTATE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVESTATE_BACKUP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVESTATE_BACKUP" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MISSIVETEMPNOTE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MISSIVETEMPNOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVETEMPNOTE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MISSIVETEMPNOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MISSIVETEMPNOTE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MOUTGO
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MOUTGO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MOUTGO" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MOUTGO
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MOUTGO" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_MTYPE
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_MTYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MTYPE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_MTYPE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_MTYPE" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_OPERATIONINFOR
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_OPERATIONINFOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_OPERATIONINFOR" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_OPERATIONINFOR
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_OPERATIONINFOR" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_PECCANCY_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_PECCANCY_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD CHECK ("AREA_CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD CHECK ("IS_CHECK" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD CHECK ("IS_PECC" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD CHECK ("IS_DIST" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_PECCANCY_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PECCANCY_MAIN" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_PRODUCE_EQUIP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_PRODUCE_EQUIP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP" ADD CHECK ("EQUIP_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP" ADD CHECK ("ACCEPT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_PRODUCE_EQUIP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_EQUIP" ADD PRIMARY KEY ("EQUIP_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_PRODUCE_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_PRODUCE_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("DEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("QUAL_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("REVIEW_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("SUPER_AUDIT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("SUPER_KEY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("SUPER_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD CHECK ("LEAD_PASS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_PRODUCE_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_MAIN" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_PRODUCE_PRODINST
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_PRODUCE_PRODINST
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST" ADD CHECK ("INST_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST" ADD CHECK ("ACCEPT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_PRODUCE_PRODINST
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_PRODUCE_PRODINST" ADD PRIMARY KEY ("INST_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_READAPP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_READAPP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_READAPP" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_READAPP" ADD CHECK ("MISSIVEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_READAPP" ADD CHECK ("USERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_READAPP" ADD CHECK ("APPSTATUS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_READAPP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_READAPP" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_RESULT_CODE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_RESULT_CODE" ADD CHECK ("CODE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_RESULT_CODE" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_SELL_EQUIP
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_SELL_EQUIP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_EQUIP" ADD CHECK ("EQUIP_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_EQUIP" ADD CHECK ("ACCEPT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_SELL_EQUIP
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_EQUIP" ADD PRIMARY KEY ("EQUIP_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_SELL_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_SELL_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("DEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("QUAL_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("REVIEW_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("SUPER_AUDIT" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("SUPER_KEY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("SUPER_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("LEAD_PASS" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_SELL_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_SELL_MAIN" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Checks structure for table T_RIM_WF_TIMEREMIND
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_TIMEREMIND" ADD CHECK ("GUID" IS NOT NULL);

-- ----------------------------
-- Indexes structure for table T_RIM_WF_TRANSLATEDISPATCH
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_TRANSLATEDISPATCH
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH" ADD CHECK ("FORMERID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH" ADD CHECK ("DISPATCHID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_TRANSLATEDISPATCH
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_TRANSLATEDISPATCH" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_UNKNOWN_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_UNKNOWN_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" ADD CHECK ("ACCEPT_ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" ADD CHECK ("ACCEPT_DATE" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" ADD CHECK ("IS_CHECK" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" ADD CHECK ("IS_UNLAW" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" ADD CHECK ("IS_DIST" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_UNKNOWN_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_UNKNOWN_MAIN" ADD PRIMARY KEY ("ACCEPT_ID");

-- ----------------------------
-- Indexes structure for table T_RIM_WF_WORK_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table T_RIM_WF_WORK_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_WORK_LOG" ADD CHECK ("GUID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."T_RIM_WF_WORK_LOG" ADD CHECK ("WORKID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table T_RIM_WF_WORK_LOG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."T_RIM_WF_WORK_LOG" ADD PRIMARY KEY ("GUID");

-- ----------------------------
-- Indexes structure for table WF_COMMONLY_USED_TERMS
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_COMMONLY_USED_TERMS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_COMMONLY_USED_TERMS" ADD CHECK ("COMMONLY_USED_TERMS_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_COMMONLY_USED_TERMS
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_COMMONLY_USED_TERMS" ADD PRIMARY KEY ("COMMONLY_USED_TERMS_ID");

-- ----------------------------
-- Indexes structure for table WF_CONSIGNMENT
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_CONSIGNMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_CONSIGNMENT" ADD CHECK ("CONSIGNOR" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_CONSIGNMENT" ADD CHECK ("ASSIGNEE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_CONSIGNMENT
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_CONSIGNMENT" ADD PRIMARY KEY ("CONSIGNOR");

-- ----------------------------
-- Indexes structure for table WF_DATAFIELDACL
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_DATAFIELDACL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DATAFIELDACL" ADD CHECK ("PACKAGEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_DATAFIELDACL" ADD CHECK ("PROCESSID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_DATAFIELDACL" ADD CHECK ("ACTIVITYID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_DATAFIELDACL" ADD CHECK ("DATAFIELDID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_DATAFIELDACL
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DATAFIELDACL" ADD PRIMARY KEY ("PACKAGEID", "PROCESSID", "ACTIVITYID", "DATAFIELDID");

-- ----------------------------
-- Indexes structure for table WF_DEF_CACHEACTNAME
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_DEF_CACHEACTNAME
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_CACHEACTNAME" ADD CHECK ("PACKAGEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_DEF_CACHEACTNAME" ADD CHECK ("PROCESSID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_DEF_CACHEACTNAME" ADD CHECK ("ACTIVITYID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_DEF_CACHEACTNAME
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_CACHEACTNAME" ADD PRIMARY KEY ("PACKAGEID", "PROCESSID", "ACTIVITYID");

-- ----------------------------
-- Indexes structure for table WF_DEF_CACHEPKGNAME
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_DEF_CACHEPKGNAME
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_CACHEPKGNAME" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_DEF_CACHEPKGNAME
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_CACHEPKGNAME" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table WF_DEF_MAIN
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_DEF_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_MAIN" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_DEF_MAIN
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_MAIN" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table WF_DEF_VER
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_DEF_VER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_VER" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_DEF_VER" ADD CHECK ("VER" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_DEF_VER
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_DEF_VER" ADD PRIMARY KEY ("VER", "ID");

-- ----------------------------
-- Indexes structure for table WF_RT_ACTIVITY
-- ----------------------------
CREATE INDEX "500000_FREQDB"."IDX_WF_P_ACTIVITY_1"
ON "500000_FREQDB"."WF_RT_ACTIVITY" ("CASEID" ASC, "ACTIVITYID" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table WF_RT_ACTIVITY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_ACTIVITY" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_ACTIVITY
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_ACTIVITY" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table WF_RT_BRANCH
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_RT_BRANCH
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_BRANCH" ADD CHECK ("BRANCHID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_BRANCH" ADD CHECK ("CASEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_BRANCH" ADD CHECK ("SPLITACTIVITY" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_BRANCH" ADD CHECK ("BRANCHNUM" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_BRANCH
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_BRANCH" ADD PRIMARY KEY ("BRANCHID");

-- ----------------------------
-- Indexes structure for table WF_RT_CASE
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_RT_CASE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_CASE" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_CASE" ADD CHECK ("PACKAGEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_CASE" ADD CHECK ("PROCESSID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_CASE" ADD CHECK ("CREATED" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_CASE" ADD CHECK ("STATUS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_CASE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_CASE" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table WF_RT_NOTE
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_RT_NOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_NOTE" ADD CHECK ("WORKID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_NOTE
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_NOTE" ADD PRIMARY KEY ("WORKID");

-- ----------------------------
-- Indexes structure for table WF_RT_ROLLBACKSTACK
-- ----------------------------
CREATE INDEX "500000_FREQDB"."IDX_WF_P_ROLLBACKSTACK_1"
ON "500000_FREQDB"."WF_RT_ROLLBACKSTACK" ("CASEID" ASC, "TRANSACTIONNO" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table WF_RT_ROLLBACKSTACK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_ROLLBACKSTACK" ADD CHECK ("CASEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_ROLLBACKSTACK" ADD CHECK ("OPNO" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_ROLLBACKSTACK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_ROLLBACKSTACK" ADD PRIMARY KEY ("CASEID", "OPNO");

-- ----------------------------
-- Indexes structure for table WF_RT_WORK
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_RT_WORK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_WORK" ADD CHECK ("WORKID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_WORK
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_WORK" ADD PRIMARY KEY ("WORKID");

-- ----------------------------
-- Indexes structure for table WF_RT_WORK_XIETONG
-- ----------------------------

-- ----------------------------
-- Checks structure for table WF_RT_WORK_XIETONG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" ADD CHECK ("CASEID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" ADD CHECK ("WORKID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" ADD CHECK ("ACTIVITYINSTID" IS NOT NULL);
ALTER TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" ADD CHECK ("PERFORMER" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table WF_RT_WORK_XIETONG
-- ----------------------------
ALTER TABLE "500000_FREQDB"."WF_RT_WORK_XIETONG" ADD PRIMARY KEY ("WORKID");
